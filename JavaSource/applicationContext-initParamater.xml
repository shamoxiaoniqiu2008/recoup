<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
						   http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
						   http://www.springframework.org/schema/context
						   http://www.springframework.org/schema/context/spring-context-3.0.xsd
						   http://www.springframework.org/schema/tx
						   http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
						   http://www.springframework.org/schema/aop 
						   http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">
	
	<!-- 以下整合来自mybatis官网 详情可参考网站http://mybatis.github.io/spring/ -->
	
	
		<bean class="org.springframework.beans.factory.config.CustomScopeConfigurer">
        <property name="scopes">
            <map>
                <entry key="view">
                    <bean class="com.onlyfido.util.ViewScope"/>
                </entry>
            </map>
        </property>
    </bean>
    
	<!-- 加载属性文件 -->		   
	<context:property-placeholder location="classpath:jdbc.properties"/>
	

	<!-- 定义数据库 -->
	<!-- configure datasource -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${jdbc.driverClassName}"></property>
		<property name="url" value="${jdbc.url}"></property>
		<property name="username" value="${jdbc.username}"></property>
		<property name="password" value="${jdbc.password}"></property>
		<property name="initialSize" value="${jdbc.initialSize}" />
		<!-- maxActive：最大连接数据库连接数，设置为0时，表示没有限制 -->
		<property name="maxActive" value="${jdbc.maxActive}" />
		<!-- maxIdle：最大等待连接中的数量，设置为0时，表示没有限制 -->
		<property name="maxIdle" value="${jdbc.maxIdle}" />
		<property name="minIdle" value="${jdbc.minIdle}" />
	</bean>
	
	<!-- Spring的事务管理器管理事务-->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>


	<!-- Activates @Transactional for DefaultImageDatabase 使用注解方式来使用声明事物 -->
	<tx:annotation-driven transaction-manager="transactionManager" />

	<!-- 
		enable component scanning (beware that this does not enable mapper scanning!) 
		扫描组件,@repository,@service,@controller,是@component的细化
		@autowired的作用是实现set、get方法
	-->
	<context:component-scan base-package="service"></context:component-scan>
	<context:component-scan base-package="util"></context:component-scan>




	<!--  以下就是mybatis-spring的配置 -->

	<!-- MyBatis整合spring，必须定义至少两样东西：一个SqlSessionFactory和至少一个数据映射器类 -->
	<!-- SqlsessionFactory -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!--此处定义typeAliasesPackage，mapper的resultType不用写全名-->
		<property name="typeAliasesPackage" value="domain" />
	</bean>
	
	<!-- 扫描mapper 注册mybatis -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="persistence" />
	</bean>
  	

</beans>
