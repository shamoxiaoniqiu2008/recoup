package domain.receptionManage;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class PensionGuestrecordExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table pension_guestrecord
	 * @mbggenerated  Tue Sep 10 14:31:58 CST 2013
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table pension_guestrecord
	 * @mbggenerated  Tue Sep 10 14:31:58 CST 2013
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table pension_guestrecord
	 * @mbggenerated  Tue Sep 10 14:31:58 CST 2013
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_guestrecord
	 * @mbggenerated  Tue Sep 10 14:31:58 CST 2013
	 */
	public PensionGuestrecordExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_guestrecord
	 * @mbggenerated  Tue Sep 10 14:31:58 CST 2013
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_guestrecord
	 * @mbggenerated  Tue Sep 10 14:31:58 CST 2013
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_guestrecord
	 * @mbggenerated  Tue Sep 10 14:31:58 CST 2013
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_guestrecord
	 * @mbggenerated  Tue Sep 10 14:31:58 CST 2013
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_guestrecord
	 * @mbggenerated  Tue Sep 10 14:31:58 CST 2013
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_guestrecord
	 * @mbggenerated  Tue Sep 10 14:31:58 CST 2013
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_guestrecord
	 * @mbggenerated  Tue Sep 10 14:31:58 CST 2013
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_guestrecord
	 * @mbggenerated  Tue Sep 10 14:31:58 CST 2013
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_guestrecord
	 * @mbggenerated  Tue Sep 10 14:31:58 CST 2013
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_guestrecord
	 * @mbggenerated  Tue Sep 10 14:31:58 CST 2013
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table pension_guestrecord
	 * @mbggenerated  Tue Sep 10 14:31:58 CST 2013
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null || value.toString().equals("")) {
				addCriterion("1=1");
				return;
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null
					|| value1.toString().equals("")
					|| value2.toString().equals("")) {
				addCriterion("1=1");
				return;
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		public Criteria andIdIsNull() {
			addCriterion("id is null");
			return (Criteria) this;
		}

		public Criteria andIdIsNotNull() {
			addCriterion("id is not null");
			return (Criteria) this;
		}

		public Criteria andIdEqualTo(Long value) {
			addCriterion("id =", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotEqualTo(Long value) {
			addCriterion("id <>", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThan(Long value) {
			addCriterion("id >", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThanOrEqualTo(Long value) {
			addCriterion("id >=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThan(Long value) {
			addCriterion("id <", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThanOrEqualTo(Long value) {
			addCriterion("id <=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdIn(List<Long> values) {
			addCriterion("id in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotIn(List<Long> values) {
			addCriterion("id not in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdBetween(Long value1, Long value2) {
			addCriterion("id between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotBetween(Long value1, Long value2) {
			addCriterion("id not between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andOlderIdIsNull() {
			addCriterion("older_id is null");
			return (Criteria) this;
		}

		public Criteria andOlderIdIsNotNull() {
			addCriterion("older_id is not null");
			return (Criteria) this;
		}

		public Criteria andOlderIdEqualTo(Long value) {
			addCriterion("older_id =", value, "olderId");
			return (Criteria) this;
		}

		public Criteria andOlderIdNotEqualTo(Long value) {
			addCriterion("older_id <>", value, "olderId");
			return (Criteria) this;
		}

		public Criteria andOlderIdGreaterThan(Long value) {
			addCriterion("older_id >", value, "olderId");
			return (Criteria) this;
		}

		public Criteria andOlderIdGreaterThanOrEqualTo(Long value) {
			addCriterion("older_id >=", value, "olderId");
			return (Criteria) this;
		}

		public Criteria andOlderIdLessThan(Long value) {
			addCriterion("older_id <", value, "olderId");
			return (Criteria) this;
		}

		public Criteria andOlderIdLessThanOrEqualTo(Long value) {
			addCriterion("older_id <=", value, "olderId");
			return (Criteria) this;
		}

		public Criteria andOlderIdIn(List<Long> values) {
			addCriterion("older_id in", values, "olderId");
			return (Criteria) this;
		}

		public Criteria andOlderIdNotIn(List<Long> values) {
			addCriterion("older_id not in", values, "olderId");
			return (Criteria) this;
		}

		public Criteria andOlderIdBetween(Long value1, Long value2) {
			addCriterion("older_id between", value1, value2, "olderId");
			return (Criteria) this;
		}

		public Criteria andOlderIdNotBetween(Long value1, Long value2) {
			addCriterion("older_id not between", value1, value2, "olderId");
			return (Criteria) this;
		}

		public Criteria andNameIsNull() {
			addCriterion("name is null");
			return (Criteria) this;
		}

		public Criteria andNameIsNotNull() {
			addCriterion("name is not null");
			return (Criteria) this;
		}

		public Criteria andNameEqualTo(String value) {
			addCriterion("name =", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameNotEqualTo(String value) {
			addCriterion("name <>", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameGreaterThan(String value) {
			addCriterion("name >", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameGreaterThanOrEqualTo(String value) {
			addCriterion("name >=", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameLessThan(String value) {
			addCriterion("name <", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameLessThanOrEqualTo(String value) {
			addCriterion("name <=", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameLike(String value) {
			addCriterion("name like", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameNotLike(String value) {
			addCriterion("name not like", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameIn(List<String> values) {
			addCriterion("name in", values, "name");
			return (Criteria) this;
		}

		public Criteria andNameNotIn(List<String> values) {
			addCriterion("name not in", values, "name");
			return (Criteria) this;
		}

		public Criteria andNameBetween(String value1, String value2) {
			addCriterion("name between", value1, value2, "name");
			return (Criteria) this;
		}

		public Criteria andNameNotBetween(String value1, String value2) {
			addCriterion("name not between", value1, value2, "name");
			return (Criteria) this;
		}

		public Criteria andRelationIdIsNull() {
			addCriterion("relation_id is null");
			return (Criteria) this;
		}

		public Criteria andRelationIdIsNotNull() {
			addCriterion("relation_id is not null");
			return (Criteria) this;
		}

		public Criteria andRelationIdEqualTo(Long value) {
			addCriterion("relation_id =", value, "relationId");
			return (Criteria) this;
		}

		public Criteria andRelationIdNotEqualTo(Long value) {
			addCriterion("relation_id <>", value, "relationId");
			return (Criteria) this;
		}

		public Criteria andRelationIdGreaterThan(Long value) {
			addCriterion("relation_id >", value, "relationId");
			return (Criteria) this;
		}

		public Criteria andRelationIdGreaterThanOrEqualTo(Long value) {
			addCriterion("relation_id >=", value, "relationId");
			return (Criteria) this;
		}

		public Criteria andRelationIdLessThan(Long value) {
			addCriterion("relation_id <", value, "relationId");
			return (Criteria) this;
		}

		public Criteria andRelationIdLessThanOrEqualTo(Long value) {
			addCriterion("relation_id <=", value, "relationId");
			return (Criteria) this;
		}

		public Criteria andRelationIdIn(List<Long> values) {
			addCriterion("relation_id in", values, "relationId");
			return (Criteria) this;
		}

		public Criteria andRelationIdNotIn(List<Long> values) {
			addCriterion("relation_id not in", values, "relationId");
			return (Criteria) this;
		}

		public Criteria andRelationIdBetween(Long value1, Long value2) {
			addCriterion("relation_id between", value1, value2, "relationId");
			return (Criteria) this;
		}

		public Criteria andRelationIdNotBetween(Long value1, Long value2) {
			addCriterion("relation_id not between", value1, value2,
					"relationId");
			return (Criteria) this;
		}

		public Criteria andVisittimeIsNull() {
			addCriterion("visitTime is null");
			return (Criteria) this;
		}

		public Criteria andVisittimeIsNotNull() {
			addCriterion("visitTime is not null");
			return (Criteria) this;
		}

		public Criteria andVisittimeEqualTo(Date value) {
			addCriterion("visitTime =", value, "visittime");
			return (Criteria) this;
		}

		public Criteria andVisittimeNotEqualTo(Date value) {
			addCriterion("visitTime <>", value, "visittime");
			return (Criteria) this;
		}

		public Criteria andVisittimeGreaterThan(Date value) {
			addCriterion("visitTime >", value, "visittime");
			return (Criteria) this;
		}

		public Criteria andVisittimeGreaterThanOrEqualTo(Date value) {
			addCriterion("visitTime >=", value, "visittime");
			return (Criteria) this;
		}

		public Criteria andVisittimeLessThan(Date value) {
			addCriterion("visitTime <", value, "visittime");
			return (Criteria) this;
		}

		public Criteria andVisittimeLessThanOrEqualTo(Date value) {
			addCriterion("visitTime <=", value, "visittime");
			return (Criteria) this;
		}

		public Criteria andVisittimeIn(List<Date> values) {
			addCriterion("visitTime in", values, "visittime");
			return (Criteria) this;
		}

		public Criteria andVisittimeNotIn(List<Date> values) {
			addCriterion("visitTime not in", values, "visittime");
			return (Criteria) this;
		}

		public Criteria andVisittimeBetween(Date value1, Date value2) {
			addCriterion("visitTime between", value1, value2, "visittime");
			return (Criteria) this;
		}

		public Criteria andVisittimeNotBetween(Date value1, Date value2) {
			addCriterion("visitTime not between", value1, value2, "visittime");
			return (Criteria) this;
		}

		public Criteria andVisittypeIsNull() {
			addCriterion("visitType is null");
			return (Criteria) this;
		}

		public Criteria andVisittypeIsNotNull() {
			addCriterion("visitType is not null");
			return (Criteria) this;
		}

		public Criteria andVisittypeEqualTo(Long value) {
			addCriterion("visitType =", value, "visittype");
			return (Criteria) this;
		}

		public Criteria andVisittypeNotEqualTo(Long value) {
			addCriterion("visitType <>", value, "visittype");
			return (Criteria) this;
		}

		public Criteria andVisittypeGreaterThan(Long value) {
			addCriterion("visitType >", value, "visittype");
			return (Criteria) this;
		}

		public Criteria andVisittypeGreaterThanOrEqualTo(Long value) {
			addCriterion("visitType >=", value, "visittype");
			return (Criteria) this;
		}

		public Criteria andVisittypeLessThan(Long value) {
			addCriterion("visitType <", value, "visittype");
			return (Criteria) this;
		}

		public Criteria andVisittypeLessThanOrEqualTo(Long value) {
			addCriterion("visitType <=", value, "visittype");
			return (Criteria) this;
		}

		public Criteria andVisittypeIn(List<Long> values) {
			addCriterion("visitType in", values, "visittype");
			return (Criteria) this;
		}

		public Criteria andVisittypeNotIn(List<Long> values) {
			addCriterion("visitType not in", values, "visittype");
			return (Criteria) this;
		}

		public Criteria andVisittypeBetween(Long value1, Long value2) {
			addCriterion("visitType between", value1, value2, "visittype");
			return (Criteria) this;
		}

		public Criteria andVisittypeNotBetween(Long value1, Long value2) {
			addCriterion("visitType not between", value1, value2, "visittype");
			return (Criteria) this;
		}

		public Criteria andLeavetimeIsNull() {
			addCriterion("leaveTime is null");
			return (Criteria) this;
		}

		public Criteria andLeavetimeIsNotNull() {
			addCriterion("leaveTime is not null");
			return (Criteria) this;
		}

		public Criteria andLeavetimeEqualTo(Date value) {
			addCriterion("leaveTime =", value, "leavetime");
			return (Criteria) this;
		}

		public Criteria andLeavetimeNotEqualTo(Date value) {
			addCriterion("leaveTime <>", value, "leavetime");
			return (Criteria) this;
		}

		public Criteria andLeavetimeGreaterThan(Date value) {
			addCriterion("leaveTime >", value, "leavetime");
			return (Criteria) this;
		}

		public Criteria andLeavetimeGreaterThanOrEqualTo(Date value) {
			addCriterion("leaveTime >=", value, "leavetime");
			return (Criteria) this;
		}

		public Criteria andLeavetimeLessThan(Date value) {
			addCriterion("leaveTime <", value, "leavetime");
			return (Criteria) this;
		}

		public Criteria andLeavetimeLessThanOrEqualTo(Date value) {
			addCriterion("leaveTime <=", value, "leavetime");
			return (Criteria) this;
		}

		public Criteria andLeavetimeIn(List<Date> values) {
			addCriterion("leaveTime in", values, "leavetime");
			return (Criteria) this;
		}

		public Criteria andLeavetimeNotIn(List<Date> values) {
			addCriterion("leaveTime not in", values, "leavetime");
			return (Criteria) this;
		}

		public Criteria andLeavetimeBetween(Date value1, Date value2) {
			addCriterion("leaveTime between", value1, value2, "leavetime");
			return (Criteria) this;
		}

		public Criteria andLeavetimeNotBetween(Date value1, Date value2) {
			addCriterion("leaveTime not between", value1, value2, "leavetime");
			return (Criteria) this;
		}

		public Criteria andCarnoIsNull() {
			addCriterion("carNo is null");
			return (Criteria) this;
		}

		public Criteria andCarnoIsNotNull() {
			addCriterion("carNo is not null");
			return (Criteria) this;
		}

		public Criteria andCarnoEqualTo(String value) {
			addCriterion("carNo =", value, "carno");
			return (Criteria) this;
		}

		public Criteria andCarnoNotEqualTo(String value) {
			addCriterion("carNo <>", value, "carno");
			return (Criteria) this;
		}

		public Criteria andCarnoGreaterThan(String value) {
			addCriterion("carNo >", value, "carno");
			return (Criteria) this;
		}

		public Criteria andCarnoGreaterThanOrEqualTo(String value) {
			addCriterion("carNo >=", value, "carno");
			return (Criteria) this;
		}

		public Criteria andCarnoLessThan(String value) {
			addCriterion("carNo <", value, "carno");
			return (Criteria) this;
		}

		public Criteria andCarnoLessThanOrEqualTo(String value) {
			addCriterion("carNo <=", value, "carno");
			return (Criteria) this;
		}

		public Criteria andCarnoLike(String value) {
			addCriterion("carNo like", value, "carno");
			return (Criteria) this;
		}

		public Criteria andCarnoNotLike(String value) {
			addCriterion("carNo not like", value, "carno");
			return (Criteria) this;
		}

		public Criteria andCarnoIn(List<String> values) {
			addCriterion("carNo in", values, "carno");
			return (Criteria) this;
		}

		public Criteria andCarnoNotIn(List<String> values) {
			addCriterion("carNo not in", values, "carno");
			return (Criteria) this;
		}

		public Criteria andCarnoBetween(String value1, String value2) {
			addCriterion("carNo between", value1, value2, "carno");
			return (Criteria) this;
		}

		public Criteria andCarnoNotBetween(String value1, String value2) {
			addCriterion("carNo not between", value1, value2, "carno");
			return (Criteria) this;
		}

		public Criteria andNotesIsNull() {
			addCriterion("notes is null");
			return (Criteria) this;
		}

		public Criteria andNotesIsNotNull() {
			addCriterion("notes is not null");
			return (Criteria) this;
		}

		public Criteria andNotesEqualTo(String value) {
			addCriterion("notes =", value, "notes");
			return (Criteria) this;
		}

		public Criteria andNotesNotEqualTo(String value) {
			addCriterion("notes <>", value, "notes");
			return (Criteria) this;
		}

		public Criteria andNotesGreaterThan(String value) {
			addCriterion("notes >", value, "notes");
			return (Criteria) this;
		}

		public Criteria andNotesGreaterThanOrEqualTo(String value) {
			addCriterion("notes >=", value, "notes");
			return (Criteria) this;
		}

		public Criteria andNotesLessThan(String value) {
			addCriterion("notes <", value, "notes");
			return (Criteria) this;
		}

		public Criteria andNotesLessThanOrEqualTo(String value) {
			addCriterion("notes <=", value, "notes");
			return (Criteria) this;
		}

		public Criteria andNotesLike(String value) {
			addCriterion("notes like", value, "notes");
			return (Criteria) this;
		}

		public Criteria andNotesNotLike(String value) {
			addCriterion("notes not like", value, "notes");
			return (Criteria) this;
		}

		public Criteria andNotesIn(List<String> values) {
			addCriterion("notes in", values, "notes");
			return (Criteria) this;
		}

		public Criteria andNotesNotIn(List<String> values) {
			addCriterion("notes not in", values, "notes");
			return (Criteria) this;
		}

		public Criteria andNotesBetween(String value1, String value2) {
			addCriterion("notes between", value1, value2, "notes");
			return (Criteria) this;
		}

		public Criteria andNotesNotBetween(String value1, String value2) {
			addCriterion("notes not between", value1, value2, "notes");
			return (Criteria) this;
		}

		public Criteria andClearedIsNull() {
			addCriterion("cleared is null");
			return (Criteria) this;
		}

		public Criteria andClearedIsNotNull() {
			addCriterion("cleared is not null");
			return (Criteria) this;
		}

		public Criteria andClearedEqualTo(Integer value) {
			addCriterion("cleared =", value, "cleared");
			return (Criteria) this;
		}

		public Criteria andClearedNotEqualTo(Integer value) {
			addCriterion("cleared <>", value, "cleared");
			return (Criteria) this;
		}

		public Criteria andClearedGreaterThan(Integer value) {
			addCriterion("cleared >", value, "cleared");
			return (Criteria) this;
		}

		public Criteria andClearedGreaterThanOrEqualTo(Integer value) {
			addCriterion("cleared >=", value, "cleared");
			return (Criteria) this;
		}

		public Criteria andClearedLessThan(Integer value) {
			addCriterion("cleared <", value, "cleared");
			return (Criteria) this;
		}

		public Criteria andClearedLessThanOrEqualTo(Integer value) {
			addCriterion("cleared <=", value, "cleared");
			return (Criteria) this;
		}

		public Criteria andClearedIn(List<Integer> values) {
			addCriterion("cleared in", values, "cleared");
			return (Criteria) this;
		}

		public Criteria andClearedNotIn(List<Integer> values) {
			addCriterion("cleared not in", values, "cleared");
			return (Criteria) this;
		}

		public Criteria andClearedBetween(Integer value1, Integer value2) {
			addCriterion("cleared between", value1, value2, "cleared");
			return (Criteria) this;
		}

		public Criteria andClearedNotBetween(Integer value1, Integer value2) {
			addCriterion("cleared not between", value1, value2, "cleared");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table pension_guestrecord
	 * @mbggenerated  Tue Sep 10 14:31:58 CST 2013
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue,
				String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table pension_guestrecord
     *
     * @mbggenerated do_not_delete_during_merge Wed Sep 04 12:45:27 CST 2013
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}