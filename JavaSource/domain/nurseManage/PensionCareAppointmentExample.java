package domain.nurseManage;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class PensionCareAppointmentExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table pension_care_appointment
	 * @mbggenerated  Wed Nov 20 15:36:39 CST 2013
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table pension_care_appointment
	 * @mbggenerated  Wed Nov 20 15:36:39 CST 2013
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table pension_care_appointment
	 * @mbggenerated  Wed Nov 20 15:36:39 CST 2013
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_care_appointment
	 * @mbggenerated  Wed Nov 20 15:36:39 CST 2013
	 */
	public PensionCareAppointmentExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_care_appointment
	 * @mbggenerated  Wed Nov 20 15:36:39 CST 2013
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_care_appointment
	 * @mbggenerated  Wed Nov 20 15:36:39 CST 2013
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_care_appointment
	 * @mbggenerated  Wed Nov 20 15:36:39 CST 2013
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_care_appointment
	 * @mbggenerated  Wed Nov 20 15:36:39 CST 2013
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_care_appointment
	 * @mbggenerated  Wed Nov 20 15:36:39 CST 2013
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_care_appointment
	 * @mbggenerated  Wed Nov 20 15:36:39 CST 2013
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_care_appointment
	 * @mbggenerated  Wed Nov 20 15:36:39 CST 2013
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_care_appointment
	 * @mbggenerated  Wed Nov 20 15:36:39 CST 2013
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_care_appointment
	 * @mbggenerated  Wed Nov 20 15:36:39 CST 2013
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_care_appointment
	 * @mbggenerated  Wed Nov 20 15:36:39 CST 2013
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table pension_care_appointment
	 * @mbggenerated  Wed Nov 20 15:36:39 CST 2013
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null || value.toString().equals("")) {
				addCriterion("1=1");
				return;
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null
					|| value1.toString().equals("")
					|| value2.toString().equals("")) {
				addCriterion("1=1");
				return;
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		public Criteria andIdIsNull() {
			addCriterion("id is null");
			return (Criteria) this;
		}

		public Criteria andIdIsNotNull() {
			addCriterion("id is not null");
			return (Criteria) this;
		}

		public Criteria andIdEqualTo(Long value) {
			addCriterion("id =", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotEqualTo(Long value) {
			addCriterion("id <>", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThan(Long value) {
			addCriterion("id >", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThanOrEqualTo(Long value) {
			addCriterion("id >=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThan(Long value) {
			addCriterion("id <", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThanOrEqualTo(Long value) {
			addCriterion("id <=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdIn(List<Long> values) {
			addCriterion("id in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotIn(List<Long> values) {
			addCriterion("id not in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdBetween(Long value1, Long value2) {
			addCriterion("id between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotBetween(Long value1, Long value2) {
			addCriterion("id not between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andOlderIdIsNull() {
			addCriterion("older_id is null");
			return (Criteria) this;
		}

		public Criteria andOlderIdIsNotNull() {
			addCriterion("older_id is not null");
			return (Criteria) this;
		}

		public Criteria andOlderIdEqualTo(Long value) {
			addCriterion("older_id =", value, "olderId");
			return (Criteria) this;
		}

		public Criteria andOlderIdNotEqualTo(Long value) {
			addCriterion("older_id <>", value, "olderId");
			return (Criteria) this;
		}

		public Criteria andOlderIdGreaterThan(Long value) {
			addCriterion("older_id >", value, "olderId");
			return (Criteria) this;
		}

		public Criteria andOlderIdGreaterThanOrEqualTo(Long value) {
			addCriterion("older_id >=", value, "olderId");
			return (Criteria) this;
		}

		public Criteria andOlderIdLessThan(Long value) {
			addCriterion("older_id <", value, "olderId");
			return (Criteria) this;
		}

		public Criteria andOlderIdLessThanOrEqualTo(Long value) {
			addCriterion("older_id <=", value, "olderId");
			return (Criteria) this;
		}

		public Criteria andOlderIdIn(List<Long> values) {
			addCriterion("older_id in", values, "olderId");
			return (Criteria) this;
		}

		public Criteria andOlderIdNotIn(List<Long> values) {
			addCriterion("older_id not in", values, "olderId");
			return (Criteria) this;
		}

		public Criteria andOlderIdBetween(Long value1, Long value2) {
			addCriterion("older_id between", value1, value2, "olderId");
			return (Criteria) this;
		}

		public Criteria andOlderIdNotBetween(Long value1, Long value2) {
			addCriterion("older_id not between", value1, value2, "olderId");
			return (Criteria) this;
		}

		public Criteria andOlderNameIsNull() {
			addCriterion("older_name is null");
			return (Criteria) this;
		}

		public Criteria andOlderNameIsNotNull() {
			addCriterion("older_name is not null");
			return (Criteria) this;
		}

		public Criteria andOlderNameEqualTo(String value) {
			addCriterion("older_name =", value, "olderName");
			return (Criteria) this;
		}

		public Criteria andOlderNameNotEqualTo(String value) {
			addCriterion("older_name <>", value, "olderName");
			return (Criteria) this;
		}

		public Criteria andOlderNameGreaterThan(String value) {
			addCriterion("older_name >", value, "olderName");
			return (Criteria) this;
		}

		public Criteria andOlderNameGreaterThanOrEqualTo(String value) {
			addCriterion("older_name >=", value, "olderName");
			return (Criteria) this;
		}

		public Criteria andOlderNameLessThan(String value) {
			addCriterion("older_name <", value, "olderName");
			return (Criteria) this;
		}

		public Criteria andOlderNameLessThanOrEqualTo(String value) {
			addCriterion("older_name <=", value, "olderName");
			return (Criteria) this;
		}

		public Criteria andOlderNameLike(String value) {
			addCriterion("older_name like", value, "olderName");
			return (Criteria) this;
		}

		public Criteria andOlderNameNotLike(String value) {
			addCriterion("older_name not like", value, "olderName");
			return (Criteria) this;
		}

		public Criteria andOlderNameIn(List<String> values) {
			addCriterion("older_name in", values, "olderName");
			return (Criteria) this;
		}

		public Criteria andOlderNameNotIn(List<String> values) {
			addCriterion("older_name not in", values, "olderName");
			return (Criteria) this;
		}

		public Criteria andOlderNameBetween(String value1, String value2) {
			addCriterion("older_name between", value1, value2, "olderName");
			return (Criteria) this;
		}

		public Criteria andOlderNameNotBetween(String value1, String value2) {
			addCriterion("older_name not between", value1, value2, "olderName");
			return (Criteria) this;
		}

		public Criteria andAppointmentTimeIsNull() {
			addCriterion("appointment_time is null");
			return (Criteria) this;
		}

		public Criteria andAppointmentTimeIsNotNull() {
			addCriterion("appointment_time is not null");
			return (Criteria) this;
		}

		public Criteria andAppointmentTimeEqualTo(Date value) {
			addCriterion("appointment_time =", value, "appointmentTime");
			return (Criteria) this;
		}

		public Criteria andAppointmentTimeNotEqualTo(Date value) {
			addCriterion("appointment_time <>", value, "appointmentTime");
			return (Criteria) this;
		}

		public Criteria andAppointmentTimeGreaterThan(Date value) {
			addCriterion("appointment_time >", value, "appointmentTime");
			return (Criteria) this;
		}

		public Criteria andAppointmentTimeGreaterThanOrEqualTo(Date value) {
			addCriterion("appointment_time >=", value, "appointmentTime");
			return (Criteria) this;
		}

		public Criteria andAppointmentTimeLessThan(Date value) {
			addCriterion("appointment_time <", value, "appointmentTime");
			return (Criteria) this;
		}

		public Criteria andAppointmentTimeLessThanOrEqualTo(Date value) {
			addCriterion("appointment_time <=", value, "appointmentTime");
			return (Criteria) this;
		}

		public Criteria andAppointmentTimeIn(List<Date> values) {
			addCriterion("appointment_time in", values, "appointmentTime");
			return (Criteria) this;
		}

		public Criteria andAppointmentTimeNotIn(List<Date> values) {
			addCriterion("appointment_time not in", values, "appointmentTime");
			return (Criteria) this;
		}

		public Criteria andAppointmentTimeBetween(Date value1, Date value2) {
			addCriterion("appointment_time between", value1, value2,
					"appointmentTime");
			return (Criteria) this;
		}

		public Criteria andAppointmentTimeNotBetween(Date value1, Date value2) {
			addCriterion("appointment_time not between", value1, value2,
					"appointmentTime");
			return (Criteria) this;
		}

		public Criteria andFamilySignIsNull() {
			addCriterion("family_sign is null");
			return (Criteria) this;
		}

		public Criteria andFamilySignIsNotNull() {
			addCriterion("family_sign is not null");
			return (Criteria) this;
		}

		public Criteria andFamilySignEqualTo(Integer value) {
			addCriterion("family_sign =", value, "familySign");
			return (Criteria) this;
		}

		public Criteria andFamilySignNotEqualTo(Integer value) {
			addCriterion("family_sign <>", value, "familySign");
			return (Criteria) this;
		}

		public Criteria andFamilySignGreaterThan(Integer value) {
			addCriterion("family_sign >", value, "familySign");
			return (Criteria) this;
		}

		public Criteria andFamilySignGreaterThanOrEqualTo(Integer value) {
			addCriterion("family_sign >=", value, "familySign");
			return (Criteria) this;
		}

		public Criteria andFamilySignLessThan(Integer value) {
			addCriterion("family_sign <", value, "familySign");
			return (Criteria) this;
		}

		public Criteria andFamilySignLessThanOrEqualTo(Integer value) {
			addCriterion("family_sign <=", value, "familySign");
			return (Criteria) this;
		}

		public Criteria andFamilySignIn(List<Integer> values) {
			addCriterion("family_sign in", values, "familySign");
			return (Criteria) this;
		}

		public Criteria andFamilySignNotIn(List<Integer> values) {
			addCriterion("family_sign not in", values, "familySign");
			return (Criteria) this;
		}

		public Criteria andFamilySignBetween(Integer value1, Integer value2) {
			addCriterion("family_sign between", value1, value2, "familySign");
			return (Criteria) this;
		}

		public Criteria andFamilySignNotBetween(Integer value1, Integer value2) {
			addCriterion("family_sign not between", value1, value2,
					"familySign");
			return (Criteria) this;
		}

		public Criteria andGenerateFlagIsNull() {
			addCriterion("generate_flag is null");
			return (Criteria) this;
		}

		public Criteria andGenerateFlagIsNotNull() {
			addCriterion("generate_flag is not null");
			return (Criteria) this;
		}

		public Criteria andGenerateFlagEqualTo(Integer value) {
			addCriterion("generate_flag =", value, "generateFlag");
			return (Criteria) this;
		}

		public Criteria andGenerateFlagNotEqualTo(Integer value) {
			addCriterion("generate_flag <>", value, "generateFlag");
			return (Criteria) this;
		}

		public Criteria andGenerateFlagGreaterThan(Integer value) {
			addCriterion("generate_flag >", value, "generateFlag");
			return (Criteria) this;
		}

		public Criteria andGenerateFlagGreaterThanOrEqualTo(Integer value) {
			addCriterion("generate_flag >=", value, "generateFlag");
			return (Criteria) this;
		}

		public Criteria andGenerateFlagLessThan(Integer value) {
			addCriterion("generate_flag <", value, "generateFlag");
			return (Criteria) this;
		}

		public Criteria andGenerateFlagLessThanOrEqualTo(Integer value) {
			addCriterion("generate_flag <=", value, "generateFlag");
			return (Criteria) this;
		}

		public Criteria andGenerateFlagIn(List<Integer> values) {
			addCriterion("generate_flag in", values, "generateFlag");
			return (Criteria) this;
		}

		public Criteria andGenerateFlagNotIn(List<Integer> values) {
			addCriterion("generate_flag not in", values, "generateFlag");
			return (Criteria) this;
		}

		public Criteria andGenerateFlagBetween(Integer value1, Integer value2) {
			addCriterion("generate_flag between", value1, value2,
					"generateFlag");
			return (Criteria) this;
		}

		public Criteria andGenerateFlagNotBetween(Integer value1, Integer value2) {
			addCriterion("generate_flag not between", value1, value2,
					"generateFlag");
			return (Criteria) this;
		}

		public Criteria andSendFlagIsNull() {
			addCriterion("send_flag is null");
			return (Criteria) this;
		}

		public Criteria andSendFlagIsNotNull() {
			addCriterion("send_flag is not null");
			return (Criteria) this;
		}

		public Criteria andSendFlagEqualTo(Integer value) {
			addCriterion("send_flag =", value, "sendFlag");
			return (Criteria) this;
		}

		public Criteria andSendFlagNotEqualTo(Integer value) {
			addCriterion("send_flag <>", value, "sendFlag");
			return (Criteria) this;
		}

		public Criteria andSendFlagGreaterThan(Integer value) {
			addCriterion("send_flag >", value, "sendFlag");
			return (Criteria) this;
		}

		public Criteria andSendFlagGreaterThanOrEqualTo(Integer value) {
			addCriterion("send_flag >=", value, "sendFlag");
			return (Criteria) this;
		}

		public Criteria andSendFlagLessThan(Integer value) {
			addCriterion("send_flag <", value, "sendFlag");
			return (Criteria) this;
		}

		public Criteria andSendFlagLessThanOrEqualTo(Integer value) {
			addCriterion("send_flag <=", value, "sendFlag");
			return (Criteria) this;
		}

		public Criteria andSendFlagIn(List<Integer> values) {
			addCriterion("send_flag in", values, "sendFlag");
			return (Criteria) this;
		}

		public Criteria andSendFlagNotIn(List<Integer> values) {
			addCriterion("send_flag not in", values, "sendFlag");
			return (Criteria) this;
		}

		public Criteria andSendFlagBetween(Integer value1, Integer value2) {
			addCriterion("send_flag between", value1, value2, "sendFlag");
			return (Criteria) this;
		}

		public Criteria andSendFlagNotBetween(Integer value1, Integer value2) {
			addCriterion("send_flag not between", value1, value2, "sendFlag");
			return (Criteria) this;
		}

		public Criteria andClearedIsNull() {
			addCriterion("cleared is null");
			return (Criteria) this;
		}

		public Criteria andClearedIsNotNull() {
			addCriterion("cleared is not null");
			return (Criteria) this;
		}

		public Criteria andClearedEqualTo(Integer value) {
			addCriterion("cleared =", value, "cleared");
			return (Criteria) this;
		}

		public Criteria andClearedNotEqualTo(Integer value) {
			addCriterion("cleared <>", value, "cleared");
			return (Criteria) this;
		}

		public Criteria andClearedGreaterThan(Integer value) {
			addCriterion("cleared >", value, "cleared");
			return (Criteria) this;
		}

		public Criteria andClearedGreaterThanOrEqualTo(Integer value) {
			addCriterion("cleared >=", value, "cleared");
			return (Criteria) this;
		}

		public Criteria andClearedLessThan(Integer value) {
			addCriterion("cleared <", value, "cleared");
			return (Criteria) this;
		}

		public Criteria andClearedLessThanOrEqualTo(Integer value) {
			addCriterion("cleared <=", value, "cleared");
			return (Criteria) this;
		}

		public Criteria andClearedIn(List<Integer> values) {
			addCriterion("cleared in", values, "cleared");
			return (Criteria) this;
		}

		public Criteria andClearedNotIn(List<Integer> values) {
			addCriterion("cleared not in", values, "cleared");
			return (Criteria) this;
		}

		public Criteria andClearedBetween(Integer value1, Integer value2) {
			addCriterion("cleared between", value1, value2, "cleared");
			return (Criteria) this;
		}

		public Criteria andClearedNotBetween(Integer value1, Integer value2) {
			addCriterion("cleared not between", value1, value2, "cleared");
			return (Criteria) this;
		}

		public Criteria andNoteIsNull() {
			addCriterion("note is null");
			return (Criteria) this;
		}

		public Criteria andNoteIsNotNull() {
			addCriterion("note is not null");
			return (Criteria) this;
		}

		public Criteria andNoteEqualTo(String value) {
			addCriterion("note =", value, "note");
			return (Criteria) this;
		}

		public Criteria andNoteNotEqualTo(String value) {
			addCriterion("note <>", value, "note");
			return (Criteria) this;
		}

		public Criteria andNoteGreaterThan(String value) {
			addCriterion("note >", value, "note");
			return (Criteria) this;
		}

		public Criteria andNoteGreaterThanOrEqualTo(String value) {
			addCriterion("note >=", value, "note");
			return (Criteria) this;
		}

		public Criteria andNoteLessThan(String value) {
			addCriterion("note <", value, "note");
			return (Criteria) this;
		}

		public Criteria andNoteLessThanOrEqualTo(String value) {
			addCriterion("note <=", value, "note");
			return (Criteria) this;
		}

		public Criteria andNoteLike(String value) {
			addCriterion("note like", value, "note");
			return (Criteria) this;
		}

		public Criteria andNoteNotLike(String value) {
			addCriterion("note not like", value, "note");
			return (Criteria) this;
		}

		public Criteria andNoteIn(List<String> values) {
			addCriterion("note in", values, "note");
			return (Criteria) this;
		}

		public Criteria andNoteNotIn(List<String> values) {
			addCriterion("note not in", values, "note");
			return (Criteria) this;
		}

		public Criteria andNoteBetween(String value1, String value2) {
			addCriterion("note between", value1, value2, "note");
			return (Criteria) this;
		}

		public Criteria andNoteNotBetween(String value1, String value2) {
			addCriterion("note not between", value1, value2, "note");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table pension_care_appointment
	 * @mbggenerated  Wed Nov 20 15:36:39 CST 2013
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue,
				String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table pension_care_appointment
     *
     * @mbggenerated do_not_delete_during_merge Tue Oct 29 14:58:03 GMT+08:00 2013
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}