package domain.caterManage;

import java.util.ArrayList;
import java.util.List;

public class PensionFoodIngredientExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table pension_food_ingredient
	 * @mbggenerated  Wed Dec 04 11:34:33 CST 2013
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table pension_food_ingredient
	 * @mbggenerated  Wed Dec 04 11:34:33 CST 2013
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table pension_food_ingredient
	 * @mbggenerated  Wed Dec 04 11:34:33 CST 2013
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_food_ingredient
	 * @mbggenerated  Wed Dec 04 11:34:33 CST 2013
	 */
	public PensionFoodIngredientExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_food_ingredient
	 * @mbggenerated  Wed Dec 04 11:34:33 CST 2013
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_food_ingredient
	 * @mbggenerated  Wed Dec 04 11:34:33 CST 2013
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_food_ingredient
	 * @mbggenerated  Wed Dec 04 11:34:33 CST 2013
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_food_ingredient
	 * @mbggenerated  Wed Dec 04 11:34:33 CST 2013
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_food_ingredient
	 * @mbggenerated  Wed Dec 04 11:34:33 CST 2013
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_food_ingredient
	 * @mbggenerated  Wed Dec 04 11:34:33 CST 2013
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_food_ingredient
	 * @mbggenerated  Wed Dec 04 11:34:33 CST 2013
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_food_ingredient
	 * @mbggenerated  Wed Dec 04 11:34:33 CST 2013
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_food_ingredient
	 * @mbggenerated  Wed Dec 04 11:34:33 CST 2013
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_food_ingredient
	 * @mbggenerated  Wed Dec 04 11:34:33 CST 2013
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table pension_food_ingredient
	 * @mbggenerated  Wed Dec 04 11:34:33 CST 2013
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null || value.toString().equals("")) {
				addCriterion("1=1");
				return;
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null
					|| value1.toString().equals("")
					|| value2.toString().equals("")) {
				addCriterion("1=1");
				return;
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		public Criteria andIdIsNull() {
			addCriterion("id is null");
			return (Criteria) this;
		}

		public Criteria andIdIsNotNull() {
			addCriterion("id is not null");
			return (Criteria) this;
		}

		public Criteria andIdEqualTo(Long value) {
			addCriterion("id =", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotEqualTo(Long value) {
			addCriterion("id <>", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThan(Long value) {
			addCriterion("id >", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThanOrEqualTo(Long value) {
			addCriterion("id >=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThan(Long value) {
			addCriterion("id <", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThanOrEqualTo(Long value) {
			addCriterion("id <=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdIn(List<Long> values) {
			addCriterion("id in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotIn(List<Long> values) {
			addCriterion("id not in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdBetween(Long value1, Long value2) {
			addCriterion("id between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotBetween(Long value1, Long value2) {
			addCriterion("id not between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andMenuIdIsNull() {
			addCriterion("menu_id is null");
			return (Criteria) this;
		}

		public Criteria andMenuIdIsNotNull() {
			addCriterion("menu_id is not null");
			return (Criteria) this;
		}

		public Criteria andMenuIdEqualTo(Long value) {
			addCriterion("menu_id =", value, "menuId");
			return (Criteria) this;
		}

		public Criteria andMenuIdNotEqualTo(Long value) {
			addCriterion("menu_id <>", value, "menuId");
			return (Criteria) this;
		}

		public Criteria andMenuIdGreaterThan(Long value) {
			addCriterion("menu_id >", value, "menuId");
			return (Criteria) this;
		}

		public Criteria andMenuIdGreaterThanOrEqualTo(Long value) {
			addCriterion("menu_id >=", value, "menuId");
			return (Criteria) this;
		}

		public Criteria andMenuIdLessThan(Long value) {
			addCriterion("menu_id <", value, "menuId");
			return (Criteria) this;
		}

		public Criteria andMenuIdLessThanOrEqualTo(Long value) {
			addCriterion("menu_id <=", value, "menuId");
			return (Criteria) this;
		}

		public Criteria andMenuIdIn(List<Long> values) {
			addCriterion("menu_id in", values, "menuId");
			return (Criteria) this;
		}

		public Criteria andMenuIdNotIn(List<Long> values) {
			addCriterion("menu_id not in", values, "menuId");
			return (Criteria) this;
		}

		public Criteria andMenuIdBetween(Long value1, Long value2) {
			addCriterion("menu_id between", value1, value2, "menuId");
			return (Criteria) this;
		}

		public Criteria andMenuIdNotBetween(Long value1, Long value2) {
			addCriterion("menu_id not between", value1, value2, "menuId");
			return (Criteria) this;
		}

		public Criteria andNameIsNull() {
			addCriterion("NAME is null");
			return (Criteria) this;
		}

		public Criteria andNameIsNotNull() {
			addCriterion("NAME is not null");
			return (Criteria) this;
		}

		public Criteria andNameEqualTo(String value) {
			addCriterion("NAME =", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameNotEqualTo(String value) {
			addCriterion("NAME <>", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameGreaterThan(String value) {
			addCriterion("NAME >", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameGreaterThanOrEqualTo(String value) {
			addCriterion("NAME >=", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameLessThan(String value) {
			addCriterion("NAME <", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameLessThanOrEqualTo(String value) {
			addCriterion("NAME <=", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameLike(String value) {
			addCriterion("NAME like", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameNotLike(String value) {
			addCriterion("NAME not like", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameIn(List<String> values) {
			addCriterion("NAME in", values, "name");
			return (Criteria) this;
		}

		public Criteria andNameNotIn(List<String> values) {
			addCriterion("NAME not in", values, "name");
			return (Criteria) this;
		}

		public Criteria andNameBetween(String value1, String value2) {
			addCriterion("NAME between", value1, value2, "name");
			return (Criteria) this;
		}

		public Criteria andNameNotBetween(String value1, String value2) {
			addCriterion("NAME not between", value1, value2, "name");
			return (Criteria) this;
		}

		public Criteria andIngredientQtyIsNull() {
			addCriterion("ingredient_qty is null");
			return (Criteria) this;
		}

		public Criteria andIngredientQtyIsNotNull() {
			addCriterion("ingredient_qty is not null");
			return (Criteria) this;
		}

		public Criteria andIngredientQtyEqualTo(Float value) {
			addCriterion("ingredient_qty =", value, "ingredientQty");
			return (Criteria) this;
		}

		public Criteria andIngredientQtyNotEqualTo(Float value) {
			addCriterion("ingredient_qty <>", value, "ingredientQty");
			return (Criteria) this;
		}

		public Criteria andIngredientQtyGreaterThan(Float value) {
			addCriterion("ingredient_qty >", value, "ingredientQty");
			return (Criteria) this;
		}

		public Criteria andIngredientQtyGreaterThanOrEqualTo(Float value) {
			addCriterion("ingredient_qty >=", value, "ingredientQty");
			return (Criteria) this;
		}

		public Criteria andIngredientQtyLessThan(Float value) {
			addCriterion("ingredient_qty <", value, "ingredientQty");
			return (Criteria) this;
		}

		public Criteria andIngredientQtyLessThanOrEqualTo(Float value) {
			addCriterion("ingredient_qty <=", value, "ingredientQty");
			return (Criteria) this;
		}

		public Criteria andIngredientQtyIn(List<Float> values) {
			addCriterion("ingredient_qty in", values, "ingredientQty");
			return (Criteria) this;
		}

		public Criteria andIngredientQtyNotIn(List<Float> values) {
			addCriterion("ingredient_qty not in", values, "ingredientQty");
			return (Criteria) this;
		}

		public Criteria andIngredientQtyBetween(Float value1, Float value2) {
			addCriterion("ingredient_qty between", value1, value2,
					"ingredientQty");
			return (Criteria) this;
		}

		public Criteria andIngredientQtyNotBetween(Float value1, Float value2) {
			addCriterion("ingredient_qty not between", value1, value2,
					"ingredientQty");
			return (Criteria) this;
		}

		public Criteria andQtyUnitIsNull() {
			addCriterion("qty_unit is null");
			return (Criteria) this;
		}

		public Criteria andQtyUnitIsNotNull() {
			addCriterion("qty_unit is not null");
			return (Criteria) this;
		}

		public Criteria andQtyUnitEqualTo(String value) {
			addCriterion("qty_unit =", value, "qtyUnit");
			return (Criteria) this;
		}

		public Criteria andQtyUnitNotEqualTo(String value) {
			addCriterion("qty_unit <>", value, "qtyUnit");
			return (Criteria) this;
		}

		public Criteria andQtyUnitGreaterThan(String value) {
			addCriterion("qty_unit >", value, "qtyUnit");
			return (Criteria) this;
		}

		public Criteria andQtyUnitGreaterThanOrEqualTo(String value) {
			addCriterion("qty_unit >=", value, "qtyUnit");
			return (Criteria) this;
		}

		public Criteria andQtyUnitLessThan(String value) {
			addCriterion("qty_unit <", value, "qtyUnit");
			return (Criteria) this;
		}

		public Criteria andQtyUnitLessThanOrEqualTo(String value) {
			addCriterion("qty_unit <=", value, "qtyUnit");
			return (Criteria) this;
		}

		public Criteria andQtyUnitLike(String value) {
			addCriterion("qty_unit like", value, "qtyUnit");
			return (Criteria) this;
		}

		public Criteria andQtyUnitNotLike(String value) {
			addCriterion("qty_unit not like", value, "qtyUnit");
			return (Criteria) this;
		}

		public Criteria andQtyUnitIn(List<String> values) {
			addCriterion("qty_unit in", values, "qtyUnit");
			return (Criteria) this;
		}

		public Criteria andQtyUnitNotIn(List<String> values) {
			addCriterion("qty_unit not in", values, "qtyUnit");
			return (Criteria) this;
		}

		public Criteria andQtyUnitBetween(String value1, String value2) {
			addCriterion("qty_unit between", value1, value2, "qtyUnit");
			return (Criteria) this;
		}

		public Criteria andQtyUnitNotBetween(String value1, String value2) {
			addCriterion("qty_unit not between", value1, value2, "qtyUnit");
			return (Criteria) this;
		}

		public Criteria andItemIdIsNull() {
			addCriterion("item_id is null");
			return (Criteria) this;
		}

		public Criteria andItemIdIsNotNull() {
			addCriterion("item_id is not null");
			return (Criteria) this;
		}

		public Criteria andItemIdEqualTo(Long value) {
			addCriterion("item_id =", value, "itemId");
			return (Criteria) this;
		}

		public Criteria andItemIdNotEqualTo(Long value) {
			addCriterion("item_id <>", value, "itemId");
			return (Criteria) this;
		}

		public Criteria andItemIdGreaterThan(Long value) {
			addCriterion("item_id >", value, "itemId");
			return (Criteria) this;
		}

		public Criteria andItemIdGreaterThanOrEqualTo(Long value) {
			addCriterion("item_id >=", value, "itemId");
			return (Criteria) this;
		}

		public Criteria andItemIdLessThan(Long value) {
			addCriterion("item_id <", value, "itemId");
			return (Criteria) this;
		}

		public Criteria andItemIdLessThanOrEqualTo(Long value) {
			addCriterion("item_id <=", value, "itemId");
			return (Criteria) this;
		}

		public Criteria andItemIdIn(List<Long> values) {
			addCriterion("item_id in", values, "itemId");
			return (Criteria) this;
		}

		public Criteria andItemIdNotIn(List<Long> values) {
			addCriterion("item_id not in", values, "itemId");
			return (Criteria) this;
		}

		public Criteria andItemIdBetween(Long value1, Long value2) {
			addCriterion("item_id between", value1, value2, "itemId");
			return (Criteria) this;
		}

		public Criteria andItemIdNotBetween(Long value1, Long value2) {
			addCriterion("item_id not between", value1, value2, "itemId");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table pension_food_ingredient
	 * @mbggenerated  Wed Dec 04 11:34:33 CST 2013
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue,
				String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table pension_food_ingredient
     *
     * @mbggenerated do_not_delete_during_merge Wed Sep 04 19:28:10 CST 2013
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}