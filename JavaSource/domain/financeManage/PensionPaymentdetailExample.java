package domain.financeManage;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class PensionPaymentdetailExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table pension_paymentdetail
	 * @mbggenerated  Mon Sep 23 16:02:48 CST 2013
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table pension_paymentdetail
	 * @mbggenerated  Mon Sep 23 16:02:48 CST 2013
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table pension_paymentdetail
	 * @mbggenerated  Mon Sep 23 16:02:48 CST 2013
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_paymentdetail
	 * @mbggenerated  Mon Sep 23 16:02:48 CST 2013
	 */
	public PensionPaymentdetailExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_paymentdetail
	 * @mbggenerated  Mon Sep 23 16:02:48 CST 2013
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_paymentdetail
	 * @mbggenerated  Mon Sep 23 16:02:48 CST 2013
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_paymentdetail
	 * @mbggenerated  Mon Sep 23 16:02:48 CST 2013
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_paymentdetail
	 * @mbggenerated  Mon Sep 23 16:02:48 CST 2013
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_paymentdetail
	 * @mbggenerated  Mon Sep 23 16:02:48 CST 2013
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_paymentdetail
	 * @mbggenerated  Mon Sep 23 16:02:48 CST 2013
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_paymentdetail
	 * @mbggenerated  Mon Sep 23 16:02:48 CST 2013
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_paymentdetail
	 * @mbggenerated  Mon Sep 23 16:02:48 CST 2013
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_paymentdetail
	 * @mbggenerated  Mon Sep 23 16:02:48 CST 2013
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_paymentdetail
	 * @mbggenerated  Mon Sep 23 16:02:48 CST 2013
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table pension_paymentdetail
	 * @mbggenerated  Mon Sep 23 16:02:48 CST 2013
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null || value.toString().equals("")) {
				addCriterion("1=1");
				return;
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null
					|| value1.toString().equals("")
					|| value2.toString().equals("")) {
				addCriterion("1=1");
				return;
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		public Criteria andIdIsNull() {
			addCriterion("id is null");
			return (Criteria) this;
		}

		public Criteria andIdIsNotNull() {
			addCriterion("id is not null");
			return (Criteria) this;
		}

		public Criteria andIdEqualTo(Long value) {
			addCriterion("id =", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotEqualTo(Long value) {
			addCriterion("id <>", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThan(Long value) {
			addCriterion("id >", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThanOrEqualTo(Long value) {
			addCriterion("id >=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThan(Long value) {
			addCriterion("id <", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThanOrEqualTo(Long value) {
			addCriterion("id <=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdIn(List<Long> values) {
			addCriterion("id in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotIn(List<Long> values) {
			addCriterion("id not in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdBetween(Long value1, Long value2) {
			addCriterion("id between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotBetween(Long value1, Long value2) {
			addCriterion("id not between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andPaymentidIsNull() {
			addCriterion("paymentID is null");
			return (Criteria) this;
		}

		public Criteria andPaymentidIsNotNull() {
			addCriterion("paymentID is not null");
			return (Criteria) this;
		}

		public Criteria andPaymentidEqualTo(Integer value) {
			addCriterion("paymentID =", value, "paymentid");
			return (Criteria) this;
		}

		public Criteria andPaymentidNotEqualTo(Integer value) {
			addCriterion("paymentID <>", value, "paymentid");
			return (Criteria) this;
		}

		public Criteria andPaymentidGreaterThan(Integer value) {
			addCriterion("paymentID >", value, "paymentid");
			return (Criteria) this;
		}

		public Criteria andPaymentidGreaterThanOrEqualTo(Integer value) {
			addCriterion("paymentID >=", value, "paymentid");
			return (Criteria) this;
		}

		public Criteria andPaymentidLessThan(Integer value) {
			addCriterion("paymentID <", value, "paymentid");
			return (Criteria) this;
		}

		public Criteria andPaymentidLessThanOrEqualTo(Integer value) {
			addCriterion("paymentID <=", value, "paymentid");
			return (Criteria) this;
		}

		public Criteria andPaymentidIn(List<Integer> values) {
			addCriterion("paymentID in", values, "paymentid");
			return (Criteria) this;
		}

		public Criteria andPaymentidNotIn(List<Integer> values) {
			addCriterion("paymentID not in", values, "paymentid");
			return (Criteria) this;
		}

		public Criteria andPaymentidBetween(Integer value1, Integer value2) {
			addCriterion("paymentID between", value1, value2, "paymentid");
			return (Criteria) this;
		}

		public Criteria andPaymentidNotBetween(Integer value1, Integer value2) {
			addCriterion("paymentID not between", value1, value2, "paymentid");
			return (Criteria) this;
		}

		public Criteria andPaytypeIdIsNull() {
			addCriterion("payType_id is null");
			return (Criteria) this;
		}

		public Criteria andPaytypeIdIsNotNull() {
			addCriterion("payType_id is not null");
			return (Criteria) this;
		}

		public Criteria andPaytypeIdEqualTo(Integer value) {
			addCriterion("payType_id =", value, "paytypeId");
			return (Criteria) this;
		}

		public Criteria andPaytypeIdNotEqualTo(Integer value) {
			addCriterion("payType_id <>", value, "paytypeId");
			return (Criteria) this;
		}

		public Criteria andPaytypeIdGreaterThan(Integer value) {
			addCriterion("payType_id >", value, "paytypeId");
			return (Criteria) this;
		}

		public Criteria andPaytypeIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("payType_id >=", value, "paytypeId");
			return (Criteria) this;
		}

		public Criteria andPaytypeIdLessThan(Integer value) {
			addCriterion("payType_id <", value, "paytypeId");
			return (Criteria) this;
		}

		public Criteria andPaytypeIdLessThanOrEqualTo(Integer value) {
			addCriterion("payType_id <=", value, "paytypeId");
			return (Criteria) this;
		}

		public Criteria andPaytypeIdIn(List<Integer> values) {
			addCriterion("payType_id in", values, "paytypeId");
			return (Criteria) this;
		}

		public Criteria andPaytypeIdNotIn(List<Integer> values) {
			addCriterion("payType_id not in", values, "paytypeId");
			return (Criteria) this;
		}

		public Criteria andPaytypeIdBetween(Integer value1, Integer value2) {
			addCriterion("payType_id between", value1, value2, "paytypeId");
			return (Criteria) this;
		}

		public Criteria andPaytypeIdNotBetween(Integer value1, Integer value2) {
			addCriterion("payType_id not between", value1, value2, "paytypeId");
			return (Criteria) this;
		}

		public Criteria andPaystylenameIsNull() {
			addCriterion("payStyleName is null");
			return (Criteria) this;
		}

		public Criteria andPaystylenameIsNotNull() {
			addCriterion("payStyleName is not null");
			return (Criteria) this;
		}

		public Criteria andPaystylenameEqualTo(String value) {
			addCriterion("payStyleName =", value, "paystylename");
			return (Criteria) this;
		}

		public Criteria andPaystylenameNotEqualTo(String value) {
			addCriterion("payStyleName <>", value, "paystylename");
			return (Criteria) this;
		}

		public Criteria andPaystylenameGreaterThan(String value) {
			addCriterion("payStyleName >", value, "paystylename");
			return (Criteria) this;
		}

		public Criteria andPaystylenameGreaterThanOrEqualTo(String value) {
			addCriterion("payStyleName >=", value, "paystylename");
			return (Criteria) this;
		}

		public Criteria andPaystylenameLessThan(String value) {
			addCriterion("payStyleName <", value, "paystylename");
			return (Criteria) this;
		}

		public Criteria andPaystylenameLessThanOrEqualTo(String value) {
			addCriterion("payStyleName <=", value, "paystylename");
			return (Criteria) this;
		}

		public Criteria andPaystylenameLike(String value) {
			addCriterion("payStyleName like", value, "paystylename");
			return (Criteria) this;
		}

		public Criteria andPaystylenameNotLike(String value) {
			addCriterion("payStyleName not like", value, "paystylename");
			return (Criteria) this;
		}

		public Criteria andPaystylenameIn(List<String> values) {
			addCriterion("payStyleName in", values, "paystylename");
			return (Criteria) this;
		}

		public Criteria andPaystylenameNotIn(List<String> values) {
			addCriterion("payStyleName not in", values, "paystylename");
			return (Criteria) this;
		}

		public Criteria andPaystylenameBetween(String value1, String value2) {
			addCriterion("payStyleName between", value1, value2, "paystylename");
			return (Criteria) this;
		}

		public Criteria andPaystylenameNotBetween(String value1, String value2) {
			addCriterion("payStyleName not between", value1, value2,
					"paystylename");
			return (Criteria) this;
		}

		public Criteria andPayStyle_idIsNull() {
			addCriterion("payStyle_id is null");
			return (Criteria) this;
		}

		public Criteria andPayStyle_idIsNotNull() {
			addCriterion("payStyle_id is not null");
			return (Criteria) this;
		}

		public Criteria andPayStyle_idEqualTo(Long value) {
			addCriterion("payStyle_id =", value, "payStyle_id");
			return (Criteria) this;
		}

		public Criteria andPayStyle_idNotEqualTo(Long value) {
			addCriterion("payStyle_id <>", value, "payStyle_id");
			return (Criteria) this;
		}

		public Criteria andPayStyle_idGreaterThan(Long value) {
			addCriterion("payStyle_id >", value, "payStyle_id");
			return (Criteria) this;
		}

		public Criteria andPayStyle_idGreaterThanOrEqualTo(Long value) {
			addCriterion("payStyle_id >=", value, "payStyle_id");
			return (Criteria) this;
		}

		public Criteria andPayStyle_idLessThan(Long value) {
			addCriterion("payStyle_id <", value, "payStyle_id");
			return (Criteria) this;
		}

		public Criteria andPayStyle_idLessThanOrEqualTo(Long value) {
			addCriterion("payStyle_id <=", value, "payStyle_id");
			return (Criteria) this;
		}

		public Criteria andPayStyle_idIn(List<Long> values) {
			addCriterion("payStyle_id in", values, "payStyle_id");
			return (Criteria) this;
		}

		public Criteria andPayStyle_idNotIn(List<Long> values) {
			addCriterion("payStyle_id not in", values, "payStyle_id");
			return (Criteria) this;
		}

		public Criteria andPayStyle_idBetween(Long value1, Long value2) {
			addCriterion("payStyle_id between", value1, value2, "payStyle_id");
			return (Criteria) this;
		}

		public Criteria andPayStyle_idNotBetween(Long value1, Long value2) {
			addCriterion("payStyle_id not between", value1, value2,
					"payStyle_id");
			return (Criteria) this;
		}

		public Criteria andMoneyIsNull() {
			addCriterion("money is null");
			return (Criteria) this;
		}

		public Criteria andMoneyIsNotNull() {
			addCriterion("money is not null");
			return (Criteria) this;
		}

		public Criteria andMoneyEqualTo(Float value) {
			addCriterion("money =", value, "money");
			return (Criteria) this;
		}

		public Criteria andMoneyNotEqualTo(Float value) {
			addCriterion("money <>", value, "money");
			return (Criteria) this;
		}

		public Criteria andMoneyGreaterThan(Float value) {
			addCriterion("money >", value, "money");
			return (Criteria) this;
		}

		public Criteria andMoneyGreaterThanOrEqualTo(Float value) {
			addCriterion("money >=", value, "money");
			return (Criteria) this;
		}

		public Criteria andMoneyLessThan(Float value) {
			addCriterion("money <", value, "money");
			return (Criteria) this;
		}

		public Criteria andMoneyLessThanOrEqualTo(Float value) {
			addCriterion("money <=", value, "money");
			return (Criteria) this;
		}

		public Criteria andMoneyIn(List<Float> values) {
			addCriterion("money in", values, "money");
			return (Criteria) this;
		}

		public Criteria andMoneyNotIn(List<Float> values) {
			addCriterion("money not in", values, "money");
			return (Criteria) this;
		}

		public Criteria andMoneyBetween(Float value1, Float value2) {
			addCriterion("money between", value1, value2, "money");
			return (Criteria) this;
		}

		public Criteria andMoneyNotBetween(Float value1, Float value2) {
			addCriterion("money not between", value1, value2, "money");
			return (Criteria) this;
		}

		public Criteria andPaytimeIsNull() {
			addCriterion("payTime is null");
			return (Criteria) this;
		}

		public Criteria andPaytimeIsNotNull() {
			addCriterion("payTime is not null");
			return (Criteria) this;
		}

		public Criteria andPaytimeEqualTo(Date value) {
			addCriterion("payTime =", value, "paytime");
			return (Criteria) this;
		}

		public Criteria andPaytimeNotEqualTo(Date value) {
			addCriterion("payTime <>", value, "paytime");
			return (Criteria) this;
		}

		public Criteria andPaytimeGreaterThan(Date value) {
			addCriterion("payTime >", value, "paytime");
			return (Criteria) this;
		}

		public Criteria andPaytimeGreaterThanOrEqualTo(Date value) {
			addCriterion("payTime >=", value, "paytime");
			return (Criteria) this;
		}

		public Criteria andPaytimeLessThan(Date value) {
			addCriterion("payTime <", value, "paytime");
			return (Criteria) this;
		}

		public Criteria andPaytimeLessThanOrEqualTo(Date value) {
			addCriterion("payTime <=", value, "paytime");
			return (Criteria) this;
		}

		public Criteria andPaytimeIn(List<Date> values) {
			addCriterion("payTime in", values, "paytime");
			return (Criteria) this;
		}

		public Criteria andPaytimeNotIn(List<Date> values) {
			addCriterion("payTime not in", values, "paytime");
			return (Criteria) this;
		}

		public Criteria andPaytimeBetween(Date value1, Date value2) {
			addCriterion("payTime between", value1, value2, "paytime");
			return (Criteria) this;
		}

		public Criteria andPaytimeNotBetween(Date value1, Date value2) {
			addCriterion("payTime not between", value1, value2, "paytime");
			return (Criteria) this;
		}

		public Criteria andNotesIsNull() {
			addCriterion("notes is null");
			return (Criteria) this;
		}

		public Criteria andNotesIsNotNull() {
			addCriterion("notes is not null");
			return (Criteria) this;
		}

		public Criteria andNotesEqualTo(String value) {
			addCriterion("notes =", value, "notes");
			return (Criteria) this;
		}

		public Criteria andNotesNotEqualTo(String value) {
			addCriterion("notes <>", value, "notes");
			return (Criteria) this;
		}

		public Criteria andNotesGreaterThan(String value) {
			addCriterion("notes >", value, "notes");
			return (Criteria) this;
		}

		public Criteria andNotesGreaterThanOrEqualTo(String value) {
			addCriterion("notes >=", value, "notes");
			return (Criteria) this;
		}

		public Criteria andNotesLessThan(String value) {
			addCriterion("notes <", value, "notes");
			return (Criteria) this;
		}

		public Criteria andNotesLessThanOrEqualTo(String value) {
			addCriterion("notes <=", value, "notes");
			return (Criteria) this;
		}

		public Criteria andNotesLike(String value) {
			addCriterion("notes like", value, "notes");
			return (Criteria) this;
		}

		public Criteria andNotesNotLike(String value) {
			addCriterion("notes not like", value, "notes");
			return (Criteria) this;
		}

		public Criteria andNotesIn(List<String> values) {
			addCriterion("notes in", values, "notes");
			return (Criteria) this;
		}

		public Criteria andNotesNotIn(List<String> values) {
			addCriterion("notes not in", values, "notes");
			return (Criteria) this;
		}

		public Criteria andNotesBetween(String value1, String value2) {
			addCriterion("notes between", value1, value2, "notes");
			return (Criteria) this;
		}

		public Criteria andNotesNotBetween(String value1, String value2) {
			addCriterion("notes not between", value1, value2, "notes");
			return (Criteria) this;
		}

		public Criteria andClearedIsNull() {
			addCriterion("cleared is null");
			return (Criteria) this;
		}

		public Criteria andClearedIsNotNull() {
			addCriterion("cleared is not null");
			return (Criteria) this;
		}

		public Criteria andClearedEqualTo(Integer value) {
			addCriterion("cleared =", value, "cleared");
			return (Criteria) this;
		}

		public Criteria andClearedNotEqualTo(Integer value) {
			addCriterion("cleared <>", value, "cleared");
			return (Criteria) this;
		}

		public Criteria andClearedGreaterThan(Integer value) {
			addCriterion("cleared >", value, "cleared");
			return (Criteria) this;
		}

		public Criteria andClearedGreaterThanOrEqualTo(Integer value) {
			addCriterion("cleared >=", value, "cleared");
			return (Criteria) this;
		}

		public Criteria andClearedLessThan(Integer value) {
			addCriterion("cleared <", value, "cleared");
			return (Criteria) this;
		}

		public Criteria andClearedLessThanOrEqualTo(Integer value) {
			addCriterion("cleared <=", value, "cleared");
			return (Criteria) this;
		}

		public Criteria andClearedIn(List<Integer> values) {
			addCriterion("cleared in", values, "cleared");
			return (Criteria) this;
		}

		public Criteria andClearedNotIn(List<Integer> values) {
			addCriterion("cleared not in", values, "cleared");
			return (Criteria) this;
		}

		public Criteria andClearedBetween(Integer value1, Integer value2) {
			addCriterion("cleared between", value1, value2, "cleared");
			return (Criteria) this;
		}

		public Criteria andClearedNotBetween(Integer value1, Integer value2) {
			addCriterion("cleared not between", value1, value2, "cleared");
			return (Criteria) this;
		}

		public Criteria andPayerIdIsNull() {
			addCriterion("payer_id is null");
			return (Criteria) this;
		}

		public Criteria andPayerIdIsNotNull() {
			addCriterion("payer_id is not null");
			return (Criteria) this;
		}

		public Criteria andPayerIdEqualTo(Long value) {
			addCriterion("payer_id =", value, "payerId");
			return (Criteria) this;
		}

		public Criteria andPayerIdNotEqualTo(Long value) {
			addCriterion("payer_id <>", value, "payerId");
			return (Criteria) this;
		}

		public Criteria andPayerIdGreaterThan(Long value) {
			addCriterion("payer_id >", value, "payerId");
			return (Criteria) this;
		}

		public Criteria andPayerIdGreaterThanOrEqualTo(Long value) {
			addCriterion("payer_id >=", value, "payerId");
			return (Criteria) this;
		}

		public Criteria andPayerIdLessThan(Long value) {
			addCriterion("payer_id <", value, "payerId");
			return (Criteria) this;
		}

		public Criteria andPayerIdLessThanOrEqualTo(Long value) {
			addCriterion("payer_id <=", value, "payerId");
			return (Criteria) this;
		}

		public Criteria andPayerIdIn(List<Long> values) {
			addCriterion("payer_id in", values, "payerId");
			return (Criteria) this;
		}

		public Criteria andPayerIdNotIn(List<Long> values) {
			addCriterion("payer_id not in", values, "payerId");
			return (Criteria) this;
		}

		public Criteria andPayerIdBetween(Long value1, Long value2) {
			addCriterion("payer_id between", value1, value2, "payerId");
			return (Criteria) this;
		}

		public Criteria andPayerIdNotBetween(Long value1, Long value2) {
			addCriterion("payer_id not between", value1, value2, "payerId");
			return (Criteria) this;
		}

		public Criteria andPayNameIsNull() {
			addCriterion("pay_name is null");
			return (Criteria) this;
		}

		public Criteria andPayNameIsNotNull() {
			addCriterion("pay_name is not null");
			return (Criteria) this;
		}

		public Criteria andPayNameEqualTo(String value) {
			addCriterion("pay_name =", value, "payName");
			return (Criteria) this;
		}

		public Criteria andPayNameNotEqualTo(String value) {
			addCriterion("pay_name <>", value, "payName");
			return (Criteria) this;
		}

		public Criteria andPayNameGreaterThan(String value) {
			addCriterion("pay_name >", value, "payName");
			return (Criteria) this;
		}

		public Criteria andPayNameGreaterThanOrEqualTo(String value) {
			addCriterion("pay_name >=", value, "payName");
			return (Criteria) this;
		}

		public Criteria andPayNameLessThan(String value) {
			addCriterion("pay_name <", value, "payName");
			return (Criteria) this;
		}

		public Criteria andPayNameLessThanOrEqualTo(String value) {
			addCriterion("pay_name <=", value, "payName");
			return (Criteria) this;
		}

		public Criteria andPayNameLike(String value) {
			addCriterion("pay_name like", value, "payName");
			return (Criteria) this;
		}

		public Criteria andPayNameNotLike(String value) {
			addCriterion("pay_name not like", value, "payName");
			return (Criteria) this;
		}

		public Criteria andPayNameIn(List<String> values) {
			addCriterion("pay_name in", values, "payName");
			return (Criteria) this;
		}

		public Criteria andPayNameNotIn(List<String> values) {
			addCriterion("pay_name not in", values, "payName");
			return (Criteria) this;
		}

		public Criteria andPayNameBetween(String value1, String value2) {
			addCriterion("pay_name between", value1, value2, "payName");
			return (Criteria) this;
		}

		public Criteria andPayNameNotBetween(String value1, String value2) {
			addCriterion("pay_name not between", value1, value2, "payName");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table pension_paymentdetail
	 * @mbggenerated  Mon Sep 23 16:02:48 CST 2013
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue,
				String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table pension_paymentdetail
     *
     * @mbggenerated do_not_delete_during_merge Thu Aug 29 15:42:16 CST 2013
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}