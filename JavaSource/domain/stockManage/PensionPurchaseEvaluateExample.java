package domain.stockManage;

import java.util.ArrayList;
import java.util.List;
import java.util.Date;

public class PensionPurchaseEvaluateExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table pension_purchase_evaluate
	 * @mbggenerated  Mon Mar 10 13:47:34 CST 2014
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table pension_purchase_evaluate
	 * @mbggenerated  Mon Mar 10 13:47:34 CST 2014
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table pension_purchase_evaluate
	 * @mbggenerated  Mon Mar 10 13:47:34 CST 2014
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_purchase_evaluate
	 * @mbggenerated  Mon Mar 10 13:47:34 CST 2014
	 */
	public PensionPurchaseEvaluateExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_purchase_evaluate
	 * @mbggenerated  Mon Mar 10 13:47:34 CST 2014
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_purchase_evaluate
	 * @mbggenerated  Mon Mar 10 13:47:34 CST 2014
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_purchase_evaluate
	 * @mbggenerated  Mon Mar 10 13:47:34 CST 2014
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_purchase_evaluate
	 * @mbggenerated  Mon Mar 10 13:47:34 CST 2014
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_purchase_evaluate
	 * @mbggenerated  Mon Mar 10 13:47:34 CST 2014
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_purchase_evaluate
	 * @mbggenerated  Mon Mar 10 13:47:34 CST 2014
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_purchase_evaluate
	 * @mbggenerated  Mon Mar 10 13:47:34 CST 2014
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_purchase_evaluate
	 * @mbggenerated  Mon Mar 10 13:47:34 CST 2014
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_purchase_evaluate
	 * @mbggenerated  Mon Mar 10 13:47:34 CST 2014
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_purchase_evaluate
	 * @mbggenerated  Mon Mar 10 13:47:34 CST 2014
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table pension_purchase_evaluate
	 * @mbggenerated  Mon Mar 10 13:47:34 CST 2014
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null || value.toString().equals("")) {
				addCriterion("1=1");
				return;
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null
					|| value1.toString().equals("")
					|| value2.toString().equals("")) {
				addCriterion("1=1");
				return;
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		public Criteria andIdIsNull() {
			addCriterion("id is null");
			return (Criteria) this;
		}

		public Criteria andIdIsNotNull() {
			addCriterion("id is not null");
			return (Criteria) this;
		}

		public Criteria andIdEqualTo(Long value) {
			addCriterion("id =", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotEqualTo(Long value) {
			addCriterion("id <>", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThan(Long value) {
			addCriterion("id >", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThanOrEqualTo(Long value) {
			addCriterion("id >=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThan(Long value) {
			addCriterion("id <", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThanOrEqualTo(Long value) {
			addCriterion("id <=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdIn(List<Long> values) {
			addCriterion("id in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotIn(List<Long> values) {
			addCriterion("id not in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdBetween(Long value1, Long value2) {
			addCriterion("id between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotBetween(Long value1, Long value2) {
			addCriterion("id not between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andApplyIdIsNull() {
			addCriterion("apply_id is null");
			return (Criteria) this;
		}

		public Criteria andApplyIdIsNotNull() {
			addCriterion("apply_id is not null");
			return (Criteria) this;
		}

		public Criteria andApplyIdEqualTo(Long value) {
			addCriterion("apply_id =", value, "applyId");
			return (Criteria) this;
		}

		public Criteria andApplyIdNotEqualTo(Long value) {
			addCriterion("apply_id <>", value, "applyId");
			return (Criteria) this;
		}

		public Criteria andApplyIdGreaterThan(Long value) {
			addCriterion("apply_id >", value, "applyId");
			return (Criteria) this;
		}

		public Criteria andApplyIdGreaterThanOrEqualTo(Long value) {
			addCriterion("apply_id >=", value, "applyId");
			return (Criteria) this;
		}

		public Criteria andApplyIdLessThan(Long value) {
			addCriterion("apply_id <", value, "applyId");
			return (Criteria) this;
		}

		public Criteria andApplyIdLessThanOrEqualTo(Long value) {
			addCriterion("apply_id <=", value, "applyId");
			return (Criteria) this;
		}

		public Criteria andApplyIdIn(List<Long> values) {
			addCriterion("apply_id in", values, "applyId");
			return (Criteria) this;
		}

		public Criteria andApplyIdNotIn(List<Long> values) {
			addCriterion("apply_id not in", values, "applyId");
			return (Criteria) this;
		}

		public Criteria andApplyIdBetween(Long value1, Long value2) {
			addCriterion("apply_id between", value1, value2, "applyId");
			return (Criteria) this;
		}

		public Criteria andApplyIdNotBetween(Long value1, Long value2) {
			addCriterion("apply_id not between", value1, value2, "applyId");
			return (Criteria) this;
		}

		public Criteria andDeptIdIsNull() {
			addCriterion("dept_id is null");
			return (Criteria) this;
		}

		public Criteria andDeptIdIsNotNull() {
			addCriterion("dept_id is not null");
			return (Criteria) this;
		}

		public Criteria andDeptIdEqualTo(Long value) {
			addCriterion("dept_id =", value, "deptId");
			return (Criteria) this;
		}

		public Criteria andDeptIdNotEqualTo(Long value) {
			addCriterion("dept_id <>", value, "deptId");
			return (Criteria) this;
		}

		public Criteria andDeptIdGreaterThan(Long value) {
			addCriterion("dept_id >", value, "deptId");
			return (Criteria) this;
		}

		public Criteria andDeptIdGreaterThanOrEqualTo(Long value) {
			addCriterion("dept_id >=", value, "deptId");
			return (Criteria) this;
		}

		public Criteria andDeptIdLessThan(Long value) {
			addCriterion("dept_id <", value, "deptId");
			return (Criteria) this;
		}

		public Criteria andDeptIdLessThanOrEqualTo(Long value) {
			addCriterion("dept_id <=", value, "deptId");
			return (Criteria) this;
		}

		public Criteria andDeptIdIn(List<Long> values) {
			addCriterion("dept_id in", values, "deptId");
			return (Criteria) this;
		}

		public Criteria andDeptIdNotIn(List<Long> values) {
			addCriterion("dept_id not in", values, "deptId");
			return (Criteria) this;
		}

		public Criteria andDeptIdBetween(Long value1, Long value2) {
			addCriterion("dept_id between", value1, value2, "deptId");
			return (Criteria) this;
		}

		public Criteria andDeptIdNotBetween(Long value1, Long value2) {
			addCriterion("dept_id not between", value1, value2, "deptId");
			return (Criteria) this;
		}

		public Criteria andEvaluatorIdIsNull() {
			addCriterion("evaluator_id is null");
			return (Criteria) this;
		}

		public Criteria andEvaluatorIdIsNotNull() {
			addCriterion("evaluator_id is not null");
			return (Criteria) this;
		}

		public Criteria andEvaluatorIdEqualTo(Long value) {
			addCriterion("evaluator_id =", value, "evaluatorId");
			return (Criteria) this;
		}

		public Criteria andEvaluatorIdNotEqualTo(Long value) {
			addCriterion("evaluator_id <>", value, "evaluatorId");
			return (Criteria) this;
		}

		public Criteria andEvaluatorIdGreaterThan(Long value) {
			addCriterion("evaluator_id >", value, "evaluatorId");
			return (Criteria) this;
		}

		public Criteria andEvaluatorIdGreaterThanOrEqualTo(Long value) {
			addCriterion("evaluator_id >=", value, "evaluatorId");
			return (Criteria) this;
		}

		public Criteria andEvaluatorIdLessThan(Long value) {
			addCriterion("evaluator_id <", value, "evaluatorId");
			return (Criteria) this;
		}

		public Criteria andEvaluatorIdLessThanOrEqualTo(Long value) {
			addCriterion("evaluator_id <=", value, "evaluatorId");
			return (Criteria) this;
		}

		public Criteria andEvaluatorIdIn(List<Long> values) {
			addCriterion("evaluator_id in", values, "evaluatorId");
			return (Criteria) this;
		}

		public Criteria andEvaluatorIdNotIn(List<Long> values) {
			addCriterion("evaluator_id not in", values, "evaluatorId");
			return (Criteria) this;
		}

		public Criteria andEvaluatorIdBetween(Long value1, Long value2) {
			addCriterion("evaluator_id between", value1, value2, "evaluatorId");
			return (Criteria) this;
		}

		public Criteria andEvaluatorIdNotBetween(Long value1, Long value2) {
			addCriterion("evaluator_id not between", value1, value2,
					"evaluatorId");
			return (Criteria) this;
		}

		public Criteria andEvaluatorNameIsNull() {
			addCriterion("evaluator_name is null");
			return (Criteria) this;
		}

		public Criteria andEvaluatorNameIsNotNull() {
			addCriterion("evaluator_name is not null");
			return (Criteria) this;
		}

		public Criteria andEvaluatorNameEqualTo(String value) {
			addCriterion("evaluator_name =", value, "evaluatorName");
			return (Criteria) this;
		}

		public Criteria andEvaluatorNameNotEqualTo(String value) {
			addCriterion("evaluator_name <>", value, "evaluatorName");
			return (Criteria) this;
		}

		public Criteria andEvaluatorNameGreaterThan(String value) {
			addCriterion("evaluator_name >", value, "evaluatorName");
			return (Criteria) this;
		}

		public Criteria andEvaluatorNameGreaterThanOrEqualTo(String value) {
			addCriterion("evaluator_name >=", value, "evaluatorName");
			return (Criteria) this;
		}

		public Criteria andEvaluatorNameLessThan(String value) {
			addCriterion("evaluator_name <", value, "evaluatorName");
			return (Criteria) this;
		}

		public Criteria andEvaluatorNameLessThanOrEqualTo(String value) {
			addCriterion("evaluator_name <=", value, "evaluatorName");
			return (Criteria) this;
		}

		public Criteria andEvaluatorNameLike(String value) {
			addCriterion("evaluator_name like", value, "evaluatorName");
			return (Criteria) this;
		}

		public Criteria andEvaluatorNameNotLike(String value) {
			addCriterion("evaluator_name not like", value, "evaluatorName");
			return (Criteria) this;
		}

		public Criteria andEvaluatorNameIn(List<String> values) {
			addCriterion("evaluator_name in", values, "evaluatorName");
			return (Criteria) this;
		}

		public Criteria andEvaluatorNameNotIn(List<String> values) {
			addCriterion("evaluator_name not in", values, "evaluatorName");
			return (Criteria) this;
		}

		public Criteria andEvaluatorNameBetween(String value1, String value2) {
			addCriterion("evaluator_name between", value1, value2,
					"evaluatorName");
			return (Criteria) this;
		}

		public Criteria andEvaluatorNameNotBetween(String value1, String value2) {
			addCriterion("evaluator_name not between", value1, value2,
					"evaluatorName");
			return (Criteria) this;
		}

		public Criteria andEvaluateResultIsNull() {
			addCriterion("evaluate_result is null");
			return (Criteria) this;
		}

		public Criteria andEvaluateResultIsNotNull() {
			addCriterion("evaluate_result is not null");
			return (Criteria) this;
		}

		public Criteria andEvaluateResultEqualTo(Integer value) {
			addCriterion("evaluate_result =", value, "evaluateResult");
			return (Criteria) this;
		}

		public Criteria andEvaluateResultNotEqualTo(Integer value) {
			addCriterion("evaluate_result <>", value, "evaluateResult");
			return (Criteria) this;
		}

		public Criteria andEvaluateResultGreaterThan(Integer value) {
			addCriterion("evaluate_result >", value, "evaluateResult");
			return (Criteria) this;
		}

		public Criteria andEvaluateResultGreaterThanOrEqualTo(Integer value) {
			addCriterion("evaluate_result >=", value, "evaluateResult");
			return (Criteria) this;
		}

		public Criteria andEvaluateResultLessThan(Integer value) {
			addCriterion("evaluate_result <", value, "evaluateResult");
			return (Criteria) this;
		}

		public Criteria andEvaluateResultLessThanOrEqualTo(Integer value) {
			addCriterion("evaluate_result <=", value, "evaluateResult");
			return (Criteria) this;
		}

		public Criteria andEvaluateResultIn(List<Integer> values) {
			addCriterion("evaluate_result in", values, "evaluateResult");
			return (Criteria) this;
		}

		public Criteria andEvaluateResultNotIn(List<Integer> values) {
			addCriterion("evaluate_result not in", values, "evaluateResult");
			return (Criteria) this;
		}

		public Criteria andEvaluateResultBetween(Integer value1, Integer value2) {
			addCriterion("evaluate_result between", value1, value2,
					"evaluateResult");
			return (Criteria) this;
		}

		public Criteria andEvaluateResultNotBetween(Integer value1,
				Integer value2) {
			addCriterion("evaluate_result not between", value1, value2,
					"evaluateResult");
			return (Criteria) this;
		}

		public Criteria andEvaluateDateIsNull() {
			addCriterion("evaluate_date is null");
			return (Criteria) this;
		}

		public Criteria andEvaluateDateIsNotNull() {
			addCriterion("evaluate_date is not null");
			return (Criteria) this;
		}

		public Criteria andEvaluateDateEqualTo(Date value) {
			addCriterion("evaluate_date =", value, "evaluateDate");
			return (Criteria) this;
		}

		public Criteria andEvaluateDateNotEqualTo(Date value) {
			addCriterion("evaluate_date <>", value, "evaluateDate");
			return (Criteria) this;
		}

		public Criteria andEvaluateDateGreaterThan(Date value) {
			addCriterion("evaluate_date >", value, "evaluateDate");
			return (Criteria) this;
		}

		public Criteria andEvaluateDateGreaterThanOrEqualTo(Date value) {
			addCriterion("evaluate_date >=", value, "evaluateDate");
			return (Criteria) this;
		}

		public Criteria andEvaluateDateLessThan(Date value) {
			addCriterion("evaluate_date <", value, "evaluateDate");
			return (Criteria) this;
		}

		public Criteria andEvaluateDateLessThanOrEqualTo(Date value) {
			addCriterion("evaluate_date <=", value, "evaluateDate");
			return (Criteria) this;
		}

		public Criteria andEvaluateDateIn(List<Date> values) {
			addCriterion("evaluate_date in", values, "evaluateDate");
			return (Criteria) this;
		}

		public Criteria andEvaluateDateNotIn(List<Date> values) {
			addCriterion("evaluate_date not in", values, "evaluateDate");
			return (Criteria) this;
		}

		public Criteria andEvaluateDateBetween(Date value1, Date value2) {
			addCriterion("evaluate_date between", value1, value2,
					"evaluateDate");
			return (Criteria) this;
		}

		public Criteria andEvaluateDateNotBetween(Date value1, Date value2) {
			addCriterion("evaluate_date not between", value1, value2,
					"evaluateDate");
			return (Criteria) this;
		}

		public Criteria andNoteIsNull() {
			addCriterion("note is null");
			return (Criteria) this;
		}

		public Criteria andNoteIsNotNull() {
			addCriterion("note is not null");
			return (Criteria) this;
		}

		public Criteria andNoteEqualTo(String value) {
			addCriterion("note =", value, "note");
			return (Criteria) this;
		}

		public Criteria andNoteNotEqualTo(String value) {
			addCriterion("note <>", value, "note");
			return (Criteria) this;
		}

		public Criteria andNoteGreaterThan(String value) {
			addCriterion("note >", value, "note");
			return (Criteria) this;
		}

		public Criteria andNoteGreaterThanOrEqualTo(String value) {
			addCriterion("note >=", value, "note");
			return (Criteria) this;
		}

		public Criteria andNoteLessThan(String value) {
			addCriterion("note <", value, "note");
			return (Criteria) this;
		}

		public Criteria andNoteLessThanOrEqualTo(String value) {
			addCriterion("note <=", value, "note");
			return (Criteria) this;
		}

		public Criteria andNoteLike(String value) {
			addCriterion("note like", value, "note");
			return (Criteria) this;
		}

		public Criteria andNoteNotLike(String value) {
			addCriterion("note not like", value, "note");
			return (Criteria) this;
		}

		public Criteria andNoteIn(List<String> values) {
			addCriterion("note in", values, "note");
			return (Criteria) this;
		}

		public Criteria andNoteNotIn(List<String> values) {
			addCriterion("note not in", values, "note");
			return (Criteria) this;
		}

		public Criteria andNoteBetween(String value1, String value2) {
			addCriterion("note between", value1, value2, "note");
			return (Criteria) this;
		}

		public Criteria andNoteNotBetween(String value1, String value2) {
			addCriterion("note not between", value1, value2, "note");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table pension_purchase_evaluate
	 * @mbggenerated  Mon Mar 10 13:47:34 CST 2014
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue,
				String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table pension_purchase_evaluate
     *
     * @mbggenerated do_not_delete_during_merge Thu Nov 28 14:12:08 CST 2013
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}