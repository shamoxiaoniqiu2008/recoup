package domain.stockManage;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class PensionStorageinRecordExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table pension_storagein_record
	 * @mbggenerated  Tue Nov 26 16:10:30 CST 2013
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table pension_storagein_record
	 * @mbggenerated  Tue Nov 26 16:10:30 CST 2013
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table pension_storagein_record
	 * @mbggenerated  Tue Nov 26 16:10:30 CST 2013
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_storagein_record
	 * @mbggenerated  Tue Nov 26 16:10:30 CST 2013
	 */
	public PensionStorageinRecordExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_storagein_record
	 * @mbggenerated  Tue Nov 26 16:10:30 CST 2013
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_storagein_record
	 * @mbggenerated  Tue Nov 26 16:10:30 CST 2013
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_storagein_record
	 * @mbggenerated  Tue Nov 26 16:10:30 CST 2013
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_storagein_record
	 * @mbggenerated  Tue Nov 26 16:10:30 CST 2013
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_storagein_record
	 * @mbggenerated  Tue Nov 26 16:10:30 CST 2013
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_storagein_record
	 * @mbggenerated  Tue Nov 26 16:10:30 CST 2013
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_storagein_record
	 * @mbggenerated  Tue Nov 26 16:10:30 CST 2013
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_storagein_record
	 * @mbggenerated  Tue Nov 26 16:10:30 CST 2013
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_storagein_record
	 * @mbggenerated  Tue Nov 26 16:10:30 CST 2013
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_storagein_record
	 * @mbggenerated  Tue Nov 26 16:10:30 CST 2013
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table pension_storagein_record
	 * @mbggenerated  Tue Nov 26 16:10:30 CST 2013
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null || value.toString().equals("")) {
				addCriterion("1=1");
				return;
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null
					|| value1.toString().equals("")
					|| value2.toString().equals("")) {
				addCriterion("1=1");
				return;
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		public Criteria andIdIsNull() {
			addCriterion("id is null");
			return (Criteria) this;
		}

		public Criteria andIdIsNotNull() {
			addCriterion("id is not null");
			return (Criteria) this;
		}

		public Criteria andIdEqualTo(Long value) {
			addCriterion("id =", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotEqualTo(Long value) {
			addCriterion("id <>", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThan(Long value) {
			addCriterion("id >", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThanOrEqualTo(Long value) {
			addCriterion("id >=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThan(Long value) {
			addCriterion("id <", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThanOrEqualTo(Long value) {
			addCriterion("id <=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdIn(List<Long> values) {
			addCriterion("id in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotIn(List<Long> values) {
			addCriterion("id not in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdBetween(Long value1, Long value2) {
			addCriterion("id between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotBetween(Long value1, Long value2) {
			addCriterion("id not between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andStorageinNoIsNull() {
			addCriterion("storagein_no is null");
			return (Criteria) this;
		}

		public Criteria andStorageinNoIsNotNull() {
			addCriterion("storagein_no is not null");
			return (Criteria) this;
		}

		public Criteria andStorageinNoEqualTo(String value) {
			addCriterion("storagein_no =", value, "storageinNo");
			return (Criteria) this;
		}

		public Criteria andStorageinNoNotEqualTo(String value) {
			addCriterion("storagein_no <>", value, "storageinNo");
			return (Criteria) this;
		}

		public Criteria andStorageinNoGreaterThan(String value) {
			addCriterion("storagein_no >", value, "storageinNo");
			return (Criteria) this;
		}

		public Criteria andStorageinNoGreaterThanOrEqualTo(String value) {
			addCriterion("storagein_no >=", value, "storageinNo");
			return (Criteria) this;
		}

		public Criteria andStorageinNoLessThan(String value) {
			addCriterion("storagein_no <", value, "storageinNo");
			return (Criteria) this;
		}

		public Criteria andStorageinNoLessThanOrEqualTo(String value) {
			addCriterion("storagein_no <=", value, "storageinNo");
			return (Criteria) this;
		}

		public Criteria andStorageinNoLike(String value) {
			addCriterion("storagein_no like", value, "storageinNo");
			return (Criteria) this;
		}

		public Criteria andStorageinNoNotLike(String value) {
			addCriterion("storagein_no not like", value, "storageinNo");
			return (Criteria) this;
		}

		public Criteria andStorageinNoIn(List<String> values) {
			addCriterion("storagein_no in", values, "storageinNo");
			return (Criteria) this;
		}

		public Criteria andStorageinNoNotIn(List<String> values) {
			addCriterion("storagein_no not in", values, "storageinNo");
			return (Criteria) this;
		}

		public Criteria andStorageinNoBetween(String value1, String value2) {
			addCriterion("storagein_no between", value1, value2, "storageinNo");
			return (Criteria) this;
		}

		public Criteria andStorageinNoNotBetween(String value1, String value2) {
			addCriterion("storagein_no not between", value1, value2,
					"storageinNo");
			return (Criteria) this;
		}

		public Criteria andStorageinTimeIsNull() {
			addCriterion("storagein_time is null");
			return (Criteria) this;
		}

		public Criteria andStorageinTimeIsNotNull() {
			addCriterion("storagein_time is not null");
			return (Criteria) this;
		}

		public Criteria andStorageinTimeEqualTo(Date value) {
			addCriterion("storagein_time =", value, "storageinTime");
			return (Criteria) this;
		}

		public Criteria andStorageinTimeNotEqualTo(Date value) {
			addCriterion("storagein_time <>", value, "storageinTime");
			return (Criteria) this;
		}

		public Criteria andStorageinTimeGreaterThan(Date value) {
			addCriterion("storagein_time >", value, "storageinTime");
			return (Criteria) this;
		}

		public Criteria andStorageinTimeGreaterThanOrEqualTo(Date value) {
			addCriterion("storagein_time >=", value, "storageinTime");
			return (Criteria) this;
		}

		public Criteria andStorageinTimeLessThan(Date value) {
			addCriterion("storagein_time <", value, "storageinTime");
			return (Criteria) this;
		}

		public Criteria andStorageinTimeLessThanOrEqualTo(Date value) {
			addCriterion("storagein_time <=", value, "storageinTime");
			return (Criteria) this;
		}

		public Criteria andStorageinTimeIn(List<Date> values) {
			addCriterion("storagein_time in", values, "storageinTime");
			return (Criteria) this;
		}

		public Criteria andStorageinTimeNotIn(List<Date> values) {
			addCriterion("storagein_time not in", values, "storageinTime");
			return (Criteria) this;
		}

		public Criteria andStorageinTimeBetween(Date value1, Date value2) {
			addCriterion("storagein_time between", value1, value2,
					"storageinTime");
			return (Criteria) this;
		}

		public Criteria andStorageinTimeNotBetween(Date value1, Date value2) {
			addCriterion("storagein_time not between", value1, value2,
					"storageinTime");
			return (Criteria) this;
		}

		public Criteria andOperatorIdIsNull() {
			addCriterion("operator_id is null");
			return (Criteria) this;
		}

		public Criteria andOperatorIdIsNotNull() {
			addCriterion("operator_id is not null");
			return (Criteria) this;
		}

		public Criteria andOperatorIdEqualTo(Long value) {
			addCriterion("operator_id =", value, "operatorId");
			return (Criteria) this;
		}

		public Criteria andOperatorIdNotEqualTo(Long value) {
			addCriterion("operator_id <>", value, "operatorId");
			return (Criteria) this;
		}

		public Criteria andOperatorIdGreaterThan(Long value) {
			addCriterion("operator_id >", value, "operatorId");
			return (Criteria) this;
		}

		public Criteria andOperatorIdGreaterThanOrEqualTo(Long value) {
			addCriterion("operator_id >=", value, "operatorId");
			return (Criteria) this;
		}

		public Criteria andOperatorIdLessThan(Long value) {
			addCriterion("operator_id <", value, "operatorId");
			return (Criteria) this;
		}

		public Criteria andOperatorIdLessThanOrEqualTo(Long value) {
			addCriterion("operator_id <=", value, "operatorId");
			return (Criteria) this;
		}

		public Criteria andOperatorIdIn(List<Long> values) {
			addCriterion("operator_id in", values, "operatorId");
			return (Criteria) this;
		}

		public Criteria andOperatorIdNotIn(List<Long> values) {
			addCriterion("operator_id not in", values, "operatorId");
			return (Criteria) this;
		}

		public Criteria andOperatorIdBetween(Long value1, Long value2) {
			addCriterion("operator_id between", value1, value2, "operatorId");
			return (Criteria) this;
		}

		public Criteria andOperatorIdNotBetween(Long value1, Long value2) {
			addCriterion("operator_id not between", value1, value2,
					"operatorId");
			return (Criteria) this;
		}

		public Criteria andStorageinTypeIsNull() {
			addCriterion("storagein_type is null");
			return (Criteria) this;
		}

		public Criteria andStorageinTypeIsNotNull() {
			addCriterion("storagein_type is not null");
			return (Criteria) this;
		}

		public Criteria andStorageinTypeEqualTo(Integer value) {
			addCriterion("storagein_type =", value, "storageinType");
			return (Criteria) this;
		}

		public Criteria andStorageinTypeNotEqualTo(Integer value) {
			addCriterion("storagein_type <>", value, "storageinType");
			return (Criteria) this;
		}

		public Criteria andStorageinTypeGreaterThan(Integer value) {
			addCriterion("storagein_type >", value, "storageinType");
			return (Criteria) this;
		}

		public Criteria andStorageinTypeGreaterThanOrEqualTo(Integer value) {
			addCriterion("storagein_type >=", value, "storageinType");
			return (Criteria) this;
		}

		public Criteria andStorageinTypeLessThan(Integer value) {
			addCriterion("storagein_type <", value, "storageinType");
			return (Criteria) this;
		}

		public Criteria andStorageinTypeLessThanOrEqualTo(Integer value) {
			addCriterion("storagein_type <=", value, "storageinType");
			return (Criteria) this;
		}

		public Criteria andStorageinTypeIn(List<Integer> values) {
			addCriterion("storagein_type in", values, "storageinType");
			return (Criteria) this;
		}

		public Criteria andStorageinTypeNotIn(List<Integer> values) {
			addCriterion("storagein_type not in", values, "storageinType");
			return (Criteria) this;
		}

		public Criteria andStorageinTypeBetween(Integer value1, Integer value2) {
			addCriterion("storagein_type between", value1, value2,
					"storageinType");
			return (Criteria) this;
		}

		public Criteria andStorageinTypeNotBetween(Integer value1,
				Integer value2) {
			addCriterion("storagein_type not between", value1, value2,
					"storageinType");
			return (Criteria) this;
		}

		public Criteria andBankflagIsNull() {
			addCriterion("bankFlag is null");
			return (Criteria) this;
		}

		public Criteria andBankflagIsNotNull() {
			addCriterion("bankFlag is not null");
			return (Criteria) this;
		}

		public Criteria andBankflagEqualTo(Integer value) {
			addCriterion("bankFlag =", value, "bankflag");
			return (Criteria) this;
		}

		public Criteria andBankflagNotEqualTo(Integer value) {
			addCriterion("bankFlag <>", value, "bankflag");
			return (Criteria) this;
		}

		public Criteria andBankflagGreaterThan(Integer value) {
			addCriterion("bankFlag >", value, "bankflag");
			return (Criteria) this;
		}

		public Criteria andBankflagGreaterThanOrEqualTo(Integer value) {
			addCriterion("bankFlag >=", value, "bankflag");
			return (Criteria) this;
		}

		public Criteria andBankflagLessThan(Integer value) {
			addCriterion("bankFlag <", value, "bankflag");
			return (Criteria) this;
		}

		public Criteria andBankflagLessThanOrEqualTo(Integer value) {
			addCriterion("bankFlag <=", value, "bankflag");
			return (Criteria) this;
		}

		public Criteria andBankflagIn(List<Integer> values) {
			addCriterion("bankFlag in", values, "bankflag");
			return (Criteria) this;
		}

		public Criteria andBankflagNotIn(List<Integer> values) {
			addCriterion("bankFlag not in", values, "bankflag");
			return (Criteria) this;
		}

		public Criteria andBankflagBetween(Integer value1, Integer value2) {
			addCriterion("bankFlag between", value1, value2, "bankflag");
			return (Criteria) this;
		}

		public Criteria andBankflagNotBetween(Integer value1, Integer value2) {
			addCriterion("bankFlag not between", value1, value2, "bankflag");
			return (Criteria) this;
		}

		public Criteria andClearedIsNull() {
			addCriterion("cleared is null");
			return (Criteria) this;
		}

		public Criteria andClearedIsNotNull() {
			addCriterion("cleared is not null");
			return (Criteria) this;
		}

		public Criteria andClearedEqualTo(Integer value) {
			addCriterion("cleared =", value, "cleared");
			return (Criteria) this;
		}

		public Criteria andClearedNotEqualTo(Integer value) {
			addCriterion("cleared <>", value, "cleared");
			return (Criteria) this;
		}

		public Criteria andClearedGreaterThan(Integer value) {
			addCriterion("cleared >", value, "cleared");
			return (Criteria) this;
		}

		public Criteria andClearedGreaterThanOrEqualTo(Integer value) {
			addCriterion("cleared >=", value, "cleared");
			return (Criteria) this;
		}

		public Criteria andClearedLessThan(Integer value) {
			addCriterion("cleared <", value, "cleared");
			return (Criteria) this;
		}

		public Criteria andClearedLessThanOrEqualTo(Integer value) {
			addCriterion("cleared <=", value, "cleared");
			return (Criteria) this;
		}

		public Criteria andClearedIn(List<Integer> values) {
			addCriterion("cleared in", values, "cleared");
			return (Criteria) this;
		}

		public Criteria andClearedNotIn(List<Integer> values) {
			addCriterion("cleared not in", values, "cleared");
			return (Criteria) this;
		}

		public Criteria andClearedBetween(Integer value1, Integer value2) {
			addCriterion("cleared between", value1, value2, "cleared");
			return (Criteria) this;
		}

		public Criteria andClearedNotBetween(Integer value1, Integer value2) {
			addCriterion("cleared not between", value1, value2, "cleared");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table pension_storagein_record
	 * @mbggenerated  Tue Nov 26 16:10:30 CST 2013
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue,
				String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table pension_storagein_record
     *
     * @mbggenerated do_not_delete_during_merge Tue Oct 29 16:16:20 GMT+08:00 2013
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}