package domain.fingerPrint;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class PensionFingerprintRegExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table pension_fingerprint_reg
     *
     * @mbggenerated Wed Sep 25 15:24:41 CST 2013
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table pension_fingerprint_reg
     *
     * @mbggenerated Wed Sep 25 15:24:41 CST 2013
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table pension_fingerprint_reg
     *
     * @mbggenerated Wed Sep 25 15:24:41 CST 2013
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table pension_fingerprint_reg
     *
     * @mbggenerated Wed Sep 25 15:24:41 CST 2013
     */
    public PensionFingerprintRegExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table pension_fingerprint_reg
     *
     * @mbggenerated Wed Sep 25 15:24:41 CST 2013
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table pension_fingerprint_reg
     *
     * @mbggenerated Wed Sep 25 15:24:41 CST 2013
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table pension_fingerprint_reg
     *
     * @mbggenerated Wed Sep 25 15:24:41 CST 2013
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table pension_fingerprint_reg
     *
     * @mbggenerated Wed Sep 25 15:24:41 CST 2013
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table pension_fingerprint_reg
     *
     * @mbggenerated Wed Sep 25 15:24:41 CST 2013
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table pension_fingerprint_reg
     *
     * @mbggenerated Wed Sep 25 15:24:41 CST 2013
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table pension_fingerprint_reg
     *
     * @mbggenerated Wed Sep 25 15:24:41 CST 2013
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table pension_fingerprint_reg
     *
     * @mbggenerated Wed Sep 25 15:24:41 CST 2013
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table pension_fingerprint_reg
     *
     * @mbggenerated Wed Sep 25 15:24:41 CST 2013
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table pension_fingerprint_reg
     *
     * @mbggenerated Wed Sep 25 15:24:41 CST 2013
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table pension_fingerprint_reg
     *
     * @mbggenerated Wed Sep 25 15:24:41 CST 2013
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null || value.toString().equals("")) {
                addCriterion("1=1");
                return;
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null || value1.toString().equals("")||value2.toString().equals("")) {
                addCriterion("1=1");
                return;
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("Id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("Id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Long value) {
            addCriterion("Id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Long value) {
            addCriterion("Id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Long value) {
            addCriterion("Id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Long value) {
            addCriterion("Id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Long value) {
            addCriterion("Id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Long value) {
            addCriterion("Id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Long> values) {
            addCriterion("Id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Long> values) {
            addCriterion("Id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Long value1, Long value2) {
            addCriterion("Id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Long value1, Long value2) {
            addCriterion("Id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andTypeIsNull() {
            addCriterion("Type is null");
            return (Criteria) this;
        }

        public Criteria andTypeIsNotNull() {
            addCriterion("Type is not null");
            return (Criteria) this;
        }

        public Criteria andTypeEqualTo(Integer value) {
            addCriterion("Type =", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeNotEqualTo(Integer value) {
            addCriterion("Type <>", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeGreaterThan(Integer value) {
            addCriterion("Type >", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeGreaterThanOrEqualTo(Integer value) {
            addCriterion("Type >=", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeLessThan(Integer value) {
            addCriterion("Type <", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeLessThanOrEqualTo(Integer value) {
            addCriterion("Type <=", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeIn(List<Integer> values) {
            addCriterion("Type in", values, "type");
            return (Criteria) this;
        }

        public Criteria andTypeNotIn(List<Integer> values) {
            addCriterion("Type not in", values, "type");
            return (Criteria) this;
        }

        public Criteria andTypeBetween(Integer value1, Integer value2) {
            addCriterion("Type between", value1, value2, "type");
            return (Criteria) this;
        }

        public Criteria andTypeNotBetween(Integer value1, Integer value2) {
            addCriterion("Type not between", value1, value2, "type");
            return (Criteria) this;
        }

        public Criteria andPeopleIdIsNull() {
            addCriterion("People_id is null");
            return (Criteria) this;
        }

        public Criteria andPeopleIdIsNotNull() {
            addCriterion("People_id is not null");
            return (Criteria) this;
        }

        public Criteria andPeopleIdEqualTo(Integer value) {
            addCriterion("People_id =", value, "peopleId");
            return (Criteria) this;
        }

        public Criteria andPeopleIdNotEqualTo(Integer value) {
            addCriterion("People_id <>", value, "peopleId");
            return (Criteria) this;
        }

        public Criteria andPeopleIdGreaterThan(Integer value) {
            addCriterion("People_id >", value, "peopleId");
            return (Criteria) this;
        }

        public Criteria andPeopleIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("People_id >=", value, "peopleId");
            return (Criteria) this;
        }

        public Criteria andPeopleIdLessThan(Integer value) {
            addCriterion("People_id <", value, "peopleId");
            return (Criteria) this;
        }

        public Criteria andPeopleIdLessThanOrEqualTo(Integer value) {
            addCriterion("People_id <=", value, "peopleId");
            return (Criteria) this;
        }

        public Criteria andPeopleIdIn(List<Integer> values) {
            addCriterion("People_id in", values, "peopleId");
            return (Criteria) this;
        }

        public Criteria andPeopleIdNotIn(List<Integer> values) {
            addCriterion("People_id not in", values, "peopleId");
            return (Criteria) this;
        }

        public Criteria andPeopleIdBetween(Integer value1, Integer value2) {
            addCriterion("People_id between", value1, value2, "peopleId");
            return (Criteria) this;
        }

        public Criteria andPeopleIdNotBetween(Integer value1, Integer value2) {
            addCriterion("People_id not between", value1, value2, "peopleId");
            return (Criteria) this;
        }

        public Criteria andAnSenrollNumberIsNull() {
            addCriterion("An_SEnroll_Number is null");
            return (Criteria) this;
        }

        public Criteria andAnSenrollNumberIsNotNull() {
            addCriterion("An_SEnroll_Number is not null");
            return (Criteria) this;
        }

        public Criteria andAnSenrollNumberEqualTo(String value) {
            addCriterion("An_SEnroll_Number =", value, "anSenrollNumber");
            return (Criteria) this;
        }

        public Criteria andAnSenrollNumberNotEqualTo(String value) {
            addCriterion("An_SEnroll_Number <>", value, "anSenrollNumber");
            return (Criteria) this;
        }

        public Criteria andAnSenrollNumberGreaterThan(String value) {
            addCriterion("An_SEnroll_Number >", value, "anSenrollNumber");
            return (Criteria) this;
        }

        public Criteria andAnSenrollNumberGreaterThanOrEqualTo(String value) {
            addCriterion("An_SEnroll_Number >=", value, "anSenrollNumber");
            return (Criteria) this;
        }

        public Criteria andAnSenrollNumberLessThan(String value) {
            addCriterion("An_SEnroll_Number <", value, "anSenrollNumber");
            return (Criteria) this;
        }

        public Criteria andAnSenrollNumberLessThanOrEqualTo(String value) {
            addCriterion("An_SEnroll_Number <=", value, "anSenrollNumber");
            return (Criteria) this;
        }

        public Criteria andAnSenrollNumberLike(String value) {
            addCriterion("An_SEnroll_Number like", value, "anSenrollNumber");
            return (Criteria) this;
        }

        public Criteria andAnSenrollNumberNotLike(String value) {
            addCriterion("An_SEnroll_Number not like", value, "anSenrollNumber");
            return (Criteria) this;
        }

        public Criteria andAnSenrollNumberIn(List<String> values) {
            addCriterion("An_SEnroll_Number in", values, "anSenrollNumber");
            return (Criteria) this;
        }

        public Criteria andAnSenrollNumberNotIn(List<String> values) {
            addCriterion("An_SEnroll_Number not in", values, "anSenrollNumber");
            return (Criteria) this;
        }

        public Criteria andAnSenrollNumberBetween(String value1, String value2) {
            addCriterion("An_SEnroll_Number between", value1, value2, "anSenrollNumber");
            return (Criteria) this;
        }

        public Criteria andAnSenrollNumberNotBetween(String value1, String value2) {
            addCriterion("An_SEnroll_Number not between", value1, value2, "anSenrollNumber");
            return (Criteria) this;
        }

        public Criteria andRegisteTimeIsNull() {
            addCriterion("Registe_Time is null");
            return (Criteria) this;
        }

        public Criteria andRegisteTimeIsNotNull() {
            addCriterion("Registe_Time is not null");
            return (Criteria) this;
        }

        public Criteria andRegisteTimeEqualTo(Date value) {
            addCriterion("Registe_Time =", value, "registeTime");
            return (Criteria) this;
        }

        public Criteria andRegisteTimeNotEqualTo(Date value) {
            addCriterion("Registe_Time <>", value, "registeTime");
            return (Criteria) this;
        }

        public Criteria andRegisteTimeGreaterThan(Date value) {
            addCriterion("Registe_Time >", value, "registeTime");
            return (Criteria) this;
        }

        public Criteria andRegisteTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("Registe_Time >=", value, "registeTime");
            return (Criteria) this;
        }

        public Criteria andRegisteTimeLessThan(Date value) {
            addCriterion("Registe_Time <", value, "registeTime");
            return (Criteria) this;
        }

        public Criteria andRegisteTimeLessThanOrEqualTo(Date value) {
            addCriterion("Registe_Time <=", value, "registeTime");
            return (Criteria) this;
        }

        public Criteria andRegisteTimeIn(List<Date> values) {
            addCriterion("Registe_Time in", values, "registeTime");
            return (Criteria) this;
        }

        public Criteria andRegisteTimeNotIn(List<Date> values) {
            addCriterion("Registe_Time not in", values, "registeTime");
            return (Criteria) this;
        }

        public Criteria andRegisteTimeBetween(Date value1, Date value2) {
            addCriterion("Registe_Time between", value1, value2, "registeTime");
            return (Criteria) this;
        }

        public Criteria andRegisteTimeNotBetween(Date value1, Date value2) {
            addCriterion("Registe_Time not between", value1, value2, "registeTime");
            return (Criteria) this;
        }

        public Criteria andClearedIsNull() {
            addCriterion("cleared is null");
            return (Criteria) this;
        }

        public Criteria andClearedIsNotNull() {
            addCriterion("cleared is not null");
            return (Criteria) this;
        }

        public Criteria andClearedEqualTo(Integer value) {
            addCriterion("cleared =", value, "cleared");
            return (Criteria) this;
        }

        public Criteria andClearedNotEqualTo(Integer value) {
            addCriterion("cleared <>", value, "cleared");
            return (Criteria) this;
        }

        public Criteria andClearedGreaterThan(Integer value) {
            addCriterion("cleared >", value, "cleared");
            return (Criteria) this;
        }

        public Criteria andClearedGreaterThanOrEqualTo(Integer value) {
            addCriterion("cleared >=", value, "cleared");
            return (Criteria) this;
        }

        public Criteria andClearedLessThan(Integer value) {
            addCriterion("cleared <", value, "cleared");
            return (Criteria) this;
        }

        public Criteria andClearedLessThanOrEqualTo(Integer value) {
            addCriterion("cleared <=", value, "cleared");
            return (Criteria) this;
        }

        public Criteria andClearedIn(List<Integer> values) {
            addCriterion("cleared in", values, "cleared");
            return (Criteria) this;
        }

        public Criteria andClearedNotIn(List<Integer> values) {
            addCriterion("cleared not in", values, "cleared");
            return (Criteria) this;
        }

        public Criteria andClearedBetween(Integer value1, Integer value2) {
            addCriterion("cleared between", value1, value2, "cleared");
            return (Criteria) this;
        }

        public Criteria andClearedNotBetween(Integer value1, Integer value2) {
            addCriterion("cleared not between", value1, value2, "cleared");
            return (Criteria) this;
        }

        public Criteria andNoteIsNull() {
            addCriterion("note is null");
            return (Criteria) this;
        }

        public Criteria andNoteIsNotNull() {
            addCriterion("note is not null");
            return (Criteria) this;
        }

        public Criteria andNoteEqualTo(String value) {
            addCriterion("note =", value, "note");
            return (Criteria) this;
        }

        public Criteria andNoteNotEqualTo(String value) {
            addCriterion("note <>", value, "note");
            return (Criteria) this;
        }

        public Criteria andNoteGreaterThan(String value) {
            addCriterion("note >", value, "note");
            return (Criteria) this;
        }

        public Criteria andNoteGreaterThanOrEqualTo(String value) {
            addCriterion("note >=", value, "note");
            return (Criteria) this;
        }

        public Criteria andNoteLessThan(String value) {
            addCriterion("note <", value, "note");
            return (Criteria) this;
        }

        public Criteria andNoteLessThanOrEqualTo(String value) {
            addCriterion("note <=", value, "note");
            return (Criteria) this;
        }

        public Criteria andNoteLike(String value) {
            addCriterion("note like", value, "note");
            return (Criteria) this;
        }

        public Criteria andNoteNotLike(String value) {
            addCriterion("note not like", value, "note");
            return (Criteria) this;
        }

        public Criteria andNoteIn(List<String> values) {
            addCriterion("note in", values, "note");
            return (Criteria) this;
        }

        public Criteria andNoteNotIn(List<String> values) {
            addCriterion("note not in", values, "note");
            return (Criteria) this;
        }

        public Criteria andNoteBetween(String value1, String value2) {
            addCriterion("note between", value1, value2, "note");
            return (Criteria) this;
        }

        public Criteria andNoteNotBetween(String value1, String value2) {
            addCriterion("note not between", value1, value2, "note");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table pension_fingerprint_reg
     *
     * @mbggenerated do_not_delete_during_merge Wed Sep 25 15:24:41 CST 2013
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table pension_fingerprint_reg
     *
     * @mbggenerated Wed Sep 25 15:24:41 CST 2013
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}