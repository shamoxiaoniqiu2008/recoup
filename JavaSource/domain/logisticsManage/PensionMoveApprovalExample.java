package domain.logisticsManage;

import java.util.ArrayList;
import java.util.List;

public class PensionMoveApprovalExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table pension_move_approval
	 * @mbggenerated  Thu Dec 05 10:40:21 CST 2013
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table pension_move_approval
	 * @mbggenerated  Thu Dec 05 10:40:21 CST 2013
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table pension_move_approval
	 * @mbggenerated  Thu Dec 05 10:40:21 CST 2013
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_move_approval
	 * @mbggenerated  Thu Dec 05 10:40:21 CST 2013
	 */
	public PensionMoveApprovalExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_move_approval
	 * @mbggenerated  Thu Dec 05 10:40:21 CST 2013
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_move_approval
	 * @mbggenerated  Thu Dec 05 10:40:21 CST 2013
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_move_approval
	 * @mbggenerated  Thu Dec 05 10:40:21 CST 2013
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_move_approval
	 * @mbggenerated  Thu Dec 05 10:40:21 CST 2013
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_move_approval
	 * @mbggenerated  Thu Dec 05 10:40:21 CST 2013
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_move_approval
	 * @mbggenerated  Thu Dec 05 10:40:21 CST 2013
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_move_approval
	 * @mbggenerated  Thu Dec 05 10:40:21 CST 2013
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_move_approval
	 * @mbggenerated  Thu Dec 05 10:40:21 CST 2013
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_move_approval
	 * @mbggenerated  Thu Dec 05 10:40:21 CST 2013
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_move_approval
	 * @mbggenerated  Thu Dec 05 10:40:21 CST 2013
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table pension_move_approval
	 * @mbggenerated  Thu Dec 05 10:40:21 CST 2013
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null || value.toString().equals("")) {
				addCriterion("1=1");
				return;
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null
					|| value1.toString().equals("")
					|| value2.toString().equals("")) {
				addCriterion("1=1");
				return;
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		public Criteria andIdIsNull() {
			addCriterion("id is null");
			return (Criteria) this;
		}

		public Criteria andIdIsNotNull() {
			addCriterion("id is not null");
			return (Criteria) this;
		}

		public Criteria andIdEqualTo(Long value) {
			addCriterion("id =", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotEqualTo(Long value) {
			addCriterion("id <>", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThan(Long value) {
			addCriterion("id >", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThanOrEqualTo(Long value) {
			addCriterion("id >=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThan(Long value) {
			addCriterion("id <", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThanOrEqualTo(Long value) {
			addCriterion("id <=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdIn(List<Long> values) {
			addCriterion("id in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotIn(List<Long> values) {
			addCriterion("id not in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdBetween(Long value1, Long value2) {
			addCriterion("id between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotBetween(Long value1, Long value2) {
			addCriterion("id not between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andApplyIdIsNull() {
			addCriterion("apply_id is null");
			return (Criteria) this;
		}

		public Criteria andApplyIdIsNotNull() {
			addCriterion("apply_id is not null");
			return (Criteria) this;
		}

		public Criteria andApplyIdEqualTo(Long value) {
			addCriterion("apply_id =", value, "applyId");
			return (Criteria) this;
		}

		public Criteria andApplyIdNotEqualTo(Long value) {
			addCriterion("apply_id <>", value, "applyId");
			return (Criteria) this;
		}

		public Criteria andApplyIdGreaterThan(Long value) {
			addCriterion("apply_id >", value, "applyId");
			return (Criteria) this;
		}

		public Criteria andApplyIdGreaterThanOrEqualTo(Long value) {
			addCriterion("apply_id >=", value, "applyId");
			return (Criteria) this;
		}

		public Criteria andApplyIdLessThan(Long value) {
			addCriterion("apply_id <", value, "applyId");
			return (Criteria) this;
		}

		public Criteria andApplyIdLessThanOrEqualTo(Long value) {
			addCriterion("apply_id <=", value, "applyId");
			return (Criteria) this;
		}

		public Criteria andApplyIdIn(List<Long> values) {
			addCriterion("apply_id in", values, "applyId");
			return (Criteria) this;
		}

		public Criteria andApplyIdNotIn(List<Long> values) {
			addCriterion("apply_id not in", values, "applyId");
			return (Criteria) this;
		}

		public Criteria andApplyIdBetween(Long value1, Long value2) {
			addCriterion("apply_id between", value1, value2, "applyId");
			return (Criteria) this;
		}

		public Criteria andApplyIdNotBetween(Long value1, Long value2) {
			addCriterion("apply_id not between", value1, value2, "applyId");
			return (Criteria) this;
		}

		public Criteria andDeptIdIsNull() {
			addCriterion("dept_id is null");
			return (Criteria) this;
		}

		public Criteria andDeptIdIsNotNull() {
			addCriterion("dept_id is not null");
			return (Criteria) this;
		}

		public Criteria andDeptIdEqualTo(Long value) {
			addCriterion("dept_id =", value, "deptId");
			return (Criteria) this;
		}

		public Criteria andDeptIdNotEqualTo(Long value) {
			addCriterion("dept_id <>", value, "deptId");
			return (Criteria) this;
		}

		public Criteria andDeptIdGreaterThan(Long value) {
			addCriterion("dept_id >", value, "deptId");
			return (Criteria) this;
		}

		public Criteria andDeptIdGreaterThanOrEqualTo(Long value) {
			addCriterion("dept_id >=", value, "deptId");
			return (Criteria) this;
		}

		public Criteria andDeptIdLessThan(Long value) {
			addCriterion("dept_id <", value, "deptId");
			return (Criteria) this;
		}

		public Criteria andDeptIdLessThanOrEqualTo(Long value) {
			addCriterion("dept_id <=", value, "deptId");
			return (Criteria) this;
		}

		public Criteria andDeptIdIn(List<Long> values) {
			addCriterion("dept_id in", values, "deptId");
			return (Criteria) this;
		}

		public Criteria andDeptIdNotIn(List<Long> values) {
			addCriterion("dept_id not in", values, "deptId");
			return (Criteria) this;
		}

		public Criteria andDeptIdBetween(Long value1, Long value2) {
			addCriterion("dept_id between", value1, value2, "deptId");
			return (Criteria) this;
		}

		public Criteria andDeptIdNotBetween(Long value1, Long value2) {
			addCriterion("dept_id not between", value1, value2, "deptId");
			return (Criteria) this;
		}

		public Criteria andApproverIdIsNull() {
			addCriterion("approver_id is null");
			return (Criteria) this;
		}

		public Criteria andApproverIdIsNotNull() {
			addCriterion("approver_id is not null");
			return (Criteria) this;
		}

		public Criteria andApproverIdEqualTo(Long value) {
			addCriterion("approver_id =", value, "approverId");
			return (Criteria) this;
		}

		public Criteria andApproverIdNotEqualTo(Long value) {
			addCriterion("approver_id <>", value, "approverId");
			return (Criteria) this;
		}

		public Criteria andApproverIdGreaterThan(Long value) {
			addCriterion("approver_id >", value, "approverId");
			return (Criteria) this;
		}

		public Criteria andApproverIdGreaterThanOrEqualTo(Long value) {
			addCriterion("approver_id >=", value, "approverId");
			return (Criteria) this;
		}

		public Criteria andApproverIdLessThan(Long value) {
			addCriterion("approver_id <", value, "approverId");
			return (Criteria) this;
		}

		public Criteria andApproverIdLessThanOrEqualTo(Long value) {
			addCriterion("approver_id <=", value, "approverId");
			return (Criteria) this;
		}

		public Criteria andApproverIdIn(List<Long> values) {
			addCriterion("approver_id in", values, "approverId");
			return (Criteria) this;
		}

		public Criteria andApproverIdNotIn(List<Long> values) {
			addCriterion("approver_id not in", values, "approverId");
			return (Criteria) this;
		}

		public Criteria andApproverIdBetween(Long value1, Long value2) {
			addCriterion("approver_id between", value1, value2, "approverId");
			return (Criteria) this;
		}

		public Criteria andApproverIdNotBetween(Long value1, Long value2) {
			addCriterion("approver_id not between", value1, value2,
					"approverId");
			return (Criteria) this;
		}

		public Criteria andApprovalResultIsNull() {
			addCriterion("approval_result is null");
			return (Criteria) this;
		}

		public Criteria andApprovalResultIsNotNull() {
			addCriterion("approval_result is not null");
			return (Criteria) this;
		}

		public Criteria andApprovalResultEqualTo(Integer value) {
			addCriterion("approval_result =", value, "approvalResult");
			return (Criteria) this;
		}

		public Criteria andApprovalResultNotEqualTo(Integer value) {
			addCriterion("approval_result <>", value, "approvalResult");
			return (Criteria) this;
		}

		public Criteria andApprovalResultGreaterThan(Integer value) {
			addCriterion("approval_result >", value, "approvalResult");
			return (Criteria) this;
		}

		public Criteria andApprovalResultGreaterThanOrEqualTo(Integer value) {
			addCriterion("approval_result >=", value, "approvalResult");
			return (Criteria) this;
		}

		public Criteria andApprovalResultLessThan(Integer value) {
			addCriterion("approval_result <", value, "approvalResult");
			return (Criteria) this;
		}

		public Criteria andApprovalResultLessThanOrEqualTo(Integer value) {
			addCriterion("approval_result <=", value, "approvalResult");
			return (Criteria) this;
		}

		public Criteria andApprovalResultIn(List<Integer> values) {
			addCriterion("approval_result in", values, "approvalResult");
			return (Criteria) this;
		}

		public Criteria andApprovalResultNotIn(List<Integer> values) {
			addCriterion("approval_result not in", values, "approvalResult");
			return (Criteria) this;
		}

		public Criteria andApprovalResultBetween(Integer value1, Integer value2) {
			addCriterion("approval_result between", value1, value2,
					"approvalResult");
			return (Criteria) this;
		}

		public Criteria andApprovalResultNotBetween(Integer value1,
				Integer value2) {
			addCriterion("approval_result not between", value1, value2,
					"approvalResult");
			return (Criteria) this;
		}

		public Criteria andClearedIsNull() {
			addCriterion("cleared is null");
			return (Criteria) this;
		}

		public Criteria andClearedIsNotNull() {
			addCriterion("cleared is not null");
			return (Criteria) this;
		}

		public Criteria andClearedEqualTo(Integer value) {
			addCriterion("cleared =", value, "cleared");
			return (Criteria) this;
		}

		public Criteria andClearedNotEqualTo(Integer value) {
			addCriterion("cleared <>", value, "cleared");
			return (Criteria) this;
		}

		public Criteria andClearedGreaterThan(Integer value) {
			addCriterion("cleared >", value, "cleared");
			return (Criteria) this;
		}

		public Criteria andClearedGreaterThanOrEqualTo(Integer value) {
			addCriterion("cleared >=", value, "cleared");
			return (Criteria) this;
		}

		public Criteria andClearedLessThan(Integer value) {
			addCriterion("cleared <", value, "cleared");
			return (Criteria) this;
		}

		public Criteria andClearedLessThanOrEqualTo(Integer value) {
			addCriterion("cleared <=", value, "cleared");
			return (Criteria) this;
		}

		public Criteria andClearedIn(List<Integer> values) {
			addCriterion("cleared in", values, "cleared");
			return (Criteria) this;
		}

		public Criteria andClearedNotIn(List<Integer> values) {
			addCriterion("cleared not in", values, "cleared");
			return (Criteria) this;
		}

		public Criteria andClearedBetween(Integer value1, Integer value2) {
			addCriterion("cleared between", value1, value2, "cleared");
			return (Criteria) this;
		}

		public Criteria andClearedNotBetween(Integer value1, Integer value2) {
			addCriterion("cleared not between", value1, value2, "cleared");
			return (Criteria) this;
		}

		public Criteria andNoteIsNull() {
			addCriterion("note is null");
			return (Criteria) this;
		}

		public Criteria andNoteIsNotNull() {
			addCriterion("note is not null");
			return (Criteria) this;
		}

		public Criteria andNoteEqualTo(String value) {
			addCriterion("note =", value, "note");
			return (Criteria) this;
		}

		public Criteria andNoteNotEqualTo(String value) {
			addCriterion("note <>", value, "note");
			return (Criteria) this;
		}

		public Criteria andNoteGreaterThan(String value) {
			addCriterion("note >", value, "note");
			return (Criteria) this;
		}

		public Criteria andNoteGreaterThanOrEqualTo(String value) {
			addCriterion("note >=", value, "note");
			return (Criteria) this;
		}

		public Criteria andNoteLessThan(String value) {
			addCriterion("note <", value, "note");
			return (Criteria) this;
		}

		public Criteria andNoteLessThanOrEqualTo(String value) {
			addCriterion("note <=", value, "note");
			return (Criteria) this;
		}

		public Criteria andNoteLike(String value) {
			addCriterion("note like", value, "note");
			return (Criteria) this;
		}

		public Criteria andNoteNotLike(String value) {
			addCriterion("note not like", value, "note");
			return (Criteria) this;
		}

		public Criteria andNoteIn(List<String> values) {
			addCriterion("note in", values, "note");
			return (Criteria) this;
		}

		public Criteria andNoteNotIn(List<String> values) {
			addCriterion("note not in", values, "note");
			return (Criteria) this;
		}

		public Criteria andNoteBetween(String value1, String value2) {
			addCriterion("note between", value1, value2, "note");
			return (Criteria) this;
		}

		public Criteria andNoteNotBetween(String value1, String value2) {
			addCriterion("note not between", value1, value2, "note");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table pension_move_approval
	 * @mbggenerated  Thu Dec 05 10:40:21 CST 2013
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue,
				String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table pension_move_approval
     *
     * @mbggenerated do_not_delete_during_merge Tue Oct 29 15:30:49 GMT+08:00 2013
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}