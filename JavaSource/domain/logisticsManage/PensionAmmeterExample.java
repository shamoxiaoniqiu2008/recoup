package domain.logisticsManage;

import java.util.ArrayList;
import java.util.List;
import java.util.Date;

public class PensionAmmeterExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table pension_ammeter
	 * @mbggenerated  Thu Dec 12 17:39:57 CST 2013
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table pension_ammeter
	 * @mbggenerated  Thu Dec 12 17:39:57 CST 2013
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table pension_ammeter
	 * @mbggenerated  Thu Dec 12 17:39:57 CST 2013
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_ammeter
	 * @mbggenerated  Thu Dec 12 17:39:57 CST 2013
	 */
	public PensionAmmeterExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_ammeter
	 * @mbggenerated  Thu Dec 12 17:39:57 CST 2013
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_ammeter
	 * @mbggenerated  Thu Dec 12 17:39:57 CST 2013
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_ammeter
	 * @mbggenerated  Thu Dec 12 17:39:57 CST 2013
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_ammeter
	 * @mbggenerated  Thu Dec 12 17:39:57 CST 2013
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_ammeter
	 * @mbggenerated  Thu Dec 12 17:39:57 CST 2013
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_ammeter
	 * @mbggenerated  Thu Dec 12 17:39:57 CST 2013
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_ammeter
	 * @mbggenerated  Thu Dec 12 17:39:57 CST 2013
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_ammeter
	 * @mbggenerated  Thu Dec 12 17:39:57 CST 2013
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_ammeter
	 * @mbggenerated  Thu Dec 12 17:39:57 CST 2013
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_ammeter
	 * @mbggenerated  Thu Dec 12 17:39:57 CST 2013
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table pension_ammeter
	 * @mbggenerated  Thu Dec 12 17:39:57 CST 2013
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null || value.toString().equals("")) {
				addCriterion("1=1");
				return;
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null
					|| value1.toString().equals("")
					|| value2.toString().equals("")) {
				addCriterion("1=1");
				return;
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		public Criteria andIdIsNull() {
			addCriterion("id is null");
			return (Criteria) this;
		}

		public Criteria andIdIsNotNull() {
			addCriterion("id is not null");
			return (Criteria) this;
		}

		public Criteria andIdEqualTo(Long value) {
			addCriterion("id =", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotEqualTo(Long value) {
			addCriterion("id <>", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThan(Long value) {
			addCriterion("id >", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThanOrEqualTo(Long value) {
			addCriterion("id >=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThan(Long value) {
			addCriterion("id <", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThanOrEqualTo(Long value) {
			addCriterion("id <=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdIn(List<Long> values) {
			addCriterion("id in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotIn(List<Long> values) {
			addCriterion("id not in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdBetween(Long value1, Long value2) {
			addCriterion("id between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotBetween(Long value1, Long value2) {
			addCriterion("id not between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andRoomIdIsNull() {
			addCriterion("room_id is null");
			return (Criteria) this;
		}

		public Criteria andRoomIdIsNotNull() {
			addCriterion("room_id is not null");
			return (Criteria) this;
		}

		public Criteria andRoomIdEqualTo(Long value) {
			addCriterion("room_id =", value, "roomId");
			return (Criteria) this;
		}

		public Criteria andRoomIdNotEqualTo(Long value) {
			addCriterion("room_id <>", value, "roomId");
			return (Criteria) this;
		}

		public Criteria andRoomIdGreaterThan(Long value) {
			addCriterion("room_id >", value, "roomId");
			return (Criteria) this;
		}

		public Criteria andRoomIdGreaterThanOrEqualTo(Long value) {
			addCriterion("room_id >=", value, "roomId");
			return (Criteria) this;
		}

		public Criteria andRoomIdLessThan(Long value) {
			addCriterion("room_id <", value, "roomId");
			return (Criteria) this;
		}

		public Criteria andRoomIdLessThanOrEqualTo(Long value) {
			addCriterion("room_id <=", value, "roomId");
			return (Criteria) this;
		}

		public Criteria andRoomIdIn(List<Long> values) {
			addCriterion("room_id in", values, "roomId");
			return (Criteria) this;
		}

		public Criteria andRoomIdNotIn(List<Long> values) {
			addCriterion("room_id not in", values, "roomId");
			return (Criteria) this;
		}

		public Criteria andRoomIdBetween(Long value1, Long value2) {
			addCriterion("room_id between", value1, value2, "roomId");
			return (Criteria) this;
		}

		public Criteria andRoomIdNotBetween(Long value1, Long value2) {
			addCriterion("room_id not between", value1, value2, "roomId");
			return (Criteria) this;
		}

		public Criteria andAmmeterNameIsNull() {
			addCriterion("ammeter_name is null");
			return (Criteria) this;
		}

		public Criteria andAmmeterNameIsNotNull() {
			addCriterion("ammeter_name is not null");
			return (Criteria) this;
		}

		public Criteria andAmmeterNameEqualTo(String value) {
			addCriterion("ammeter_name =", value, "ammeterName");
			return (Criteria) this;
		}

		public Criteria andAmmeterNameNotEqualTo(String value) {
			addCriterion("ammeter_name <>", value, "ammeterName");
			return (Criteria) this;
		}

		public Criteria andAmmeterNameGreaterThan(String value) {
			addCriterion("ammeter_name >", value, "ammeterName");
			return (Criteria) this;
		}

		public Criteria andAmmeterNameGreaterThanOrEqualTo(String value) {
			addCriterion("ammeter_name >=", value, "ammeterName");
			return (Criteria) this;
		}

		public Criteria andAmmeterNameLessThan(String value) {
			addCriterion("ammeter_name <", value, "ammeterName");
			return (Criteria) this;
		}

		public Criteria andAmmeterNameLessThanOrEqualTo(String value) {
			addCriterion("ammeter_name <=", value, "ammeterName");
			return (Criteria) this;
		}

		public Criteria andAmmeterNameLike(String value) {
			addCriterion("ammeter_name like", value, "ammeterName");
			return (Criteria) this;
		}

		public Criteria andAmmeterNameNotLike(String value) {
			addCriterion("ammeter_name not like", value, "ammeterName");
			return (Criteria) this;
		}

		public Criteria andAmmeterNameIn(List<String> values) {
			addCriterion("ammeter_name in", values, "ammeterName");
			return (Criteria) this;
		}

		public Criteria andAmmeterNameNotIn(List<String> values) {
			addCriterion("ammeter_name not in", values, "ammeterName");
			return (Criteria) this;
		}

		public Criteria andAmmeterNameBetween(String value1, String value2) {
			addCriterion("ammeter_name between", value1, value2, "ammeterName");
			return (Criteria) this;
		}

		public Criteria andAmmeterNameNotBetween(String value1, String value2) {
			addCriterion("ammeter_name not between", value1, value2,
					"ammeterName");
			return (Criteria) this;
		}

		public Criteria andValidFlagIsNull() {
			addCriterion("valid_flag is null");
			return (Criteria) this;
		}

		public Criteria andValidFlagIsNotNull() {
			addCriterion("valid_flag is not null");
			return (Criteria) this;
		}

		public Criteria andValidFlagEqualTo(Integer value) {
			addCriterion("valid_flag =", value, "validFlag");
			return (Criteria) this;
		}

		public Criteria andValidFlagNotEqualTo(Integer value) {
			addCriterion("valid_flag <>", value, "validFlag");
			return (Criteria) this;
		}

		public Criteria andValidFlagGreaterThan(Integer value) {
			addCriterion("valid_flag >", value, "validFlag");
			return (Criteria) this;
		}

		public Criteria andValidFlagGreaterThanOrEqualTo(Integer value) {
			addCriterion("valid_flag >=", value, "validFlag");
			return (Criteria) this;
		}

		public Criteria andValidFlagLessThan(Integer value) {
			addCriterion("valid_flag <", value, "validFlag");
			return (Criteria) this;
		}

		public Criteria andValidFlagLessThanOrEqualTo(Integer value) {
			addCriterion("valid_flag <=", value, "validFlag");
			return (Criteria) this;
		}

		public Criteria andValidFlagIn(List<Integer> values) {
			addCriterion("valid_flag in", values, "validFlag");
			return (Criteria) this;
		}

		public Criteria andValidFlagNotIn(List<Integer> values) {
			addCriterion("valid_flag not in", values, "validFlag");
			return (Criteria) this;
		}

		public Criteria andValidFlagBetween(Integer value1, Integer value2) {
			addCriterion("valid_flag between", value1, value2, "validFlag");
			return (Criteria) this;
		}

		public Criteria andValidFlagNotBetween(Integer value1, Integer value2) {
			addCriterion("valid_flag not between", value1, value2, "validFlag");
			return (Criteria) this;
		}

		public Criteria andClearedIsNull() {
			addCriterion("cleared is null");
			return (Criteria) this;
		}

		public Criteria andClearedIsNotNull() {
			addCriterion("cleared is not null");
			return (Criteria) this;
		}

		public Criteria andClearedEqualTo(Integer value) {
			addCriterion("cleared =", value, "cleared");
			return (Criteria) this;
		}

		public Criteria andClearedNotEqualTo(Integer value) {
			addCriterion("cleared <>", value, "cleared");
			return (Criteria) this;
		}

		public Criteria andClearedGreaterThan(Integer value) {
			addCriterion("cleared >", value, "cleared");
			return (Criteria) this;
		}

		public Criteria andClearedGreaterThanOrEqualTo(Integer value) {
			addCriterion("cleared >=", value, "cleared");
			return (Criteria) this;
		}

		public Criteria andClearedLessThan(Integer value) {
			addCriterion("cleared <", value, "cleared");
			return (Criteria) this;
		}

		public Criteria andClearedLessThanOrEqualTo(Integer value) {
			addCriterion("cleared <=", value, "cleared");
			return (Criteria) this;
		}

		public Criteria andClearedIn(List<Integer> values) {
			addCriterion("cleared in", values, "cleared");
			return (Criteria) this;
		}

		public Criteria andClearedNotIn(List<Integer> values) {
			addCriterion("cleared not in", values, "cleared");
			return (Criteria) this;
		}

		public Criteria andClearedBetween(Integer value1, Integer value2) {
			addCriterion("cleared between", value1, value2, "cleared");
			return (Criteria) this;
		}

		public Criteria andClearedNotBetween(Integer value1, Integer value2) {
			addCriterion("cleared not between", value1, value2, "cleared");
			return (Criteria) this;
		}

		public Criteria andNoteIsNull() {
			addCriterion("note is null");
			return (Criteria) this;
		}

		public Criteria andNoteIsNotNull() {
			addCriterion("note is not null");
			return (Criteria) this;
		}

		public Criteria andNoteEqualTo(String value) {
			addCriterion("note =", value, "note");
			return (Criteria) this;
		}

		public Criteria andNoteNotEqualTo(String value) {
			addCriterion("note <>", value, "note");
			return (Criteria) this;
		}

		public Criteria andNoteGreaterThan(String value) {
			addCriterion("note >", value, "note");
			return (Criteria) this;
		}

		public Criteria andNoteGreaterThanOrEqualTo(String value) {
			addCriterion("note >=", value, "note");
			return (Criteria) this;
		}

		public Criteria andNoteLessThan(String value) {
			addCriterion("note <", value, "note");
			return (Criteria) this;
		}

		public Criteria andNoteLessThanOrEqualTo(String value) {
			addCriterion("note <=", value, "note");
			return (Criteria) this;
		}

		public Criteria andNoteLike(String value) {
			addCriterion("note like", value, "note");
			return (Criteria) this;
		}

		public Criteria andNoteNotLike(String value) {
			addCriterion("note not like", value, "note");
			return (Criteria) this;
		}

		public Criteria andNoteIn(List<String> values) {
			addCriterion("note in", values, "note");
			return (Criteria) this;
		}

		public Criteria andNoteNotIn(List<String> values) {
			addCriterion("note not in", values, "note");
			return (Criteria) this;
		}

		public Criteria andNoteBetween(String value1, String value2) {
			addCriterion("note between", value1, value2, "note");
			return (Criteria) this;
		}

		public Criteria andNoteNotBetween(String value1, String value2) {
			addCriterion("note not between", value1, value2, "note");
			return (Criteria) this;
		}

		public Criteria andInitDegreeNumberIsNull() {
			addCriterion("init_degree_number is null");
			return (Criteria) this;
		}

		public Criteria andInitDegreeNumberIsNotNull() {
			addCriterion("init_degree_number is not null");
			return (Criteria) this;
		}

		public Criteria andInitDegreeNumberEqualTo(Float value) {
			addCriterion("init_degree_number =", value, "initDegreeNumber");
			return (Criteria) this;
		}

		public Criteria andInitDegreeNumberNotEqualTo(Float value) {
			addCriterion("init_degree_number <>", value, "initDegreeNumber");
			return (Criteria) this;
		}

		public Criteria andInitDegreeNumberGreaterThan(Float value) {
			addCriterion("init_degree_number >", value, "initDegreeNumber");
			return (Criteria) this;
		}

		public Criteria andInitDegreeNumberGreaterThanOrEqualTo(Float value) {
			addCriterion("init_degree_number >=", value, "initDegreeNumber");
			return (Criteria) this;
		}

		public Criteria andInitDegreeNumberLessThan(Float value) {
			addCriterion("init_degree_number <", value, "initDegreeNumber");
			return (Criteria) this;
		}

		public Criteria andInitDegreeNumberLessThanOrEqualTo(Float value) {
			addCriterion("init_degree_number <=", value, "initDegreeNumber");
			return (Criteria) this;
		}

		public Criteria andInitDegreeNumberIn(List<Float> values) {
			addCriterion("init_degree_number in", values, "initDegreeNumber");
			return (Criteria) this;
		}

		public Criteria andInitDegreeNumberNotIn(List<Float> values) {
			addCriterion("init_degree_number not in", values,
					"initDegreeNumber");
			return (Criteria) this;
		}

		public Criteria andInitDegreeNumberBetween(Float value1, Float value2) {
			addCriterion("init_degree_number between", value1, value2,
					"initDegreeNumber");
			return (Criteria) this;
		}

		public Criteria andInitDegreeNumberNotBetween(Float value1, Float value2) {
			addCriterion("init_degree_number not between", value1, value2,
					"initDegreeNumber");
			return (Criteria) this;
		}

		public Criteria andInitDatetimeIsNull() {
			addCriterion("init_datetime is null");
			return (Criteria) this;
		}

		public Criteria andInitDatetimeIsNotNull() {
			addCriterion("init_datetime is not null");
			return (Criteria) this;
		}

		public Criteria andInitDatetimeEqualTo(Date value) {
			addCriterion("init_datetime =", value, "initDatetime");
			return (Criteria) this;
		}

		public Criteria andInitDatetimeNotEqualTo(Date value) {
			addCriterion("init_datetime <>", value, "initDatetime");
			return (Criteria) this;
		}

		public Criteria andInitDatetimeGreaterThan(Date value) {
			addCriterion("init_datetime >", value, "initDatetime");
			return (Criteria) this;
		}

		public Criteria andInitDatetimeGreaterThanOrEqualTo(Date value) {
			addCriterion("init_datetime >=", value, "initDatetime");
			return (Criteria) this;
		}

		public Criteria andInitDatetimeLessThan(Date value) {
			addCriterion("init_datetime <", value, "initDatetime");
			return (Criteria) this;
		}

		public Criteria andInitDatetimeLessThanOrEqualTo(Date value) {
			addCriterion("init_datetime <=", value, "initDatetime");
			return (Criteria) this;
		}

		public Criteria andInitDatetimeIn(List<Date> values) {
			addCriterion("init_datetime in", values, "initDatetime");
			return (Criteria) this;
		}

		public Criteria andInitDatetimeNotIn(List<Date> values) {
			addCriterion("init_datetime not in", values, "initDatetime");
			return (Criteria) this;
		}

		public Criteria andInitDatetimeBetween(Date value1, Date value2) {
			addCriterion("init_datetime between", value1, value2,
					"initDatetime");
			return (Criteria) this;
		}

		public Criteria andInitDatetimeNotBetween(Date value1, Date value2) {
			addCriterion("init_datetime not between", value1, value2,
					"initDatetime");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table pension_ammeter
	 * @mbggenerated  Thu Dec 12 17:39:57 CST 2013
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue,
				String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table pension_ammeter
     *
     * @mbggenerated do_not_delete_during_merge Tue Oct 29 15:30:49 GMT+08:00 2013
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}