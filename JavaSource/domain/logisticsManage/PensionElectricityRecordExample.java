package domain.logisticsManage;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class PensionElectricityRecordExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table pension_electricity_record
	 * @mbggenerated  Fri Dec 06 14:36:03 CST 2013
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table pension_electricity_record
	 * @mbggenerated  Fri Dec 06 14:36:03 CST 2013
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table pension_electricity_record
	 * @mbggenerated  Fri Dec 06 14:36:03 CST 2013
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_electricity_record
	 * @mbggenerated  Fri Dec 06 14:36:03 CST 2013
	 */
	public PensionElectricityRecordExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_electricity_record
	 * @mbggenerated  Fri Dec 06 14:36:03 CST 2013
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_electricity_record
	 * @mbggenerated  Fri Dec 06 14:36:03 CST 2013
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_electricity_record
	 * @mbggenerated  Fri Dec 06 14:36:03 CST 2013
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_electricity_record
	 * @mbggenerated  Fri Dec 06 14:36:03 CST 2013
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_electricity_record
	 * @mbggenerated  Fri Dec 06 14:36:03 CST 2013
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_electricity_record
	 * @mbggenerated  Fri Dec 06 14:36:03 CST 2013
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_electricity_record
	 * @mbggenerated  Fri Dec 06 14:36:03 CST 2013
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_electricity_record
	 * @mbggenerated  Fri Dec 06 14:36:03 CST 2013
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_electricity_record
	 * @mbggenerated  Fri Dec 06 14:36:03 CST 2013
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_electricity_record
	 * @mbggenerated  Fri Dec 06 14:36:03 CST 2013
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table pension_electricity_record
	 * @mbggenerated  Fri Dec 06 14:36:03 CST 2013
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null || value.toString().equals("")) {
				addCriterion("1=1");
				return;
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null
					|| value1.toString().equals("")
					|| value2.toString().equals("")) {
				addCriterion("1=1");
				return;
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		public Criteria andIdIsNull() {
			addCriterion("id is null");
			return (Criteria) this;
		}

		public Criteria andIdIsNotNull() {
			addCriterion("id is not null");
			return (Criteria) this;
		}

		public Criteria andIdEqualTo(Long value) {
			addCriterion("id =", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotEqualTo(Long value) {
			addCriterion("id <>", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThan(Long value) {
			addCriterion("id >", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThanOrEqualTo(Long value) {
			addCriterion("id >=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThan(Long value) {
			addCriterion("id <", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThanOrEqualTo(Long value) {
			addCriterion("id <=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdIn(List<Long> values) {
			addCriterion("id in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotIn(List<Long> values) {
			addCriterion("id not in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdBetween(Long value1, Long value2) {
			addCriterion("id between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotBetween(Long value1, Long value2) {
			addCriterion("id not between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andDegreesNumberIsNull() {
			addCriterion("degrees_number is null");
			return (Criteria) this;
		}

		public Criteria andDegreesNumberIsNotNull() {
			addCriterion("degrees_number is not null");
			return (Criteria) this;
		}

		public Criteria andDegreesNumberEqualTo(Float value) {
			addCriterion("degrees_number =", value, "degreesNumber");
			return (Criteria) this;
		}

		public Criteria andDegreesNumberNotEqualTo(Float value) {
			addCriterion("degrees_number <>", value, "degreesNumber");
			return (Criteria) this;
		}

		public Criteria andDegreesNumberGreaterThan(Float value) {
			addCriterion("degrees_number >", value, "degreesNumber");
			return (Criteria) this;
		}

		public Criteria andDegreesNumberGreaterThanOrEqualTo(Float value) {
			addCriterion("degrees_number >=", value, "degreesNumber");
			return (Criteria) this;
		}

		public Criteria andDegreesNumberLessThan(Float value) {
			addCriterion("degrees_number <", value, "degreesNumber");
			return (Criteria) this;
		}

		public Criteria andDegreesNumberLessThanOrEqualTo(Float value) {
			addCriterion("degrees_number <=", value, "degreesNumber");
			return (Criteria) this;
		}

		public Criteria andDegreesNumberIn(List<Float> values) {
			addCriterion("degrees_number in", values, "degreesNumber");
			return (Criteria) this;
		}

		public Criteria andDegreesNumberNotIn(List<Float> values) {
			addCriterion("degrees_number not in", values, "degreesNumber");
			return (Criteria) this;
		}

		public Criteria andDegreesNumberBetween(Float value1, Float value2) {
			addCriterion("degrees_number between", value1, value2,
					"degreesNumber");
			return (Criteria) this;
		}

		public Criteria andDegreesNumberNotBetween(Float value1, Float value2) {
			addCriterion("degrees_number not between", value1, value2,
					"degreesNumber");
			return (Criteria) this;
		}

		public Criteria andLatelyFlagIsNull() {
			addCriterion("lately_flag is null");
			return (Criteria) this;
		}

		public Criteria andLatelyFlagIsNotNull() {
			addCriterion("lately_flag is not null");
			return (Criteria) this;
		}

		public Criteria andLatelyFlagEqualTo(Integer value) {
			addCriterion("lately_flag =", value, "latelyFlag");
			return (Criteria) this;
		}

		public Criteria andLatelyFlagNotEqualTo(Integer value) {
			addCriterion("lately_flag <>", value, "latelyFlag");
			return (Criteria) this;
		}

		public Criteria andLatelyFlagGreaterThan(Integer value) {
			addCriterion("lately_flag >", value, "latelyFlag");
			return (Criteria) this;
		}

		public Criteria andLatelyFlagGreaterThanOrEqualTo(Integer value) {
			addCriterion("lately_flag >=", value, "latelyFlag");
			return (Criteria) this;
		}

		public Criteria andLatelyFlagLessThan(Integer value) {
			addCriterion("lately_flag <", value, "latelyFlag");
			return (Criteria) this;
		}

		public Criteria andLatelyFlagLessThanOrEqualTo(Integer value) {
			addCriterion("lately_flag <=", value, "latelyFlag");
			return (Criteria) this;
		}

		public Criteria andLatelyFlagIn(List<Integer> values) {
			addCriterion("lately_flag in", values, "latelyFlag");
			return (Criteria) this;
		}

		public Criteria andLatelyFlagNotIn(List<Integer> values) {
			addCriterion("lately_flag not in", values, "latelyFlag");
			return (Criteria) this;
		}

		public Criteria andLatelyFlagBetween(Integer value1, Integer value2) {
			addCriterion("lately_flag between", value1, value2, "latelyFlag");
			return (Criteria) this;
		}

		public Criteria andLatelyFlagNotBetween(Integer value1, Integer value2) {
			addCriterion("lately_flag not between", value1, value2,
					"latelyFlag");
			return (Criteria) this;
		}

		public Criteria andAmmeterIdIsNull() {
			addCriterion("ammeter_id is null");
			return (Criteria) this;
		}

		public Criteria andAmmeterIdIsNotNull() {
			addCriterion("ammeter_id is not null");
			return (Criteria) this;
		}

		public Criteria andAmmeterIdEqualTo(Long value) {
			addCriterion("ammeter_id =", value, "ammeterId");
			return (Criteria) this;
		}

		public Criteria andAmmeterIdNotEqualTo(Long value) {
			addCriterion("ammeter_id <>", value, "ammeterId");
			return (Criteria) this;
		}

		public Criteria andAmmeterIdGreaterThan(Long value) {
			addCriterion("ammeter_id >", value, "ammeterId");
			return (Criteria) this;
		}

		public Criteria andAmmeterIdGreaterThanOrEqualTo(Long value) {
			addCriterion("ammeter_id >=", value, "ammeterId");
			return (Criteria) this;
		}

		public Criteria andAmmeterIdLessThan(Long value) {
			addCriterion("ammeter_id <", value, "ammeterId");
			return (Criteria) this;
		}

		public Criteria andAmmeterIdLessThanOrEqualTo(Long value) {
			addCriterion("ammeter_id <=", value, "ammeterId");
			return (Criteria) this;
		}

		public Criteria andAmmeterIdIn(List<Long> values) {
			addCriterion("ammeter_id in", values, "ammeterId");
			return (Criteria) this;
		}

		public Criteria andAmmeterIdNotIn(List<Long> values) {
			addCriterion("ammeter_id not in", values, "ammeterId");
			return (Criteria) this;
		}

		public Criteria andAmmeterIdBetween(Long value1, Long value2) {
			addCriterion("ammeter_id between", value1, value2, "ammeterId");
			return (Criteria) this;
		}

		public Criteria andAmmeterIdNotBetween(Long value1, Long value2) {
			addCriterion("ammeter_id not between", value1, value2, "ammeterId");
			return (Criteria) this;
		}

		public Criteria andInputuserIdIsNull() {
			addCriterion("inputuser_id is null");
			return (Criteria) this;
		}

		public Criteria andInputuserIdIsNotNull() {
			addCriterion("inputuser_id is not null");
			return (Criteria) this;
		}

		public Criteria andInputuserIdEqualTo(Long value) {
			addCriterion("inputuser_id =", value, "inputuserId");
			return (Criteria) this;
		}

		public Criteria andInputuserIdNotEqualTo(Long value) {
			addCriterion("inputuser_id <>", value, "inputuserId");
			return (Criteria) this;
		}

		public Criteria andInputuserIdGreaterThan(Long value) {
			addCriterion("inputuser_id >", value, "inputuserId");
			return (Criteria) this;
		}

		public Criteria andInputuserIdGreaterThanOrEqualTo(Long value) {
			addCriterion("inputuser_id >=", value, "inputuserId");
			return (Criteria) this;
		}

		public Criteria andInputuserIdLessThan(Long value) {
			addCriterion("inputuser_id <", value, "inputuserId");
			return (Criteria) this;
		}

		public Criteria andInputuserIdLessThanOrEqualTo(Long value) {
			addCriterion("inputuser_id <=", value, "inputuserId");
			return (Criteria) this;
		}

		public Criteria andInputuserIdIn(List<Long> values) {
			addCriterion("inputuser_id in", values, "inputuserId");
			return (Criteria) this;
		}

		public Criteria andInputuserIdNotIn(List<Long> values) {
			addCriterion("inputuser_id not in", values, "inputuserId");
			return (Criteria) this;
		}

		public Criteria andInputuserIdBetween(Long value1, Long value2) {
			addCriterion("inputuser_id between", value1, value2, "inputuserId");
			return (Criteria) this;
		}

		public Criteria andInputuserIdNotBetween(Long value1, Long value2) {
			addCriterion("inputuser_id not between", value1, value2,
					"inputuserId");
			return (Criteria) this;
		}

		public Criteria andInputTimeIsNull() {
			addCriterion("input_time is null");
			return (Criteria) this;
		}

		public Criteria andInputTimeIsNotNull() {
			addCriterion("input_time is not null");
			return (Criteria) this;
		}

		public Criteria andInputTimeEqualTo(Date value) {
			addCriterion("input_time =", value, "inputTime");
			return (Criteria) this;
		}

		public Criteria andInputTimeNotEqualTo(Date value) {
			addCriterion("input_time <>", value, "inputTime");
			return (Criteria) this;
		}

		public Criteria andInputTimeGreaterThan(Date value) {
			addCriterion("input_time >", value, "inputTime");
			return (Criteria) this;
		}

		public Criteria andInputTimeGreaterThanOrEqualTo(Date value) {
			addCriterion("input_time >=", value, "inputTime");
			return (Criteria) this;
		}

		public Criteria andInputTimeLessThan(Date value) {
			addCriterion("input_time <", value, "inputTime");
			return (Criteria) this;
		}

		public Criteria andInputTimeLessThanOrEqualTo(Date value) {
			addCriterion("input_time <=", value, "inputTime");
			return (Criteria) this;
		}

		public Criteria andInputTimeIn(List<Date> values) {
			addCriterion("input_time in", values, "inputTime");
			return (Criteria) this;
		}

		public Criteria andInputTimeNotIn(List<Date> values) {
			addCriterion("input_time not in", values, "inputTime");
			return (Criteria) this;
		}

		public Criteria andInputTimeBetween(Date value1, Date value2) {
			addCriterion("input_time between", value1, value2, "inputTime");
			return (Criteria) this;
		}

		public Criteria andInputTimeNotBetween(Date value1, Date value2) {
			addCriterion("input_time not between", value1, value2, "inputTime");
			return (Criteria) this;
		}

		public Criteria andClearedIsNull() {
			addCriterion("cleared is null");
			return (Criteria) this;
		}

		public Criteria andClearedIsNotNull() {
			addCriterion("cleared is not null");
			return (Criteria) this;
		}

		public Criteria andClearedEqualTo(Integer value) {
			addCriterion("cleared =", value, "cleared");
			return (Criteria) this;
		}

		public Criteria andClearedNotEqualTo(Integer value) {
			addCriterion("cleared <>", value, "cleared");
			return (Criteria) this;
		}

		public Criteria andClearedGreaterThan(Integer value) {
			addCriterion("cleared >", value, "cleared");
			return (Criteria) this;
		}

		public Criteria andClearedGreaterThanOrEqualTo(Integer value) {
			addCriterion("cleared >=", value, "cleared");
			return (Criteria) this;
		}

		public Criteria andClearedLessThan(Integer value) {
			addCriterion("cleared <", value, "cleared");
			return (Criteria) this;
		}

		public Criteria andClearedLessThanOrEqualTo(Integer value) {
			addCriterion("cleared <=", value, "cleared");
			return (Criteria) this;
		}

		public Criteria andClearedIn(List<Integer> values) {
			addCriterion("cleared in", values, "cleared");
			return (Criteria) this;
		}

		public Criteria andClearedNotIn(List<Integer> values) {
			addCriterion("cleared not in", values, "cleared");
			return (Criteria) this;
		}

		public Criteria andClearedBetween(Integer value1, Integer value2) {
			addCriterion("cleared between", value1, value2, "cleared");
			return (Criteria) this;
		}

		public Criteria andClearedNotBetween(Integer value1, Integer value2) {
			addCriterion("cleared not between", value1, value2, "cleared");
			return (Criteria) this;
		}

		public Criteria andNoteIsNull() {
			addCriterion("note is null");
			return (Criteria) this;
		}

		public Criteria andNoteIsNotNull() {
			addCriterion("note is not null");
			return (Criteria) this;
		}

		public Criteria andNoteEqualTo(String value) {
			addCriterion("note =", value, "note");
			return (Criteria) this;
		}

		public Criteria andNoteNotEqualTo(String value) {
			addCriterion("note <>", value, "note");
			return (Criteria) this;
		}

		public Criteria andNoteGreaterThan(String value) {
			addCriterion("note >", value, "note");
			return (Criteria) this;
		}

		public Criteria andNoteGreaterThanOrEqualTo(String value) {
			addCriterion("note >=", value, "note");
			return (Criteria) this;
		}

		public Criteria andNoteLessThan(String value) {
			addCriterion("note <", value, "note");
			return (Criteria) this;
		}

		public Criteria andNoteLessThanOrEqualTo(String value) {
			addCriterion("note <=", value, "note");
			return (Criteria) this;
		}

		public Criteria andNoteLike(String value) {
			addCriterion("note like", value, "note");
			return (Criteria) this;
		}

		public Criteria andNoteNotLike(String value) {
			addCriterion("note not like", value, "note");
			return (Criteria) this;
		}

		public Criteria andNoteIn(List<String> values) {
			addCriterion("note in", values, "note");
			return (Criteria) this;
		}

		public Criteria andNoteNotIn(List<String> values) {
			addCriterion("note not in", values, "note");
			return (Criteria) this;
		}

		public Criteria andNoteBetween(String value1, String value2) {
			addCriterion("note between", value1, value2, "note");
			return (Criteria) this;
		}

		public Criteria andNoteNotBetween(String value1, String value2) {
			addCriterion("note not between", value1, value2, "note");
			return (Criteria) this;
		}

		public Criteria andLastDegreesNumberIsNull() {
			addCriterion("last_degrees_number is null");
			return (Criteria) this;
		}

		public Criteria andLastDegreesNumberIsNotNull() {
			addCriterion("last_degrees_number is not null");
			return (Criteria) this;
		}

		public Criteria andLastDegreesNumberEqualTo(Float value) {
			addCriterion("last_degrees_number =", value, "lastDegreesNumber");
			return (Criteria) this;
		}

		public Criteria andLastDegreesNumberNotEqualTo(Float value) {
			addCriterion("last_degrees_number <>", value, "lastDegreesNumber");
			return (Criteria) this;
		}

		public Criteria andLastDegreesNumberGreaterThan(Float value) {
			addCriterion("last_degrees_number >", value, "lastDegreesNumber");
			return (Criteria) this;
		}

		public Criteria andLastDegreesNumberGreaterThanOrEqualTo(Float value) {
			addCriterion("last_degrees_number >=", value, "lastDegreesNumber");
			return (Criteria) this;
		}

		public Criteria andLastDegreesNumberLessThan(Float value) {
			addCriterion("last_degrees_number <", value, "lastDegreesNumber");
			return (Criteria) this;
		}

		public Criteria andLastDegreesNumberLessThanOrEqualTo(Float value) {
			addCriterion("last_degrees_number <=", value, "lastDegreesNumber");
			return (Criteria) this;
		}

		public Criteria andLastDegreesNumberIn(List<Float> values) {
			addCriterion("last_degrees_number in", values, "lastDegreesNumber");
			return (Criteria) this;
		}

		public Criteria andLastDegreesNumberNotIn(List<Float> values) {
			addCriterion("last_degrees_number not in", values,
					"lastDegreesNumber");
			return (Criteria) this;
		}

		public Criteria andLastDegreesNumberBetween(Float value1, Float value2) {
			addCriterion("last_degrees_number between", value1, value2,
					"lastDegreesNumber");
			return (Criteria) this;
		}

		public Criteria andLastDegreesNumberNotBetween(Float value1,
				Float value2) {
			addCriterion("last_degrees_number not between", value1, value2,
					"lastDegreesNumber");
			return (Criteria) this;
		}

		public Criteria andLastInputTimeIsNull() {
			addCriterion("last_input_time is null");
			return (Criteria) this;
		}

		public Criteria andLastInputTimeIsNotNull() {
			addCriterion("last_input_time is not null");
			return (Criteria) this;
		}

		public Criteria andLastInputTimeEqualTo(Date value) {
			addCriterion("last_input_time =", value, "lastInputTime");
			return (Criteria) this;
		}

		public Criteria andLastInputTimeNotEqualTo(Date value) {
			addCriterion("last_input_time <>", value, "lastInputTime");
			return (Criteria) this;
		}

		public Criteria andLastInputTimeGreaterThan(Date value) {
			addCriterion("last_input_time >", value, "lastInputTime");
			return (Criteria) this;
		}

		public Criteria andLastInputTimeGreaterThanOrEqualTo(Date value) {
			addCriterion("last_input_time >=", value, "lastInputTime");
			return (Criteria) this;
		}

		public Criteria andLastInputTimeLessThan(Date value) {
			addCriterion("last_input_time <", value, "lastInputTime");
			return (Criteria) this;
		}

		public Criteria andLastInputTimeLessThanOrEqualTo(Date value) {
			addCriterion("last_input_time <=", value, "lastInputTime");
			return (Criteria) this;
		}

		public Criteria andLastInputTimeIn(List<Date> values) {
			addCriterion("last_input_time in", values, "lastInputTime");
			return (Criteria) this;
		}

		public Criteria andLastInputTimeNotIn(List<Date> values) {
			addCriterion("last_input_time not in", values, "lastInputTime");
			return (Criteria) this;
		}

		public Criteria andLastInputTimeBetween(Date value1, Date value2) {
			addCriterion("last_input_time between", value1, value2,
					"lastInputTime");
			return (Criteria) this;
		}

		public Criteria andLastInputTimeNotBetween(Date value1, Date value2) {
			addCriterion("last_input_time not between", value1, value2,
					"lastInputTime");
			return (Criteria) this;
		}

		public Criteria andEnsureFlagIsNull() {
			addCriterion("ensure_flag is null");
			return (Criteria) this;
		}

		public Criteria andEnsureFlagIsNotNull() {
			addCriterion("ensure_flag is not null");
			return (Criteria) this;
		}

		public Criteria andEnsureFlagEqualTo(Integer value) {
			addCriterion("ensure_flag =", value, "ensureFlag");
			return (Criteria) this;
		}

		public Criteria andEnsureFlagNotEqualTo(Integer value) {
			addCriterion("ensure_flag <>", value, "ensureFlag");
			return (Criteria) this;
		}

		public Criteria andEnsureFlagGreaterThan(Integer value) {
			addCriterion("ensure_flag >", value, "ensureFlag");
			return (Criteria) this;
		}

		public Criteria andEnsureFlagGreaterThanOrEqualTo(Integer value) {
			addCriterion("ensure_flag >=", value, "ensureFlag");
			return (Criteria) this;
		}

		public Criteria andEnsureFlagLessThan(Integer value) {
			addCriterion("ensure_flag <", value, "ensureFlag");
			return (Criteria) this;
		}

		public Criteria andEnsureFlagLessThanOrEqualTo(Integer value) {
			addCriterion("ensure_flag <=", value, "ensureFlag");
			return (Criteria) this;
		}

		public Criteria andEnsureFlagIn(List<Integer> values) {
			addCriterion("ensure_flag in", values, "ensureFlag");
			return (Criteria) this;
		}

		public Criteria andEnsureFlagNotIn(List<Integer> values) {
			addCriterion("ensure_flag not in", values, "ensureFlag");
			return (Criteria) this;
		}

		public Criteria andEnsureFlagBetween(Integer value1, Integer value2) {
			addCriterion("ensure_flag between", value1, value2, "ensureFlag");
			return (Criteria) this;
		}

		public Criteria andEnsureFlagNotBetween(Integer value1, Integer value2) {
			addCriterion("ensure_flag not between", value1, value2,
					"ensureFlag");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table pension_electricity_record
	 * @mbggenerated  Fri Dec 06 14:36:03 CST 2013
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue,
				String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table pension_electricity_record
     *
     * @mbggenerated do_not_delete_during_merge Tue Oct 29 15:30:49 GMT+08:00 2013
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}