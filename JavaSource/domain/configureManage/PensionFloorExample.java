package domain.configureManage;

import java.util.ArrayList;
import java.util.List;

public class PensionFloorExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table pension_floor
	 * @mbggenerated  Tue Apr 29 17:18:00 CST 2014
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table pension_floor
	 * @mbggenerated  Tue Apr 29 17:18:00 CST 2014
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table pension_floor
	 * @mbggenerated  Tue Apr 29 17:18:00 CST 2014
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_floor
	 * @mbggenerated  Tue Apr 29 17:18:00 CST 2014
	 */
	public PensionFloorExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_floor
	 * @mbggenerated  Tue Apr 29 17:18:00 CST 2014
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_floor
	 * @mbggenerated  Tue Apr 29 17:18:00 CST 2014
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_floor
	 * @mbggenerated  Tue Apr 29 17:18:00 CST 2014
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_floor
	 * @mbggenerated  Tue Apr 29 17:18:00 CST 2014
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_floor
	 * @mbggenerated  Tue Apr 29 17:18:00 CST 2014
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_floor
	 * @mbggenerated  Tue Apr 29 17:18:00 CST 2014
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_floor
	 * @mbggenerated  Tue Apr 29 17:18:00 CST 2014
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_floor
	 * @mbggenerated  Tue Apr 29 17:18:00 CST 2014
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_floor
	 * @mbggenerated  Tue Apr 29 17:18:00 CST 2014
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_floor
	 * @mbggenerated  Tue Apr 29 17:18:00 CST 2014
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table pension_floor
	 * @mbggenerated  Tue Apr 29 17:18:00 CST 2014
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null || value.toString().equals("")) {
				addCriterion("1=1");
				return;
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null
					|| value1.toString().equals("")
					|| value2.toString().equals("")) {
				addCriterion("1=1");
				return;
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		public Criteria andIdIsNull() {
			addCriterion("id is null");
			return (Criteria) this;
		}

		public Criteria andIdIsNotNull() {
			addCriterion("id is not null");
			return (Criteria) this;
		}

		public Criteria andIdEqualTo(Long value) {
			addCriterion("id =", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotEqualTo(Long value) {
			addCriterion("id <>", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThan(Long value) {
			addCriterion("id >", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThanOrEqualTo(Long value) {
			addCriterion("id >=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThan(Long value) {
			addCriterion("id <", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThanOrEqualTo(Long value) {
			addCriterion("id <=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdIn(List<Long> values) {
			addCriterion("id in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotIn(List<Long> values) {
			addCriterion("id not in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdBetween(Long value1, Long value2) {
			addCriterion("id between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotBetween(Long value1, Long value2) {
			addCriterion("id not between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andBuildIdIsNull() {
			addCriterion("build_id is null");
			return (Criteria) this;
		}

		public Criteria andBuildIdIsNotNull() {
			addCriterion("build_id is not null");
			return (Criteria) this;
		}

		public Criteria andBuildIdEqualTo(Long value) {
			addCriterion("build_id =", value, "buildId");
			return (Criteria) this;
		}

		public Criteria andBuildIdNotEqualTo(Long value) {
			addCriterion("build_id <>", value, "buildId");
			return (Criteria) this;
		}

		public Criteria andBuildIdGreaterThan(Long value) {
			addCriterion("build_id >", value, "buildId");
			return (Criteria) this;
		}

		public Criteria andBuildIdGreaterThanOrEqualTo(Long value) {
			addCriterion("build_id >=", value, "buildId");
			return (Criteria) this;
		}

		public Criteria andBuildIdLessThan(Long value) {
			addCriterion("build_id <", value, "buildId");
			return (Criteria) this;
		}

		public Criteria andBuildIdLessThanOrEqualTo(Long value) {
			addCriterion("build_id <=", value, "buildId");
			return (Criteria) this;
		}

		public Criteria andBuildIdIn(List<Long> values) {
			addCriterion("build_id in", values, "buildId");
			return (Criteria) this;
		}

		public Criteria andBuildIdNotIn(List<Long> values) {
			addCriterion("build_id not in", values, "buildId");
			return (Criteria) this;
		}

		public Criteria andBuildIdBetween(Long value1, Long value2) {
			addCriterion("build_id between", value1, value2, "buildId");
			return (Criteria) this;
		}

		public Criteria andBuildIdNotBetween(Long value1, Long value2) {
			addCriterion("build_id not between", value1, value2, "buildId");
			return (Criteria) this;
		}

		public Criteria andNameIsNull() {
			addCriterion("name is null");
			return (Criteria) this;
		}

		public Criteria andNameIsNotNull() {
			addCriterion("name is not null");
			return (Criteria) this;
		}

		public Criteria andNameEqualTo(String value) {
			addCriterion("name =", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameNotEqualTo(String value) {
			addCriterion("name <>", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameGreaterThan(String value) {
			addCriterion("name >", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameGreaterThanOrEqualTo(String value) {
			addCriterion("name >=", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameLessThan(String value) {
			addCriterion("name <", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameLessThanOrEqualTo(String value) {
			addCriterion("name <=", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameLike(String value) {
			addCriterion("name like", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameNotLike(String value) {
			addCriterion("name not like", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameIn(List<String> values) {
			addCriterion("name in", values, "name");
			return (Criteria) this;
		}

		public Criteria andNameNotIn(List<String> values) {
			addCriterion("name not in", values, "name");
			return (Criteria) this;
		}

		public Criteria andNameBetween(String value1, String value2) {
			addCriterion("name between", value1, value2, "name");
			return (Criteria) this;
		}

		public Criteria andNameNotBetween(String value1, String value2) {
			addCriterion("name not between", value1, value2, "name");
			return (Criteria) this;
		}

		public Criteria andBuildnameIsNull() {
			addCriterion("buildName is null");
			return (Criteria) this;
		}

		public Criteria andBuildnameIsNotNull() {
			addCriterion("buildName is not null");
			return (Criteria) this;
		}

		public Criteria andBuildnameEqualTo(String value) {
			addCriterion("buildName =", value, "buildname");
			return (Criteria) this;
		}

		public Criteria andBuildnameNotEqualTo(String value) {
			addCriterion("buildName <>", value, "buildname");
			return (Criteria) this;
		}

		public Criteria andBuildnameGreaterThan(String value) {
			addCriterion("buildName >", value, "buildname");
			return (Criteria) this;
		}

		public Criteria andBuildnameGreaterThanOrEqualTo(String value) {
			addCriterion("buildName >=", value, "buildname");
			return (Criteria) this;
		}

		public Criteria andBuildnameLessThan(String value) {
			addCriterion("buildName <", value, "buildname");
			return (Criteria) this;
		}

		public Criteria andBuildnameLessThanOrEqualTo(String value) {
			addCriterion("buildName <=", value, "buildname");
			return (Criteria) this;
		}

		public Criteria andBuildnameLike(String value) {
			addCriterion("buildName like", value, "buildname");
			return (Criteria) this;
		}

		public Criteria andBuildnameNotLike(String value) {
			addCriterion("buildName not like", value, "buildname");
			return (Criteria) this;
		}

		public Criteria andBuildnameIn(List<String> values) {
			addCriterion("buildName in", values, "buildname");
			return (Criteria) this;
		}

		public Criteria andBuildnameNotIn(List<String> values) {
			addCriterion("buildName not in", values, "buildname");
			return (Criteria) this;
		}

		public Criteria andBuildnameBetween(String value1, String value2) {
			addCriterion("buildName between", value1, value2, "buildname");
			return (Criteria) this;
		}

		public Criteria andBuildnameNotBetween(String value1, String value2) {
			addCriterion("buildName not between", value1, value2, "buildname");
			return (Criteria) this;
		}

		public Criteria andManagerIdIsNull() {
			addCriterion("manager_id is null");
			return (Criteria) this;
		}

		public Criteria andManagerIdIsNotNull() {
			addCriterion("manager_id is not null");
			return (Criteria) this;
		}

		public Criteria andManagerIdEqualTo(Integer value) {
			addCriterion("manager_id =", value, "managerId");
			return (Criteria) this;
		}

		public Criteria andManagerIdNotEqualTo(Integer value) {
			addCriterion("manager_id <>", value, "managerId");
			return (Criteria) this;
		}

		public Criteria andManagerIdGreaterThan(Integer value) {
			addCriterion("manager_id >", value, "managerId");
			return (Criteria) this;
		}

		public Criteria andManagerIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("manager_id >=", value, "managerId");
			return (Criteria) this;
		}

		public Criteria andManagerIdLessThan(Integer value) {
			addCriterion("manager_id <", value, "managerId");
			return (Criteria) this;
		}

		public Criteria andManagerIdLessThanOrEqualTo(Integer value) {
			addCriterion("manager_id <=", value, "managerId");
			return (Criteria) this;
		}

		public Criteria andManagerIdIn(List<Integer> values) {
			addCriterion("manager_id in", values, "managerId");
			return (Criteria) this;
		}

		public Criteria andManagerIdNotIn(List<Integer> values) {
			addCriterion("manager_id not in", values, "managerId");
			return (Criteria) this;
		}

		public Criteria andManagerIdBetween(Integer value1, Integer value2) {
			addCriterion("manager_id between", value1, value2, "managerId");
			return (Criteria) this;
		}

		public Criteria andManagerIdNotBetween(Integer value1, Integer value2) {
			addCriterion("manager_id not between", value1, value2, "managerId");
			return (Criteria) this;
		}

		public Criteria andRoomnumberIsNull() {
			addCriterion("roomNumber is null");
			return (Criteria) this;
		}

		public Criteria andRoomnumberIsNotNull() {
			addCriterion("roomNumber is not null");
			return (Criteria) this;
		}

		public Criteria andRoomnumberEqualTo(Integer value) {
			addCriterion("roomNumber =", value, "roomnumber");
			return (Criteria) this;
		}

		public Criteria andRoomnumberNotEqualTo(Integer value) {
			addCriterion("roomNumber <>", value, "roomnumber");
			return (Criteria) this;
		}

		public Criteria andRoomnumberGreaterThan(Integer value) {
			addCriterion("roomNumber >", value, "roomnumber");
			return (Criteria) this;
		}

		public Criteria andRoomnumberGreaterThanOrEqualTo(Integer value) {
			addCriterion("roomNumber >=", value, "roomnumber");
			return (Criteria) this;
		}

		public Criteria andRoomnumberLessThan(Integer value) {
			addCriterion("roomNumber <", value, "roomnumber");
			return (Criteria) this;
		}

		public Criteria andRoomnumberLessThanOrEqualTo(Integer value) {
			addCriterion("roomNumber <=", value, "roomnumber");
			return (Criteria) this;
		}

		public Criteria andRoomnumberIn(List<Integer> values) {
			addCriterion("roomNumber in", values, "roomnumber");
			return (Criteria) this;
		}

		public Criteria andRoomnumberNotIn(List<Integer> values) {
			addCriterion("roomNumber not in", values, "roomnumber");
			return (Criteria) this;
		}

		public Criteria andRoomnumberBetween(Integer value1, Integer value2) {
			addCriterion("roomNumber between", value1, value2, "roomnumber");
			return (Criteria) this;
		}

		public Criteria andRoomnumberNotBetween(Integer value1, Integer value2) {
			addCriterion("roomNumber not between", value1, value2, "roomnumber");
			return (Criteria) this;
		}

		public Criteria andBednumberIsNull() {
			addCriterion("bedNumber is null");
			return (Criteria) this;
		}

		public Criteria andBednumberIsNotNull() {
			addCriterion("bedNumber is not null");
			return (Criteria) this;
		}

		public Criteria andBednumberEqualTo(Integer value) {
			addCriterion("bedNumber =", value, "bednumber");
			return (Criteria) this;
		}

		public Criteria andBednumberNotEqualTo(Integer value) {
			addCriterion("bedNumber <>", value, "bednumber");
			return (Criteria) this;
		}

		public Criteria andBednumberGreaterThan(Integer value) {
			addCriterion("bedNumber >", value, "bednumber");
			return (Criteria) this;
		}

		public Criteria andBednumberGreaterThanOrEqualTo(Integer value) {
			addCriterion("bedNumber >=", value, "bednumber");
			return (Criteria) this;
		}

		public Criteria andBednumberLessThan(Integer value) {
			addCriterion("bedNumber <", value, "bednumber");
			return (Criteria) this;
		}

		public Criteria andBednumberLessThanOrEqualTo(Integer value) {
			addCriterion("bedNumber <=", value, "bednumber");
			return (Criteria) this;
		}

		public Criteria andBednumberIn(List<Integer> values) {
			addCriterion("bedNumber in", values, "bednumber");
			return (Criteria) this;
		}

		public Criteria andBednumberNotIn(List<Integer> values) {
			addCriterion("bedNumber not in", values, "bednumber");
			return (Criteria) this;
		}

		public Criteria andBednumberBetween(Integer value1, Integer value2) {
			addCriterion("bedNumber between", value1, value2, "bednumber");
			return (Criteria) this;
		}

		public Criteria andBednumberNotBetween(Integer value1, Integer value2) {
			addCriterion("bedNumber not between", value1, value2, "bednumber");
			return (Criteria) this;
		}

		public Criteria andOldernumberIsNull() {
			addCriterion("olderNumber is null");
			return (Criteria) this;
		}

		public Criteria andOldernumberIsNotNull() {
			addCriterion("olderNumber is not null");
			return (Criteria) this;
		}

		public Criteria andOldernumberEqualTo(Integer value) {
			addCriterion("olderNumber =", value, "oldernumber");
			return (Criteria) this;
		}

		public Criteria andOldernumberNotEqualTo(Integer value) {
			addCriterion("olderNumber <>", value, "oldernumber");
			return (Criteria) this;
		}

		public Criteria andOldernumberGreaterThan(Integer value) {
			addCriterion("olderNumber >", value, "oldernumber");
			return (Criteria) this;
		}

		public Criteria andOldernumberGreaterThanOrEqualTo(Integer value) {
			addCriterion("olderNumber >=", value, "oldernumber");
			return (Criteria) this;
		}

		public Criteria andOldernumberLessThan(Integer value) {
			addCriterion("olderNumber <", value, "oldernumber");
			return (Criteria) this;
		}

		public Criteria andOldernumberLessThanOrEqualTo(Integer value) {
			addCriterion("olderNumber <=", value, "oldernumber");
			return (Criteria) this;
		}

		public Criteria andOldernumberIn(List<Integer> values) {
			addCriterion("olderNumber in", values, "oldernumber");
			return (Criteria) this;
		}

		public Criteria andOldernumberNotIn(List<Integer> values) {
			addCriterion("olderNumber not in", values, "oldernumber");
			return (Criteria) this;
		}

		public Criteria andOldernumberBetween(Integer value1, Integer value2) {
			addCriterion("olderNumber between", value1, value2, "oldernumber");
			return (Criteria) this;
		}

		public Criteria andOldernumberNotBetween(Integer value1, Integer value2) {
			addCriterion("olderNumber not between", value1, value2,
					"oldernumber");
			return (Criteria) this;
		}

		public Criteria andNotesIsNull() {
			addCriterion("notes is null");
			return (Criteria) this;
		}

		public Criteria andNotesIsNotNull() {
			addCriterion("notes is not null");
			return (Criteria) this;
		}

		public Criteria andNotesEqualTo(String value) {
			addCriterion("notes =", value, "notes");
			return (Criteria) this;
		}

		public Criteria andNotesNotEqualTo(String value) {
			addCriterion("notes <>", value, "notes");
			return (Criteria) this;
		}

		public Criteria andNotesGreaterThan(String value) {
			addCriterion("notes >", value, "notes");
			return (Criteria) this;
		}

		public Criteria andNotesGreaterThanOrEqualTo(String value) {
			addCriterion("notes >=", value, "notes");
			return (Criteria) this;
		}

		public Criteria andNotesLessThan(String value) {
			addCriterion("notes <", value, "notes");
			return (Criteria) this;
		}

		public Criteria andNotesLessThanOrEqualTo(String value) {
			addCriterion("notes <=", value, "notes");
			return (Criteria) this;
		}

		public Criteria andNotesLike(String value) {
			addCriterion("notes like", value, "notes");
			return (Criteria) this;
		}

		public Criteria andNotesNotLike(String value) {
			addCriterion("notes not like", value, "notes");
			return (Criteria) this;
		}

		public Criteria andNotesIn(List<String> values) {
			addCriterion("notes in", values, "notes");
			return (Criteria) this;
		}

		public Criteria andNotesNotIn(List<String> values) {
			addCriterion("notes not in", values, "notes");
			return (Criteria) this;
		}

		public Criteria andNotesBetween(String value1, String value2) {
			addCriterion("notes between", value1, value2, "notes");
			return (Criteria) this;
		}

		public Criteria andNotesNotBetween(String value1, String value2) {
			addCriterion("notes not between", value1, value2, "notes");
			return (Criteria) this;
		}

		public Criteria andClearedIsNull() {
			addCriterion("cleared is null");
			return (Criteria) this;
		}

		public Criteria andClearedIsNotNull() {
			addCriterion("cleared is not null");
			return (Criteria) this;
		}

		public Criteria andClearedEqualTo(Integer value) {
			addCriterion("cleared =", value, "cleared");
			return (Criteria) this;
		}

		public Criteria andClearedNotEqualTo(Integer value) {
			addCriterion("cleared <>", value, "cleared");
			return (Criteria) this;
		}

		public Criteria andClearedGreaterThan(Integer value) {
			addCriterion("cleared >", value, "cleared");
			return (Criteria) this;
		}

		public Criteria andClearedGreaterThanOrEqualTo(Integer value) {
			addCriterion("cleared >=", value, "cleared");
			return (Criteria) this;
		}

		public Criteria andClearedLessThan(Integer value) {
			addCriterion("cleared <", value, "cleared");
			return (Criteria) this;
		}

		public Criteria andClearedLessThanOrEqualTo(Integer value) {
			addCriterion("cleared <=", value, "cleared");
			return (Criteria) this;
		}

		public Criteria andClearedIn(List<Integer> values) {
			addCriterion("cleared in", values, "cleared");
			return (Criteria) this;
		}

		public Criteria andClearedNotIn(List<Integer> values) {
			addCriterion("cleared not in", values, "cleared");
			return (Criteria) this;
		}

		public Criteria andClearedBetween(Integer value1, Integer value2) {
			addCriterion("cleared between", value1, value2, "cleared");
			return (Criteria) this;
		}

		public Criteria andClearedNotBetween(Integer value1, Integer value2) {
			addCriterion("cleared not between", value1, value2, "cleared");
			return (Criteria) this;
		}

		public Criteria andSortidIsNull() {
			addCriterion("sortid is null");
			return (Criteria) this;
		}

		public Criteria andSortidIsNotNull() {
			addCriterion("sortid is not null");
			return (Criteria) this;
		}

		public Criteria andSortidEqualTo(Integer value) {
			addCriterion("sortid =", value, "sortid");
			return (Criteria) this;
		}

		public Criteria andSortidNotEqualTo(Integer value) {
			addCriterion("sortid <>", value, "sortid");
			return (Criteria) this;
		}

		public Criteria andSortidGreaterThan(Integer value) {
			addCriterion("sortid >", value, "sortid");
			return (Criteria) this;
		}

		public Criteria andSortidGreaterThanOrEqualTo(Integer value) {
			addCriterion("sortid >=", value, "sortid");
			return (Criteria) this;
		}

		public Criteria andSortidLessThan(Integer value) {
			addCriterion("sortid <", value, "sortid");
			return (Criteria) this;
		}

		public Criteria andSortidLessThanOrEqualTo(Integer value) {
			addCriterion("sortid <=", value, "sortid");
			return (Criteria) this;
		}

		public Criteria andSortidIn(List<Integer> values) {
			addCriterion("sortid in", values, "sortid");
			return (Criteria) this;
		}

		public Criteria andSortidNotIn(List<Integer> values) {
			addCriterion("sortid not in", values, "sortid");
			return (Criteria) this;
		}

		public Criteria andSortidBetween(Integer value1, Integer value2) {
			addCriterion("sortid between", value1, value2, "sortid");
			return (Criteria) this;
		}

		public Criteria andSortidNotBetween(Integer value1, Integer value2) {
			addCriterion("sortid not between", value1, value2, "sortid");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table pension_floor
	 * @mbggenerated  Tue Apr 29 17:18:00 CST 2014
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue,
				String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table pension_floor
     *
     * @mbggenerated do_not_delete_during_merge Wed Aug 28 10:40:11 CST 2013
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}