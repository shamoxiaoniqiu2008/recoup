package domain.olderManage;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class PensionLeaveExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table pension_leave
	 * @mbggenerated  Tue Feb 25 15:17:47 CST 2014
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table pension_leave
	 * @mbggenerated  Tue Feb 25 15:17:47 CST 2014
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table pension_leave
	 * @mbggenerated  Tue Feb 25 15:17:47 CST 2014
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_leave
	 * @mbggenerated  Tue Feb 25 15:17:47 CST 2014
	 */
	public PensionLeaveExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_leave
	 * @mbggenerated  Tue Feb 25 15:17:47 CST 2014
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_leave
	 * @mbggenerated  Tue Feb 25 15:17:47 CST 2014
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_leave
	 * @mbggenerated  Tue Feb 25 15:17:47 CST 2014
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_leave
	 * @mbggenerated  Tue Feb 25 15:17:47 CST 2014
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_leave
	 * @mbggenerated  Tue Feb 25 15:17:47 CST 2014
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_leave
	 * @mbggenerated  Tue Feb 25 15:17:47 CST 2014
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_leave
	 * @mbggenerated  Tue Feb 25 15:17:47 CST 2014
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_leave
	 * @mbggenerated  Tue Feb 25 15:17:47 CST 2014
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_leave
	 * @mbggenerated  Tue Feb 25 15:17:47 CST 2014
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_leave
	 * @mbggenerated  Tue Feb 25 15:17:47 CST 2014
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table pension_leave
	 * @mbggenerated  Tue Feb 25 15:17:47 CST 2014
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null || value.toString().equals("")) {
				addCriterion("1=1");
				return;
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null
					|| value1.toString().equals("")
					|| value2.toString().equals("")) {
				addCriterion("1=1");
				return;
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		public Criteria andIdIsNull() {
			addCriterion("id is null");
			return (Criteria) this;
		}

		public Criteria andIdIsNotNull() {
			addCriterion("id is not null");
			return (Criteria) this;
		}

		public Criteria andIdEqualTo(Long value) {
			addCriterion("id =", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotEqualTo(Long value) {
			addCriterion("id <>", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThan(Long value) {
			addCriterion("id >", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThanOrEqualTo(Long value) {
			addCriterion("id >=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThan(Long value) {
			addCriterion("id <", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThanOrEqualTo(Long value) {
			addCriterion("id <=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdIn(List<Long> values) {
			addCriterion("id in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotIn(List<Long> values) {
			addCriterion("id not in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdBetween(Long value1, Long value2) {
			addCriterion("id between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotBetween(Long value1, Long value2) {
			addCriterion("id not between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andOlderIdIsNull() {
			addCriterion("older_id is null");
			return (Criteria) this;
		}

		public Criteria andOlderIdIsNotNull() {
			addCriterion("older_id is not null");
			return (Criteria) this;
		}

		public Criteria andOlderIdEqualTo(Long value) {
			addCriterion("older_id =", value, "olderId");
			return (Criteria) this;
		}

		public Criteria andOlderIdNotEqualTo(Long value) {
			addCriterion("older_id <>", value, "olderId");
			return (Criteria) this;
		}

		public Criteria andOlderIdGreaterThan(Long value) {
			addCriterion("older_id >", value, "olderId");
			return (Criteria) this;
		}

		public Criteria andOlderIdGreaterThanOrEqualTo(Long value) {
			addCriterion("older_id >=", value, "olderId");
			return (Criteria) this;
		}

		public Criteria andOlderIdLessThan(Long value) {
			addCriterion("older_id <", value, "olderId");
			return (Criteria) this;
		}

		public Criteria andOlderIdLessThanOrEqualTo(Long value) {
			addCriterion("older_id <=", value, "olderId");
			return (Criteria) this;
		}

		public Criteria andOlderIdIn(List<Long> values) {
			addCriterion("older_id in", values, "olderId");
			return (Criteria) this;
		}

		public Criteria andOlderIdNotIn(List<Long> values) {
			addCriterion("older_id not in", values, "olderId");
			return (Criteria) this;
		}

		public Criteria andOlderIdBetween(Long value1, Long value2) {
			addCriterion("older_id between", value1, value2, "olderId");
			return (Criteria) this;
		}

		public Criteria andOlderIdNotBetween(Long value1, Long value2) {
			addCriterion("older_id not between", value1, value2, "olderId");
			return (Criteria) this;
		}

		public Criteria andEscortnameIsNull() {
			addCriterion("escortName is null");
			return (Criteria) this;
		}

		public Criteria andEscortnameIsNotNull() {
			addCriterion("escortName is not null");
			return (Criteria) this;
		}

		public Criteria andEscortnameEqualTo(String value) {
			addCriterion("escortName =", value, "escortname");
			return (Criteria) this;
		}

		public Criteria andEscortnameNotEqualTo(String value) {
			addCriterion("escortName <>", value, "escortname");
			return (Criteria) this;
		}

		public Criteria andEscortnameGreaterThan(String value) {
			addCriterion("escortName >", value, "escortname");
			return (Criteria) this;
		}

		public Criteria andEscortnameGreaterThanOrEqualTo(String value) {
			addCriterion("escortName >=", value, "escortname");
			return (Criteria) this;
		}

		public Criteria andEscortnameLessThan(String value) {
			addCriterion("escortName <", value, "escortname");
			return (Criteria) this;
		}

		public Criteria andEscortnameLessThanOrEqualTo(String value) {
			addCriterion("escortName <=", value, "escortname");
			return (Criteria) this;
		}

		public Criteria andEscortnameLike(String value) {
			addCriterion("escortName like", value, "escortname");
			return (Criteria) this;
		}

		public Criteria andEscortnameNotLike(String value) {
			addCriterion("escortName not like", value, "escortname");
			return (Criteria) this;
		}

		public Criteria andEscortnameIn(List<String> values) {
			addCriterion("escortName in", values, "escortname");
			return (Criteria) this;
		}

		public Criteria andEscortnameNotIn(List<String> values) {
			addCriterion("escortName not in", values, "escortname");
			return (Criteria) this;
		}

		public Criteria andEscortnameBetween(String value1, String value2) {
			addCriterion("escortName between", value1, value2, "escortname");
			return (Criteria) this;
		}

		public Criteria andEscortnameNotBetween(String value1, String value2) {
			addCriterion("escortName not between", value1, value2, "escortname");
			return (Criteria) this;
		}

		public Criteria andEscortphoneIsNull() {
			addCriterion("escortPhone is null");
			return (Criteria) this;
		}

		public Criteria andEscortphoneIsNotNull() {
			addCriterion("escortPhone is not null");
			return (Criteria) this;
		}

		public Criteria andEscortphoneEqualTo(String value) {
			addCriterion("escortPhone =", value, "escortphone");
			return (Criteria) this;
		}

		public Criteria andEscortphoneNotEqualTo(String value) {
			addCriterion("escortPhone <>", value, "escortphone");
			return (Criteria) this;
		}

		public Criteria andEscortphoneGreaterThan(String value) {
			addCriterion("escortPhone >", value, "escortphone");
			return (Criteria) this;
		}

		public Criteria andEscortphoneGreaterThanOrEqualTo(String value) {
			addCriterion("escortPhone >=", value, "escortphone");
			return (Criteria) this;
		}

		public Criteria andEscortphoneLessThan(String value) {
			addCriterion("escortPhone <", value, "escortphone");
			return (Criteria) this;
		}

		public Criteria andEscortphoneLessThanOrEqualTo(String value) {
			addCriterion("escortPhone <=", value, "escortphone");
			return (Criteria) this;
		}

		public Criteria andEscortphoneLike(String value) {
			addCriterion("escortPhone like", value, "escortphone");
			return (Criteria) this;
		}

		public Criteria andEscortphoneNotLike(String value) {
			addCriterion("escortPhone not like", value, "escortphone");
			return (Criteria) this;
		}

		public Criteria andEscortphoneIn(List<String> values) {
			addCriterion("escortPhone in", values, "escortphone");
			return (Criteria) this;
		}

		public Criteria andEscortphoneNotIn(List<String> values) {
			addCriterion("escortPhone not in", values, "escortphone");
			return (Criteria) this;
		}

		public Criteria andEscortphoneBetween(String value1, String value2) {
			addCriterion("escortPhone between", value1, value2, "escortphone");
			return (Criteria) this;
		}

		public Criteria andEscortphoneNotBetween(String value1, String value2) {
			addCriterion("escortPhone not between", value1, value2,
					"escortphone");
			return (Criteria) this;
		}

		public Criteria andSendedIsNull() {
			addCriterion("sended is null");
			return (Criteria) this;
		}

		public Criteria andSendedIsNotNull() {
			addCriterion("sended is not null");
			return (Criteria) this;
		}

		public Criteria andSendedEqualTo(Integer value) {
			addCriterion("sended =", value, "sended");
			return (Criteria) this;
		}

		public Criteria andSendedNotEqualTo(Integer value) {
			addCriterion("sended <>", value, "sended");
			return (Criteria) this;
		}

		public Criteria andSendedGreaterThan(Integer value) {
			addCriterion("sended >", value, "sended");
			return (Criteria) this;
		}

		public Criteria andSendedGreaterThanOrEqualTo(Integer value) {
			addCriterion("sended >=", value, "sended");
			return (Criteria) this;
		}

		public Criteria andSendedLessThan(Integer value) {
			addCriterion("sended <", value, "sended");
			return (Criteria) this;
		}

		public Criteria andSendedLessThanOrEqualTo(Integer value) {
			addCriterion("sended <=", value, "sended");
			return (Criteria) this;
		}

		public Criteria andSendedIn(List<Integer> values) {
			addCriterion("sended in", values, "sended");
			return (Criteria) this;
		}

		public Criteria andSendedNotIn(List<Integer> values) {
			addCriterion("sended not in", values, "sended");
			return (Criteria) this;
		}

		public Criteria andSendedBetween(Integer value1, Integer value2) {
			addCriterion("sended between", value1, value2, "sended");
			return (Criteria) this;
		}

		public Criteria andSendedNotBetween(Integer value1, Integer value2) {
			addCriterion("sended not between", value1, value2, "sended");
			return (Criteria) this;
		}

		public Criteria andLeavereasonIsNull() {
			addCriterion("leaveReason is null");
			return (Criteria) this;
		}

		public Criteria andLeavereasonIsNotNull() {
			addCriterion("leaveReason is not null");
			return (Criteria) this;
		}

		public Criteria andLeavereasonEqualTo(String value) {
			addCriterion("leaveReason =", value, "leavereason");
			return (Criteria) this;
		}

		public Criteria andLeavereasonNotEqualTo(String value) {
			addCriterion("leaveReason <>", value, "leavereason");
			return (Criteria) this;
		}

		public Criteria andLeavereasonGreaterThan(String value) {
			addCriterion("leaveReason >", value, "leavereason");
			return (Criteria) this;
		}

		public Criteria andLeavereasonGreaterThanOrEqualTo(String value) {
			addCriterion("leaveReason >=", value, "leavereason");
			return (Criteria) this;
		}

		public Criteria andLeavereasonLessThan(String value) {
			addCriterion("leaveReason <", value, "leavereason");
			return (Criteria) this;
		}

		public Criteria andLeavereasonLessThanOrEqualTo(String value) {
			addCriterion("leaveReason <=", value, "leavereason");
			return (Criteria) this;
		}

		public Criteria andLeavereasonLike(String value) {
			addCriterion("leaveReason like", value, "leavereason");
			return (Criteria) this;
		}

		public Criteria andLeavereasonNotLike(String value) {
			addCriterion("leaveReason not like", value, "leavereason");
			return (Criteria) this;
		}

		public Criteria andLeavereasonIn(List<String> values) {
			addCriterion("leaveReason in", values, "leavereason");
			return (Criteria) this;
		}

		public Criteria andLeavereasonNotIn(List<String> values) {
			addCriterion("leaveReason not in", values, "leavereason");
			return (Criteria) this;
		}

		public Criteria andLeavereasonBetween(String value1, String value2) {
			addCriterion("leaveReason between", value1, value2, "leavereason");
			return (Criteria) this;
		}

		public Criteria andLeavereasonNotBetween(String value1, String value2) {
			addCriterion("leaveReason not between", value1, value2,
					"leavereason");
			return (Criteria) this;
		}

		public Criteria andExpectleavetimeIsNull() {
			addCriterion("expectLeaveTime is null");
			return (Criteria) this;
		}

		public Criteria andExpectleavetimeIsNotNull() {
			addCriterion("expectLeaveTime is not null");
			return (Criteria) this;
		}

		public Criteria andExpectleavetimeEqualTo(Date value) {
			addCriterion("expectLeaveTime =", value, "expectleavetime");
			return (Criteria) this;
		}

		public Criteria andExpectleavetimeNotEqualTo(Date value) {
			addCriterion("expectLeaveTime <>", value, "expectleavetime");
			return (Criteria) this;
		}

		public Criteria andExpectleavetimeGreaterThan(Date value) {
			addCriterion("expectLeaveTime >", value, "expectleavetime");
			return (Criteria) this;
		}

		public Criteria andExpectleavetimeGreaterThanOrEqualTo(Date value) {
			addCriterion("expectLeaveTime >=", value, "expectleavetime");
			return (Criteria) this;
		}

		public Criteria andExpectleavetimeLessThan(Date value) {
			addCriterion("expectLeaveTime <", value, "expectleavetime");
			return (Criteria) this;
		}

		public Criteria andExpectleavetimeLessThanOrEqualTo(Date value) {
			addCriterion("expectLeaveTime <=", value, "expectleavetime");
			return (Criteria) this;
		}

		public Criteria andExpectleavetimeIn(List<Date> values) {
			addCriterion("expectLeaveTime in", values, "expectleavetime");
			return (Criteria) this;
		}

		public Criteria andExpectleavetimeNotIn(List<Date> values) {
			addCriterion("expectLeaveTime not in", values, "expectleavetime");
			return (Criteria) this;
		}

		public Criteria andExpectleavetimeBetween(Date value1, Date value2) {
			addCriterion("expectLeaveTime between", value1, value2,
					"expectleavetime");
			return (Criteria) this;
		}

		public Criteria andExpectleavetimeNotBetween(Date value1, Date value2) {
			addCriterion("expectLeaveTime not between", value1, value2,
					"expectleavetime");
			return (Criteria) this;
		}

		public Criteria andExpectbacktimeIsNull() {
			addCriterion("expectBackTime is null");
			return (Criteria) this;
		}

		public Criteria andExpectbacktimeIsNotNull() {
			addCriterion("expectBackTime is not null");
			return (Criteria) this;
		}

		public Criteria andExpectbacktimeEqualTo(Date value) {
			addCriterion("expectBackTime =", value, "expectbacktime");
			return (Criteria) this;
		}

		public Criteria andExpectbacktimeNotEqualTo(Date value) {
			addCriterion("expectBackTime <>", value, "expectbacktime");
			return (Criteria) this;
		}

		public Criteria andExpectbacktimeGreaterThan(Date value) {
			addCriterion("expectBackTime >", value, "expectbacktime");
			return (Criteria) this;
		}

		public Criteria andExpectbacktimeGreaterThanOrEqualTo(Date value) {
			addCriterion("expectBackTime >=", value, "expectbacktime");
			return (Criteria) this;
		}

		public Criteria andExpectbacktimeLessThan(Date value) {
			addCriterion("expectBackTime <", value, "expectbacktime");
			return (Criteria) this;
		}

		public Criteria andExpectbacktimeLessThanOrEqualTo(Date value) {
			addCriterion("expectBackTime <=", value, "expectbacktime");
			return (Criteria) this;
		}

		public Criteria andExpectbacktimeIn(List<Date> values) {
			addCriterion("expectBackTime in", values, "expectbacktime");
			return (Criteria) this;
		}

		public Criteria andExpectbacktimeNotIn(List<Date> values) {
			addCriterion("expectBackTime not in", values, "expectbacktime");
			return (Criteria) this;
		}

		public Criteria andExpectbacktimeBetween(Date value1, Date value2) {
			addCriterion("expectBackTime between", value1, value2,
					"expectbacktime");
			return (Criteria) this;
		}

		public Criteria andExpectbacktimeNotBetween(Date value1, Date value2) {
			addCriterion("expectBackTime not between", value1, value2,
					"expectbacktime");
			return (Criteria) this;
		}

		public Criteria andRealleavetimeIsNull() {
			addCriterion("realLeaveTime is null");
			return (Criteria) this;
		}

		public Criteria andRealleavetimeIsNotNull() {
			addCriterion("realLeaveTime is not null");
			return (Criteria) this;
		}

		public Criteria andRealleavetimeEqualTo(Date value) {
			addCriterion("realLeaveTime =", value, "realleavetime");
			return (Criteria) this;
		}

		public Criteria andRealleavetimeNotEqualTo(Date value) {
			addCriterion("realLeaveTime <>", value, "realleavetime");
			return (Criteria) this;
		}

		public Criteria andRealleavetimeGreaterThan(Date value) {
			addCriterion("realLeaveTime >", value, "realleavetime");
			return (Criteria) this;
		}

		public Criteria andRealleavetimeGreaterThanOrEqualTo(Date value) {
			addCriterion("realLeaveTime >=", value, "realleavetime");
			return (Criteria) this;
		}

		public Criteria andRealleavetimeLessThan(Date value) {
			addCriterion("realLeaveTime <", value, "realleavetime");
			return (Criteria) this;
		}

		public Criteria andRealleavetimeLessThanOrEqualTo(Date value) {
			addCriterion("realLeaveTime <=", value, "realleavetime");
			return (Criteria) this;
		}

		public Criteria andRealleavetimeIn(List<Date> values) {
			addCriterion("realLeaveTime in", values, "realleavetime");
			return (Criteria) this;
		}

		public Criteria andRealleavetimeNotIn(List<Date> values) {
			addCriterion("realLeaveTime not in", values, "realleavetime");
			return (Criteria) this;
		}

		public Criteria andRealleavetimeBetween(Date value1, Date value2) {
			addCriterion("realLeaveTime between", value1, value2,
					"realleavetime");
			return (Criteria) this;
		}

		public Criteria andRealleavetimeNotBetween(Date value1, Date value2) {
			addCriterion("realLeaveTime not between", value1, value2,
					"realleavetime");
			return (Criteria) this;
		}

		public Criteria andRealbacktimeIsNull() {
			addCriterion("realBackTime is null");
			return (Criteria) this;
		}

		public Criteria andRealbacktimeIsNotNull() {
			addCriterion("realBackTime is not null");
			return (Criteria) this;
		}

		public Criteria andRealbacktimeEqualTo(Date value) {
			addCriterion("realBackTime =", value, "realbacktime");
			return (Criteria) this;
		}

		public Criteria andRealbacktimeNotEqualTo(Date value) {
			addCriterion("realBackTime <>", value, "realbacktime");
			return (Criteria) this;
		}

		public Criteria andRealbacktimeGreaterThan(Date value) {
			addCriterion("realBackTime >", value, "realbacktime");
			return (Criteria) this;
		}

		public Criteria andRealbacktimeGreaterThanOrEqualTo(Date value) {
			addCriterion("realBackTime >=", value, "realbacktime");
			return (Criteria) this;
		}

		public Criteria andRealbacktimeLessThan(Date value) {
			addCriterion("realBackTime <", value, "realbacktime");
			return (Criteria) this;
		}

		public Criteria andRealbacktimeLessThanOrEqualTo(Date value) {
			addCriterion("realBackTime <=", value, "realbacktime");
			return (Criteria) this;
		}

		public Criteria andRealbacktimeIn(List<Date> values) {
			addCriterion("realBackTime in", values, "realbacktime");
			return (Criteria) this;
		}

		public Criteria andRealbacktimeNotIn(List<Date> values) {
			addCriterion("realBackTime not in", values, "realbacktime");
			return (Criteria) this;
		}

		public Criteria andRealbacktimeBetween(Date value1, Date value2) {
			addCriterion("realBackTime between", value1, value2, "realbacktime");
			return (Criteria) this;
		}

		public Criteria andRealbacktimeNotBetween(Date value1, Date value2) {
			addCriterion("realBackTime not between", value1, value2,
					"realbacktime");
			return (Criteria) this;
		}

		public Criteria andStopfoodIsNull() {
			addCriterion("stopFood is null");
			return (Criteria) this;
		}

		public Criteria andStopfoodIsNotNull() {
			addCriterion("stopFood is not null");
			return (Criteria) this;
		}

		public Criteria andStopfoodEqualTo(Integer value) {
			addCriterion("stopFood =", value, "stopfood");
			return (Criteria) this;
		}

		public Criteria andStopfoodNotEqualTo(Integer value) {
			addCriterion("stopFood <>", value, "stopfood");
			return (Criteria) this;
		}

		public Criteria andStopfoodGreaterThan(Integer value) {
			addCriterion("stopFood >", value, "stopfood");
			return (Criteria) this;
		}

		public Criteria andStopfoodGreaterThanOrEqualTo(Integer value) {
			addCriterion("stopFood >=", value, "stopfood");
			return (Criteria) this;
		}

		public Criteria andStopfoodLessThan(Integer value) {
			addCriterion("stopFood <", value, "stopfood");
			return (Criteria) this;
		}

		public Criteria andStopfoodLessThanOrEqualTo(Integer value) {
			addCriterion("stopFood <=", value, "stopfood");
			return (Criteria) this;
		}

		public Criteria andStopfoodIn(List<Integer> values) {
			addCriterion("stopFood in", values, "stopfood");
			return (Criteria) this;
		}

		public Criteria andStopfoodNotIn(List<Integer> values) {
			addCriterion("stopFood not in", values, "stopfood");
			return (Criteria) this;
		}

		public Criteria andStopfoodBetween(Integer value1, Integer value2) {
			addCriterion("stopFood between", value1, value2, "stopfood");
			return (Criteria) this;
		}

		public Criteria andStopfoodNotBetween(Integer value1, Integer value2) {
			addCriterion("stopFood not between", value1, value2, "stopfood");
			return (Criteria) this;
		}

		public Criteria andPreparefoodIsNull() {
			addCriterion("prepareFood is null");
			return (Criteria) this;
		}

		public Criteria andPreparefoodIsNotNull() {
			addCriterion("prepareFood is not null");
			return (Criteria) this;
		}

		public Criteria andPreparefoodEqualTo(Integer value) {
			addCriterion("prepareFood =", value, "preparefood");
			return (Criteria) this;
		}

		public Criteria andPreparefoodNotEqualTo(Integer value) {
			addCriterion("prepareFood <>", value, "preparefood");
			return (Criteria) this;
		}

		public Criteria andPreparefoodGreaterThan(Integer value) {
			addCriterion("prepareFood >", value, "preparefood");
			return (Criteria) this;
		}

		public Criteria andPreparefoodGreaterThanOrEqualTo(Integer value) {
			addCriterion("prepareFood >=", value, "preparefood");
			return (Criteria) this;
		}

		public Criteria andPreparefoodLessThan(Integer value) {
			addCriterion("prepareFood <", value, "preparefood");
			return (Criteria) this;
		}

		public Criteria andPreparefoodLessThanOrEqualTo(Integer value) {
			addCriterion("prepareFood <=", value, "preparefood");
			return (Criteria) this;
		}

		public Criteria andPreparefoodIn(List<Integer> values) {
			addCriterion("prepareFood in", values, "preparefood");
			return (Criteria) this;
		}

		public Criteria andPreparefoodNotIn(List<Integer> values) {
			addCriterion("prepareFood not in", values, "preparefood");
			return (Criteria) this;
		}

		public Criteria andPreparefoodBetween(Integer value1, Integer value2) {
			addCriterion("prepareFood between", value1, value2, "preparefood");
			return (Criteria) this;
		}

		public Criteria andPreparefoodNotBetween(Integer value1, Integer value2) {
			addCriterion("prepareFood not between", value1, value2,
					"preparefood");
			return (Criteria) this;
		}

		public Criteria andIsleavedIsNull() {
			addCriterion("isLeaved is null");
			return (Criteria) this;
		}

		public Criteria andIsleavedIsNotNull() {
			addCriterion("isLeaved is not null");
			return (Criteria) this;
		}

		public Criteria andIsleavedEqualTo(Integer value) {
			addCriterion("isLeaved =", value, "isleaved");
			return (Criteria) this;
		}

		public Criteria andIsleavedNotEqualTo(Integer value) {
			addCriterion("isLeaved <>", value, "isleaved");
			return (Criteria) this;
		}

		public Criteria andIsleavedGreaterThan(Integer value) {
			addCriterion("isLeaved >", value, "isleaved");
			return (Criteria) this;
		}

		public Criteria andIsleavedGreaterThanOrEqualTo(Integer value) {
			addCriterion("isLeaved >=", value, "isleaved");
			return (Criteria) this;
		}

		public Criteria andIsleavedLessThan(Integer value) {
			addCriterion("isLeaved <", value, "isleaved");
			return (Criteria) this;
		}

		public Criteria andIsleavedLessThanOrEqualTo(Integer value) {
			addCriterion("isLeaved <=", value, "isleaved");
			return (Criteria) this;
		}

		public Criteria andIsleavedIn(List<Integer> values) {
			addCriterion("isLeaved in", values, "isleaved");
			return (Criteria) this;
		}

		public Criteria andIsleavedNotIn(List<Integer> values) {
			addCriterion("isLeaved not in", values, "isleaved");
			return (Criteria) this;
		}

		public Criteria andIsleavedBetween(Integer value1, Integer value2) {
			addCriterion("isLeaved between", value1, value2, "isleaved");
			return (Criteria) this;
		}

		public Criteria andIsleavedNotBetween(Integer value1, Integer value2) {
			addCriterion("isLeaved not between", value1, value2, "isleaved");
			return (Criteria) this;
		}

		public Criteria andIsbackedIsNull() {
			addCriterion("isBacked is null");
			return (Criteria) this;
		}

		public Criteria andIsbackedIsNotNull() {
			addCriterion("isBacked is not null");
			return (Criteria) this;
		}

		public Criteria andIsbackedEqualTo(Integer value) {
			addCriterion("isBacked =", value, "isbacked");
			return (Criteria) this;
		}

		public Criteria andIsbackedNotEqualTo(Integer value) {
			addCriterion("isBacked <>", value, "isbacked");
			return (Criteria) this;
		}

		public Criteria andIsbackedGreaterThan(Integer value) {
			addCriterion("isBacked >", value, "isbacked");
			return (Criteria) this;
		}

		public Criteria andIsbackedGreaterThanOrEqualTo(Integer value) {
			addCriterion("isBacked >=", value, "isbacked");
			return (Criteria) this;
		}

		public Criteria andIsbackedLessThan(Integer value) {
			addCriterion("isBacked <", value, "isbacked");
			return (Criteria) this;
		}

		public Criteria andIsbackedLessThanOrEqualTo(Integer value) {
			addCriterion("isBacked <=", value, "isbacked");
			return (Criteria) this;
		}

		public Criteria andIsbackedIn(List<Integer> values) {
			addCriterion("isBacked in", values, "isbacked");
			return (Criteria) this;
		}

		public Criteria andIsbackedNotIn(List<Integer> values) {
			addCriterion("isBacked not in", values, "isbacked");
			return (Criteria) this;
		}

		public Criteria andIsbackedBetween(Integer value1, Integer value2) {
			addCriterion("isBacked between", value1, value2, "isbacked");
			return (Criteria) this;
		}

		public Criteria andIsbackedNotBetween(Integer value1, Integer value2) {
			addCriterion("isBacked not between", value1, value2, "isbacked");
			return (Criteria) this;
		}

		public Criteria andBackontimeIsNull() {
			addCriterion("backOnTime is null");
			return (Criteria) this;
		}

		public Criteria andBackontimeIsNotNull() {
			addCriterion("backOnTime is not null");
			return (Criteria) this;
		}

		public Criteria andBackontimeEqualTo(Integer value) {
			addCriterion("backOnTime =", value, "backontime");
			return (Criteria) this;
		}

		public Criteria andBackontimeNotEqualTo(Integer value) {
			addCriterion("backOnTime <>", value, "backontime");
			return (Criteria) this;
		}

		public Criteria andBackontimeGreaterThan(Integer value) {
			addCriterion("backOnTime >", value, "backontime");
			return (Criteria) this;
		}

		public Criteria andBackontimeGreaterThanOrEqualTo(Integer value) {
			addCriterion("backOnTime >=", value, "backontime");
			return (Criteria) this;
		}

		public Criteria andBackontimeLessThan(Integer value) {
			addCriterion("backOnTime <", value, "backontime");
			return (Criteria) this;
		}

		public Criteria andBackontimeLessThanOrEqualTo(Integer value) {
			addCriterion("backOnTime <=", value, "backontime");
			return (Criteria) this;
		}

		public Criteria andBackontimeIn(List<Integer> values) {
			addCriterion("backOnTime in", values, "backontime");
			return (Criteria) this;
		}

		public Criteria andBackontimeNotIn(List<Integer> values) {
			addCriterion("backOnTime not in", values, "backontime");
			return (Criteria) this;
		}

		public Criteria andBackontimeBetween(Integer value1, Integer value2) {
			addCriterion("backOnTime between", value1, value2, "backontime");
			return (Criteria) this;
		}

		public Criteria andBackontimeNotBetween(Integer value1, Integer value2) {
			addCriterion("backOnTime not between", value1, value2, "backontime");
			return (Criteria) this;
		}

		public Criteria andNotesIsNull() {
			addCriterion("notes is null");
			return (Criteria) this;
		}

		public Criteria andNotesIsNotNull() {
			addCriterion("notes is not null");
			return (Criteria) this;
		}

		public Criteria andNotesEqualTo(String value) {
			addCriterion("notes =", value, "notes");
			return (Criteria) this;
		}

		public Criteria andNotesNotEqualTo(String value) {
			addCriterion("notes <>", value, "notes");
			return (Criteria) this;
		}

		public Criteria andNotesGreaterThan(String value) {
			addCriterion("notes >", value, "notes");
			return (Criteria) this;
		}

		public Criteria andNotesGreaterThanOrEqualTo(String value) {
			addCriterion("notes >=", value, "notes");
			return (Criteria) this;
		}

		public Criteria andNotesLessThan(String value) {
			addCriterion("notes <", value, "notes");
			return (Criteria) this;
		}

		public Criteria andNotesLessThanOrEqualTo(String value) {
			addCriterion("notes <=", value, "notes");
			return (Criteria) this;
		}

		public Criteria andNotesLike(String value) {
			addCriterion("notes like", value, "notes");
			return (Criteria) this;
		}

		public Criteria andNotesNotLike(String value) {
			addCriterion("notes not like", value, "notes");
			return (Criteria) this;
		}

		public Criteria andNotesIn(List<String> values) {
			addCriterion("notes in", values, "notes");
			return (Criteria) this;
		}

		public Criteria andNotesNotIn(List<String> values) {
			addCriterion("notes not in", values, "notes");
			return (Criteria) this;
		}

		public Criteria andNotesBetween(String value1, String value2) {
			addCriterion("notes between", value1, value2, "notes");
			return (Criteria) this;
		}

		public Criteria andNotesNotBetween(String value1, String value2) {
			addCriterion("notes not between", value1, value2, "notes");
			return (Criteria) this;
		}

		public Criteria andClearedIsNull() {
			addCriterion("cleared is null");
			return (Criteria) this;
		}

		public Criteria andClearedIsNotNull() {
			addCriterion("cleared is not null");
			return (Criteria) this;
		}

		public Criteria andClearedEqualTo(Integer value) {
			addCriterion("cleared =", value, "cleared");
			return (Criteria) this;
		}

		public Criteria andClearedNotEqualTo(Integer value) {
			addCriterion("cleared <>", value, "cleared");
			return (Criteria) this;
		}

		public Criteria andClearedGreaterThan(Integer value) {
			addCriterion("cleared >", value, "cleared");
			return (Criteria) this;
		}

		public Criteria andClearedGreaterThanOrEqualTo(Integer value) {
			addCriterion("cleared >=", value, "cleared");
			return (Criteria) this;
		}

		public Criteria andClearedLessThan(Integer value) {
			addCriterion("cleared <", value, "cleared");
			return (Criteria) this;
		}

		public Criteria andClearedLessThanOrEqualTo(Integer value) {
			addCriterion("cleared <=", value, "cleared");
			return (Criteria) this;
		}

		public Criteria andClearedIn(List<Integer> values) {
			addCriterion("cleared in", values, "cleared");
			return (Criteria) this;
		}

		public Criteria andClearedNotIn(List<Integer> values) {
			addCriterion("cleared not in", values, "cleared");
			return (Criteria) this;
		}

		public Criteria andClearedBetween(Integer value1, Integer value2) {
			addCriterion("cleared between", value1, value2, "cleared");
			return (Criteria) this;
		}

		public Criteria andClearedNotBetween(Integer value1, Integer value2) {
			addCriterion("cleared not between", value1, value2, "cleared");
			return (Criteria) this;
		}

		public Criteria andFinalResultIsNull() {
			addCriterion("final_result is null");
			return (Criteria) this;
		}

		public Criteria andFinalResultIsNotNull() {
			addCriterion("final_result is not null");
			return (Criteria) this;
		}

		public Criteria andFinalResultEqualTo(Integer value) {
			addCriterion("final_result =", value, "finalResult");
			return (Criteria) this;
		}

		public Criteria andFinalResultNotEqualTo(Integer value) {
			addCriterion("final_result <>", value, "finalResult");
			return (Criteria) this;
		}

		public Criteria andFinalResultGreaterThan(Integer value) {
			addCriterion("final_result >", value, "finalResult");
			return (Criteria) this;
		}

		public Criteria andFinalResultGreaterThanOrEqualTo(Integer value) {
			addCriterion("final_result >=", value, "finalResult");
			return (Criteria) this;
		}

		public Criteria andFinalResultLessThan(Integer value) {
			addCriterion("final_result <", value, "finalResult");
			return (Criteria) this;
		}

		public Criteria andFinalResultLessThanOrEqualTo(Integer value) {
			addCriterion("final_result <=", value, "finalResult");
			return (Criteria) this;
		}

		public Criteria andFinalResultIn(List<Integer> values) {
			addCriterion("final_result in", values, "finalResult");
			return (Criteria) this;
		}

		public Criteria andFinalResultNotIn(List<Integer> values) {
			addCriterion("final_result not in", values, "finalResult");
			return (Criteria) this;
		}

		public Criteria andFinalResultBetween(Integer value1, Integer value2) {
			addCriterion("final_result between", value1, value2, "finalResult");
			return (Criteria) this;
		}

		public Criteria andFinalResultNotBetween(Integer value1, Integer value2) {
			addCriterion("final_result not between", value1, value2,
					"finalResult");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table pension_leave
	 * @mbggenerated  Tue Feb 25 15:17:47 CST 2014
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue,
				String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table pension_leave
     *
     * @mbggenerated do_not_delete_during_merge Wed Aug 28 11:01:28 CST 2013
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}