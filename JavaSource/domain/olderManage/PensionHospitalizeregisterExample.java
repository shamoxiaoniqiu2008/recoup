package domain.olderManage;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class PensionHospitalizeregisterExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table pension_hospitalizeregister
	 * @mbggenerated  Sun Sep 08 15:11:07 CST 2013
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table pension_hospitalizeregister
	 * @mbggenerated  Sun Sep 08 15:11:07 CST 2013
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table pension_hospitalizeregister
	 * @mbggenerated  Sun Sep 08 15:11:07 CST 2013
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_hospitalizeregister
	 * @mbggenerated  Sun Sep 08 15:11:07 CST 2013
	 */
	public PensionHospitalizeregisterExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_hospitalizeregister
	 * @mbggenerated  Sun Sep 08 15:11:07 CST 2013
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_hospitalizeregister
	 * @mbggenerated  Sun Sep 08 15:11:07 CST 2013
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_hospitalizeregister
	 * @mbggenerated  Sun Sep 08 15:11:07 CST 2013
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_hospitalizeregister
	 * @mbggenerated  Sun Sep 08 15:11:07 CST 2013
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_hospitalizeregister
	 * @mbggenerated  Sun Sep 08 15:11:07 CST 2013
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_hospitalizeregister
	 * @mbggenerated  Sun Sep 08 15:11:07 CST 2013
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_hospitalizeregister
	 * @mbggenerated  Sun Sep 08 15:11:07 CST 2013
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_hospitalizeregister
	 * @mbggenerated  Sun Sep 08 15:11:07 CST 2013
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_hospitalizeregister
	 * @mbggenerated  Sun Sep 08 15:11:07 CST 2013
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_hospitalizeregister
	 * @mbggenerated  Sun Sep 08 15:11:07 CST 2013
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table pension_hospitalizeregister
	 * @mbggenerated  Sun Sep 08 15:11:07 CST 2013
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null || value.toString().equals("")) {
				addCriterion("1=1");
				return;
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null
					|| value1.toString().equals("")
					|| value2.toString().equals("")) {
				addCriterion("1=1");
				return;
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		public Criteria andIdIsNull() {
			addCriterion("id is null");
			return (Criteria) this;
		}

		public Criteria andIdIsNotNull() {
			addCriterion("id is not null");
			return (Criteria) this;
		}

		public Criteria andIdEqualTo(Long value) {
			addCriterion("id =", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotEqualTo(Long value) {
			addCriterion("id <>", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThan(Long value) {
			addCriterion("id >", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThanOrEqualTo(Long value) {
			addCriterion("id >=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThan(Long value) {
			addCriterion("id <", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThanOrEqualTo(Long value) {
			addCriterion("id <=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdIn(List<Long> values) {
			addCriterion("id in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotIn(List<Long> values) {
			addCriterion("id not in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdBetween(Long value1, Long value2) {
			addCriterion("id between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotBetween(Long value1, Long value2) {
			addCriterion("id not between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andOlderIdIsNull() {
			addCriterion("older_id is null");
			return (Criteria) this;
		}

		public Criteria andOlderIdIsNotNull() {
			addCriterion("older_id is not null");
			return (Criteria) this;
		}

		public Criteria andOlderIdEqualTo(Long value) {
			addCriterion("older_id =", value, "olderId");
			return (Criteria) this;
		}

		public Criteria andOlderIdNotEqualTo(Long value) {
			addCriterion("older_id <>", value, "olderId");
			return (Criteria) this;
		}

		public Criteria andOlderIdGreaterThan(Long value) {
			addCriterion("older_id >", value, "olderId");
			return (Criteria) this;
		}

		public Criteria andOlderIdGreaterThanOrEqualTo(Long value) {
			addCriterion("older_id >=", value, "olderId");
			return (Criteria) this;
		}

		public Criteria andOlderIdLessThan(Long value) {
			addCriterion("older_id <", value, "olderId");
			return (Criteria) this;
		}

		public Criteria andOlderIdLessThanOrEqualTo(Long value) {
			addCriterion("older_id <=", value, "olderId");
			return (Criteria) this;
		}

		public Criteria andOlderIdIn(List<Long> values) {
			addCriterion("older_id in", values, "olderId");
			return (Criteria) this;
		}

		public Criteria andOlderIdNotIn(List<Long> values) {
			addCriterion("older_id not in", values, "olderId");
			return (Criteria) this;
		}

		public Criteria andOlderIdBetween(Long value1, Long value2) {
			addCriterion("older_id between", value1, value2, "olderId");
			return (Criteria) this;
		}

		public Criteria andOlderIdNotBetween(Long value1, Long value2) {
			addCriterion("older_id not between", value1, value2, "olderId");
			return (Criteria) this;
		}

		public Criteria andHospitalizetimeIsNull() {
			addCriterion("hospitalizeTime is null");
			return (Criteria) this;
		}

		public Criteria andHospitalizetimeIsNotNull() {
			addCriterion("hospitalizeTime is not null");
			return (Criteria) this;
		}

		public Criteria andHospitalizetimeEqualTo(Date value) {
			addCriterion("hospitalizeTime =", value, "hospitalizetime");
			return (Criteria) this;
		}

		public Criteria andHospitalizetimeNotEqualTo(Date value) {
			addCriterion("hospitalizeTime <>", value, "hospitalizetime");
			return (Criteria) this;
		}

		public Criteria andHospitalizetimeGreaterThan(Date value) {
			addCriterion("hospitalizeTime >", value, "hospitalizetime");
			return (Criteria) this;
		}

		public Criteria andHospitalizetimeGreaterThanOrEqualTo(Date value) {
			addCriterion("hospitalizeTime >=", value, "hospitalizetime");
			return (Criteria) this;
		}

		public Criteria andHospitalizetimeLessThan(Date value) {
			addCriterion("hospitalizeTime <", value, "hospitalizetime");
			return (Criteria) this;
		}

		public Criteria andHospitalizetimeLessThanOrEqualTo(Date value) {
			addCriterion("hospitalizeTime <=", value, "hospitalizetime");
			return (Criteria) this;
		}

		public Criteria andHospitalizetimeIn(List<Date> values) {
			addCriterion("hospitalizeTime in", values, "hospitalizetime");
			return (Criteria) this;
		}

		public Criteria andHospitalizetimeNotIn(List<Date> values) {
			addCriterion("hospitalizeTime not in", values, "hospitalizetime");
			return (Criteria) this;
		}

		public Criteria andHospitalizetimeBetween(Date value1, Date value2) {
			addCriterion("hospitalizeTime between", value1, value2,
					"hospitalizetime");
			return (Criteria) this;
		}

		public Criteria andHospitalizetimeNotBetween(Date value1, Date value2) {
			addCriterion("hospitalizeTime not between", value1, value2,
					"hospitalizetime");
			return (Criteria) this;
		}

		public Criteria andHospitalizeissueIsNull() {
			addCriterion("hospitalizeIssue is null");
			return (Criteria) this;
		}

		public Criteria andHospitalizeissueIsNotNull() {
			addCriterion("hospitalizeIssue is not null");
			return (Criteria) this;
		}

		public Criteria andHospitalizeissueEqualTo(String value) {
			addCriterion("hospitalizeIssue =", value, "hospitalizeissue");
			return (Criteria) this;
		}

		public Criteria andHospitalizeissueNotEqualTo(String value) {
			addCriterion("hospitalizeIssue <>", value, "hospitalizeissue");
			return (Criteria) this;
		}

		public Criteria andHospitalizeissueGreaterThan(String value) {
			addCriterion("hospitalizeIssue >", value, "hospitalizeissue");
			return (Criteria) this;
		}

		public Criteria andHospitalizeissueGreaterThanOrEqualTo(String value) {
			addCriterion("hospitalizeIssue >=", value, "hospitalizeissue");
			return (Criteria) this;
		}

		public Criteria andHospitalizeissueLessThan(String value) {
			addCriterion("hospitalizeIssue <", value, "hospitalizeissue");
			return (Criteria) this;
		}

		public Criteria andHospitalizeissueLessThanOrEqualTo(String value) {
			addCriterion("hospitalizeIssue <=", value, "hospitalizeissue");
			return (Criteria) this;
		}

		public Criteria andHospitalizeissueLike(String value) {
			addCriterion("hospitalizeIssue like", value, "hospitalizeissue");
			return (Criteria) this;
		}

		public Criteria andHospitalizeissueNotLike(String value) {
			addCriterion("hospitalizeIssue not like", value, "hospitalizeissue");
			return (Criteria) this;
		}

		public Criteria andHospitalizeissueIn(List<String> values) {
			addCriterion("hospitalizeIssue in", values, "hospitalizeissue");
			return (Criteria) this;
		}

		public Criteria andHospitalizeissueNotIn(List<String> values) {
			addCriterion("hospitalizeIssue not in", values, "hospitalizeissue");
			return (Criteria) this;
		}

		public Criteria andHospitalizeissueBetween(String value1, String value2) {
			addCriterion("hospitalizeIssue between", value1, value2,
					"hospitalizeissue");
			return (Criteria) this;
		}

		public Criteria andHospitalizeissueNotBetween(String value1,
				String value2) {
			addCriterion("hospitalizeIssue not between", value1, value2,
					"hospitalizeissue");
			return (Criteria) this;
		}

		public Criteria andHospitalizetypeIdIsNull() {
			addCriterion("hospitalizeType_id is null");
			return (Criteria) this;
		}

		public Criteria andHospitalizetypeIdIsNotNull() {
			addCriterion("hospitalizeType_id is not null");
			return (Criteria) this;
		}

		public Criteria andHospitalizetypeIdEqualTo(Integer value) {
			addCriterion("hospitalizeType_id =", value, "hospitalizetypeId");
			return (Criteria) this;
		}

		public Criteria andHospitalizetypeIdNotEqualTo(Integer value) {
			addCriterion("hospitalizeType_id <>", value, "hospitalizetypeId");
			return (Criteria) this;
		}

		public Criteria andHospitalizetypeIdGreaterThan(Integer value) {
			addCriterion("hospitalizeType_id >", value, "hospitalizetypeId");
			return (Criteria) this;
		}

		public Criteria andHospitalizetypeIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("hospitalizeType_id >=", value, "hospitalizetypeId");
			return (Criteria) this;
		}

		public Criteria andHospitalizetypeIdLessThan(Integer value) {
			addCriterion("hospitalizeType_id <", value, "hospitalizetypeId");
			return (Criteria) this;
		}

		public Criteria andHospitalizetypeIdLessThanOrEqualTo(Integer value) {
			addCriterion("hospitalizeType_id <=", value, "hospitalizetypeId");
			return (Criteria) this;
		}

		public Criteria andHospitalizetypeIdIn(List<Integer> values) {
			addCriterion("hospitalizeType_id in", values, "hospitalizetypeId");
			return (Criteria) this;
		}

		public Criteria andHospitalizetypeIdNotIn(List<Integer> values) {
			addCriterion("hospitalizeType_id not in", values,
					"hospitalizetypeId");
			return (Criteria) this;
		}

		public Criteria andHospitalizetypeIdBetween(Integer value1,
				Integer value2) {
			addCriterion("hospitalizeType_id between", value1, value2,
					"hospitalizetypeId");
			return (Criteria) this;
		}

		public Criteria andHospitalizetypeIdNotBetween(Integer value1,
				Integer value2) {
			addCriterion("hospitalizeType_id not between", value1, value2,
					"hospitalizetypeId");
			return (Criteria) this;
		}

		public Criteria andAdvanceIsNull() {
			addCriterion("advance is null");
			return (Criteria) this;
		}

		public Criteria andAdvanceIsNotNull() {
			addCriterion("advance is not null");
			return (Criteria) this;
		}

		public Criteria andAdvanceEqualTo(Float value) {
			addCriterion("advance =", value, "advance");
			return (Criteria) this;
		}

		public Criteria andAdvanceNotEqualTo(Float value) {
			addCriterion("advance <>", value, "advance");
			return (Criteria) this;
		}

		public Criteria andAdvanceGreaterThan(Float value) {
			addCriterion("advance >", value, "advance");
			return (Criteria) this;
		}

		public Criteria andAdvanceGreaterThanOrEqualTo(Float value) {
			addCriterion("advance >=", value, "advance");
			return (Criteria) this;
		}

		public Criteria andAdvanceLessThan(Float value) {
			addCriterion("advance <", value, "advance");
			return (Criteria) this;
		}

		public Criteria andAdvanceLessThanOrEqualTo(Float value) {
			addCriterion("advance <=", value, "advance");
			return (Criteria) this;
		}

		public Criteria andAdvanceIn(List<Float> values) {
			addCriterion("advance in", values, "advance");
			return (Criteria) this;
		}

		public Criteria andAdvanceNotIn(List<Float> values) {
			addCriterion("advance not in", values, "advance");
			return (Criteria) this;
		}

		public Criteria andAdvanceBetween(Float value1, Float value2) {
			addCriterion("advance between", value1, value2, "advance");
			return (Criteria) this;
		}

		public Criteria andAdvanceNotBetween(Float value1, Float value2) {
			addCriterion("advance not between", value1, value2, "advance");
			return (Criteria) this;
		}

		public Criteria andBackmoneyIsNull() {
			addCriterion("backMoney is null");
			return (Criteria) this;
		}

		public Criteria andBackmoneyIsNotNull() {
			addCriterion("backMoney is not null");
			return (Criteria) this;
		}

		public Criteria andBackmoneyEqualTo(Float value) {
			addCriterion("backMoney =", value, "backmoney");
			return (Criteria) this;
		}

		public Criteria andBackmoneyNotEqualTo(Float value) {
			addCriterion("backMoney <>", value, "backmoney");
			return (Criteria) this;
		}

		public Criteria andBackmoneyGreaterThan(Float value) {
			addCriterion("backMoney >", value, "backmoney");
			return (Criteria) this;
		}

		public Criteria andBackmoneyGreaterThanOrEqualTo(Float value) {
			addCriterion("backMoney >=", value, "backmoney");
			return (Criteria) this;
		}

		public Criteria andBackmoneyLessThan(Float value) {
			addCriterion("backMoney <", value, "backmoney");
			return (Criteria) this;
		}

		public Criteria andBackmoneyLessThanOrEqualTo(Float value) {
			addCriterion("backMoney <=", value, "backmoney");
			return (Criteria) this;
		}

		public Criteria andBackmoneyIn(List<Float> values) {
			addCriterion("backMoney in", values, "backmoney");
			return (Criteria) this;
		}

		public Criteria andBackmoneyNotIn(List<Float> values) {
			addCriterion("backMoney not in", values, "backmoney");
			return (Criteria) this;
		}

		public Criteria andBackmoneyBetween(Float value1, Float value2) {
			addCriterion("backMoney between", value1, value2, "backmoney");
			return (Criteria) this;
		}

		public Criteria andBackmoneyNotBetween(Float value1, Float value2) {
			addCriterion("backMoney not between", value1, value2, "backmoney");
			return (Criteria) this;
		}

		public Criteria andAfterpaymentIsNull() {
			addCriterion("afterPayment is null");
			return (Criteria) this;
		}

		public Criteria andAfterpaymentIsNotNull() {
			addCriterion("afterPayment is not null");
			return (Criteria) this;
		}

		public Criteria andAfterpaymentEqualTo(Float value) {
			addCriterion("afterPayment =", value, "afterpayment");
			return (Criteria) this;
		}

		public Criteria andAfterpaymentNotEqualTo(Float value) {
			addCriterion("afterPayment <>", value, "afterpayment");
			return (Criteria) this;
		}

		public Criteria andAfterpaymentGreaterThan(Float value) {
			addCriterion("afterPayment >", value, "afterpayment");
			return (Criteria) this;
		}

		public Criteria andAfterpaymentGreaterThanOrEqualTo(Float value) {
			addCriterion("afterPayment >=", value, "afterpayment");
			return (Criteria) this;
		}

		public Criteria andAfterpaymentLessThan(Float value) {
			addCriterion("afterPayment <", value, "afterpayment");
			return (Criteria) this;
		}

		public Criteria andAfterpaymentLessThanOrEqualTo(Float value) {
			addCriterion("afterPayment <=", value, "afterpayment");
			return (Criteria) this;
		}

		public Criteria andAfterpaymentIn(List<Float> values) {
			addCriterion("afterPayment in", values, "afterpayment");
			return (Criteria) this;
		}

		public Criteria andAfterpaymentNotIn(List<Float> values) {
			addCriterion("afterPayment not in", values, "afterpayment");
			return (Criteria) this;
		}

		public Criteria andAfterpaymentBetween(Float value1, Float value2) {
			addCriterion("afterPayment between", value1, value2, "afterpayment");
			return (Criteria) this;
		}

		public Criteria andAfterpaymentNotBetween(Float value1, Float value2) {
			addCriterion("afterPayment not between", value1, value2,
					"afterpayment");
			return (Criteria) this;
		}

		public Criteria andThingsIsNull() {
			addCriterion("things is null");
			return (Criteria) this;
		}

		public Criteria andThingsIsNotNull() {
			addCriterion("things is not null");
			return (Criteria) this;
		}

		public Criteria andThingsEqualTo(String value) {
			addCriterion("things =", value, "things");
			return (Criteria) this;
		}

		public Criteria andThingsNotEqualTo(String value) {
			addCriterion("things <>", value, "things");
			return (Criteria) this;
		}

		public Criteria andThingsGreaterThan(String value) {
			addCriterion("things >", value, "things");
			return (Criteria) this;
		}

		public Criteria andThingsGreaterThanOrEqualTo(String value) {
			addCriterion("things >=", value, "things");
			return (Criteria) this;
		}

		public Criteria andThingsLessThan(String value) {
			addCriterion("things <", value, "things");
			return (Criteria) this;
		}

		public Criteria andThingsLessThanOrEqualTo(String value) {
			addCriterion("things <=", value, "things");
			return (Criteria) this;
		}

		public Criteria andThingsLike(String value) {
			addCriterion("things like", value, "things");
			return (Criteria) this;
		}

		public Criteria andThingsNotLike(String value) {
			addCriterion("things not like", value, "things");
			return (Criteria) this;
		}

		public Criteria andThingsIn(List<String> values) {
			addCriterion("things in", values, "things");
			return (Criteria) this;
		}

		public Criteria andThingsNotIn(List<String> values) {
			addCriterion("things not in", values, "things");
			return (Criteria) this;
		}

		public Criteria andThingsBetween(String value1, String value2) {
			addCriterion("things between", value1, value2, "things");
			return (Criteria) this;
		}

		public Criteria andThingsNotBetween(String value1, String value2) {
			addCriterion("things not between", value1, value2, "things");
			return (Criteria) this;
		}

		public Criteria andLeavetimeIsNull() {
			addCriterion("leaveTime is null");
			return (Criteria) this;
		}

		public Criteria andLeavetimeIsNotNull() {
			addCriterion("leaveTime is not null");
			return (Criteria) this;
		}

		public Criteria andLeavetimeEqualTo(Date value) {
			addCriterion("leaveTime =", value, "leavetime");
			return (Criteria) this;
		}

		public Criteria andLeavetimeNotEqualTo(Date value) {
			addCriterion("leaveTime <>", value, "leavetime");
			return (Criteria) this;
		}

		public Criteria andLeavetimeGreaterThan(Date value) {
			addCriterion("leaveTime >", value, "leavetime");
			return (Criteria) this;
		}

		public Criteria andLeavetimeGreaterThanOrEqualTo(Date value) {
			addCriterion("leaveTime >=", value, "leavetime");
			return (Criteria) this;
		}

		public Criteria andLeavetimeLessThan(Date value) {
			addCriterion("leaveTime <", value, "leavetime");
			return (Criteria) this;
		}

		public Criteria andLeavetimeLessThanOrEqualTo(Date value) {
			addCriterion("leaveTime <=", value, "leavetime");
			return (Criteria) this;
		}

		public Criteria andLeavetimeIn(List<Date> values) {
			addCriterion("leaveTime in", values, "leavetime");
			return (Criteria) this;
		}

		public Criteria andLeavetimeNotIn(List<Date> values) {
			addCriterion("leaveTime not in", values, "leavetime");
			return (Criteria) this;
		}

		public Criteria andLeavetimeBetween(Date value1, Date value2) {
			addCriterion("leaveTime between", value1, value2, "leavetime");
			return (Criteria) this;
		}

		public Criteria andLeavetimeNotBetween(Date value1, Date value2) {
			addCriterion("leaveTime not between", value1, value2, "leavetime");
			return (Criteria) this;
		}

		public Criteria andBacktimeIsNull() {
			addCriterion("backTime is null");
			return (Criteria) this;
		}

		public Criteria andBacktimeIsNotNull() {
			addCriterion("backTime is not null");
			return (Criteria) this;
		}

		public Criteria andBacktimeEqualTo(Date value) {
			addCriterion("backTime =", value, "backtime");
			return (Criteria) this;
		}

		public Criteria andBacktimeNotEqualTo(Date value) {
			addCriterion("backTime <>", value, "backtime");
			return (Criteria) this;
		}

		public Criteria andBacktimeGreaterThan(Date value) {
			addCriterion("backTime >", value, "backtime");
			return (Criteria) this;
		}

		public Criteria andBacktimeGreaterThanOrEqualTo(Date value) {
			addCriterion("backTime >=", value, "backtime");
			return (Criteria) this;
		}

		public Criteria andBacktimeLessThan(Date value) {
			addCriterion("backTime <", value, "backtime");
			return (Criteria) this;
		}

		public Criteria andBacktimeLessThanOrEqualTo(Date value) {
			addCriterion("backTime <=", value, "backtime");
			return (Criteria) this;
		}

		public Criteria andBacktimeIn(List<Date> values) {
			addCriterion("backTime in", values, "backtime");
			return (Criteria) this;
		}

		public Criteria andBacktimeNotIn(List<Date> values) {
			addCriterion("backTime not in", values, "backtime");
			return (Criteria) this;
		}

		public Criteria andBacktimeBetween(Date value1, Date value2) {
			addCriterion("backTime between", value1, value2, "backtime");
			return (Criteria) this;
		}

		public Criteria andBacktimeNotBetween(Date value1, Date value2) {
			addCriterion("backTime not between", value1, value2, "backtime");
			return (Criteria) this;
		}

		public Criteria andNurseIdIsNull() {
			addCriterion("nurse_id is null");
			return (Criteria) this;
		}

		public Criteria andNurseIdIsNotNull() {
			addCriterion("nurse_id is not null");
			return (Criteria) this;
		}

		public Criteria andNurseIdEqualTo(Long value) {
			addCriterion("nurse_id =", value, "nurseId");
			return (Criteria) this;
		}

		public Criteria andNurseIdNotEqualTo(Long value) {
			addCriterion("nurse_id <>", value, "nurseId");
			return (Criteria) this;
		}

		public Criteria andNurseIdGreaterThan(Long value) {
			addCriterion("nurse_id >", value, "nurseId");
			return (Criteria) this;
		}

		public Criteria andNurseIdGreaterThanOrEqualTo(Long value) {
			addCriterion("nurse_id >=", value, "nurseId");
			return (Criteria) this;
		}

		public Criteria andNurseIdLessThan(Long value) {
			addCriterion("nurse_id <", value, "nurseId");
			return (Criteria) this;
		}

		public Criteria andNurseIdLessThanOrEqualTo(Long value) {
			addCriterion("nurse_id <=", value, "nurseId");
			return (Criteria) this;
		}

		public Criteria andNurseIdIn(List<Long> values) {
			addCriterion("nurse_id in", values, "nurseId");
			return (Criteria) this;
		}

		public Criteria andNurseIdNotIn(List<Long> values) {
			addCriterion("nurse_id not in", values, "nurseId");
			return (Criteria) this;
		}

		public Criteria andNurseIdBetween(Long value1, Long value2) {
			addCriterion("nurse_id between", value1, value2, "nurseId");
			return (Criteria) this;
		}

		public Criteria andNurseIdNotBetween(Long value1, Long value2) {
			addCriterion("nurse_id not between", value1, value2, "nurseId");
			return (Criteria) this;
		}

		public Criteria andIsleaveIsNull() {
			addCriterion("isLeave is null");
			return (Criteria) this;
		}

		public Criteria andIsleaveIsNotNull() {
			addCriterion("isLeave is not null");
			return (Criteria) this;
		}

		public Criteria andIsleaveEqualTo(Integer value) {
			addCriterion("isLeave =", value, "isleave");
			return (Criteria) this;
		}

		public Criteria andIsleaveNotEqualTo(Integer value) {
			addCriterion("isLeave <>", value, "isleave");
			return (Criteria) this;
		}

		public Criteria andIsleaveGreaterThan(Integer value) {
			addCriterion("isLeave >", value, "isleave");
			return (Criteria) this;
		}

		public Criteria andIsleaveGreaterThanOrEqualTo(Integer value) {
			addCriterion("isLeave >=", value, "isleave");
			return (Criteria) this;
		}

		public Criteria andIsleaveLessThan(Integer value) {
			addCriterion("isLeave <", value, "isleave");
			return (Criteria) this;
		}

		public Criteria andIsleaveLessThanOrEqualTo(Integer value) {
			addCriterion("isLeave <=", value, "isleave");
			return (Criteria) this;
		}

		public Criteria andIsleaveIn(List<Integer> values) {
			addCriterion("isLeave in", values, "isleave");
			return (Criteria) this;
		}

		public Criteria andIsleaveNotIn(List<Integer> values) {
			addCriterion("isLeave not in", values, "isleave");
			return (Criteria) this;
		}

		public Criteria andIsleaveBetween(Integer value1, Integer value2) {
			addCriterion("isLeave between", value1, value2, "isleave");
			return (Criteria) this;
		}

		public Criteria andIsleaveNotBetween(Integer value1, Integer value2) {
			addCriterion("isLeave not between", value1, value2, "isleave");
			return (Criteria) this;
		}

		public Criteria andIsbackIsNull() {
			addCriterion("isBack is null");
			return (Criteria) this;
		}

		public Criteria andIsbackIsNotNull() {
			addCriterion("isBack is not null");
			return (Criteria) this;
		}

		public Criteria andIsbackEqualTo(Integer value) {
			addCriterion("isBack =", value, "isback");
			return (Criteria) this;
		}

		public Criteria andIsbackNotEqualTo(Integer value) {
			addCriterion("isBack <>", value, "isback");
			return (Criteria) this;
		}

		public Criteria andIsbackGreaterThan(Integer value) {
			addCriterion("isBack >", value, "isback");
			return (Criteria) this;
		}

		public Criteria andIsbackGreaterThanOrEqualTo(Integer value) {
			addCriterion("isBack >=", value, "isback");
			return (Criteria) this;
		}

		public Criteria andIsbackLessThan(Integer value) {
			addCriterion("isBack <", value, "isback");
			return (Criteria) this;
		}

		public Criteria andIsbackLessThanOrEqualTo(Integer value) {
			addCriterion("isBack <=", value, "isback");
			return (Criteria) this;
		}

		public Criteria andIsbackIn(List<Integer> values) {
			addCriterion("isBack in", values, "isback");
			return (Criteria) this;
		}

		public Criteria andIsbackNotIn(List<Integer> values) {
			addCriterion("isBack not in", values, "isback");
			return (Criteria) this;
		}

		public Criteria andIsbackBetween(Integer value1, Integer value2) {
			addCriterion("isBack between", value1, value2, "isback");
			return (Criteria) this;
		}

		public Criteria andIsbackNotBetween(Integer value1, Integer value2) {
			addCriterion("isBack not between", value1, value2, "isback");
			return (Criteria) this;
		}

		public Criteria andGroupIdIsNull() {
			addCriterion("group_id is null");
			return (Criteria) this;
		}

		public Criteria andGroupIdIsNotNull() {
			addCriterion("group_id is not null");
			return (Criteria) this;
		}

		public Criteria andGroupIdEqualTo(Long value) {
			addCriterion("group_id =", value, "groupId");
			return (Criteria) this;
		}

		public Criteria andGroupIdNotEqualTo(Long value) {
			addCriterion("group_id <>", value, "groupId");
			return (Criteria) this;
		}

		public Criteria andGroupIdGreaterThan(Long value) {
			addCriterion("group_id >", value, "groupId");
			return (Criteria) this;
		}

		public Criteria andGroupIdGreaterThanOrEqualTo(Long value) {
			addCriterion("group_id >=", value, "groupId");
			return (Criteria) this;
		}

		public Criteria andGroupIdLessThan(Long value) {
			addCriterion("group_id <", value, "groupId");
			return (Criteria) this;
		}

		public Criteria andGroupIdLessThanOrEqualTo(Long value) {
			addCriterion("group_id <=", value, "groupId");
			return (Criteria) this;
		}

		public Criteria andGroupIdIn(List<Long> values) {
			addCriterion("group_id in", values, "groupId");
			return (Criteria) this;
		}

		public Criteria andGroupIdNotIn(List<Long> values) {
			addCriterion("group_id not in", values, "groupId");
			return (Criteria) this;
		}

		public Criteria andGroupIdBetween(Long value1, Long value2) {
			addCriterion("group_id between", value1, value2, "groupId");
			return (Criteria) this;
		}

		public Criteria andGroupIdNotBetween(Long value1, Long value2) {
			addCriterion("group_id not between", value1, value2, "groupId");
			return (Criteria) this;
		}

		public Criteria andNotesIsNull() {
			addCriterion("notes is null");
			return (Criteria) this;
		}

		public Criteria andNotesIsNotNull() {
			addCriterion("notes is not null");
			return (Criteria) this;
		}

		public Criteria andNotesEqualTo(String value) {
			addCriterion("notes =", value, "notes");
			return (Criteria) this;
		}

		public Criteria andNotesNotEqualTo(String value) {
			addCriterion("notes <>", value, "notes");
			return (Criteria) this;
		}

		public Criteria andNotesGreaterThan(String value) {
			addCriterion("notes >", value, "notes");
			return (Criteria) this;
		}

		public Criteria andNotesGreaterThanOrEqualTo(String value) {
			addCriterion("notes >=", value, "notes");
			return (Criteria) this;
		}

		public Criteria andNotesLessThan(String value) {
			addCriterion("notes <", value, "notes");
			return (Criteria) this;
		}

		public Criteria andNotesLessThanOrEqualTo(String value) {
			addCriterion("notes <=", value, "notes");
			return (Criteria) this;
		}

		public Criteria andNotesLike(String value) {
			addCriterion("notes like", value, "notes");
			return (Criteria) this;
		}

		public Criteria andNotesNotLike(String value) {
			addCriterion("notes not like", value, "notes");
			return (Criteria) this;
		}

		public Criteria andNotesIn(List<String> values) {
			addCriterion("notes in", values, "notes");
			return (Criteria) this;
		}

		public Criteria andNotesNotIn(List<String> values) {
			addCriterion("notes not in", values, "notes");
			return (Criteria) this;
		}

		public Criteria andNotesBetween(String value1, String value2) {
			addCriterion("notes between", value1, value2, "notes");
			return (Criteria) this;
		}

		public Criteria andNotesNotBetween(String value1, String value2) {
			addCriterion("notes not between", value1, value2, "notes");
			return (Criteria) this;
		}

		public Criteria andClearedIsNull() {
			addCriterion("cleared is null");
			return (Criteria) this;
		}

		public Criteria andClearedIsNotNull() {
			addCriterion("cleared is not null");
			return (Criteria) this;
		}

		public Criteria andClearedEqualTo(Integer value) {
			addCriterion("cleared =", value, "cleared");
			return (Criteria) this;
		}

		public Criteria andClearedNotEqualTo(Integer value) {
			addCriterion("cleared <>", value, "cleared");
			return (Criteria) this;
		}

		public Criteria andClearedGreaterThan(Integer value) {
			addCriterion("cleared >", value, "cleared");
			return (Criteria) this;
		}

		public Criteria andClearedGreaterThanOrEqualTo(Integer value) {
			addCriterion("cleared >=", value, "cleared");
			return (Criteria) this;
		}

		public Criteria andClearedLessThan(Integer value) {
			addCriterion("cleared <", value, "cleared");
			return (Criteria) this;
		}

		public Criteria andClearedLessThanOrEqualTo(Integer value) {
			addCriterion("cleared <=", value, "cleared");
			return (Criteria) this;
		}

		public Criteria andClearedIn(List<Integer> values) {
			addCriterion("cleared in", values, "cleared");
			return (Criteria) this;
		}

		public Criteria andClearedNotIn(List<Integer> values) {
			addCriterion("cleared not in", values, "cleared");
			return (Criteria) this;
		}

		public Criteria andClearedBetween(Integer value1, Integer value2) {
			addCriterion("cleared between", value1, value2, "cleared");
			return (Criteria) this;
		}

		public Criteria andClearedNotBetween(Integer value1, Integer value2) {
			addCriterion("cleared not between", value1, value2, "cleared");
			return (Criteria) this;
		}

		public Criteria andSendedIsNull() {
			addCriterion("sended is null");
			return (Criteria) this;
		}

		public Criteria andSendedIsNotNull() {
			addCriterion("sended is not null");
			return (Criteria) this;
		}

		public Criteria andSendedEqualTo(Integer value) {
			addCriterion("sended =", value, "sended");
			return (Criteria) this;
		}

		public Criteria andSendedNotEqualTo(Integer value) {
			addCriterion("sended <>", value, "sended");
			return (Criteria) this;
		}

		public Criteria andSendedGreaterThan(Integer value) {
			addCriterion("sended >", value, "sended");
			return (Criteria) this;
		}

		public Criteria andSendedGreaterThanOrEqualTo(Integer value) {
			addCriterion("sended >=", value, "sended");
			return (Criteria) this;
		}

		public Criteria andSendedLessThan(Integer value) {
			addCriterion("sended <", value, "sended");
			return (Criteria) this;
		}

		public Criteria andSendedLessThanOrEqualTo(Integer value) {
			addCriterion("sended <=", value, "sended");
			return (Criteria) this;
		}

		public Criteria andSendedIn(List<Integer> values) {
			addCriterion("sended in", values, "sended");
			return (Criteria) this;
		}

		public Criteria andSendedNotIn(List<Integer> values) {
			addCriterion("sended not in", values, "sended");
			return (Criteria) this;
		}

		public Criteria andSendedBetween(Integer value1, Integer value2) {
			addCriterion("sended between", value1, value2, "sended");
			return (Criteria) this;
		}

		public Criteria andSendedNotBetween(Integer value1, Integer value2) {
			addCriterion("sended not between", value1, value2, "sended");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table pension_hospitalizeregister
	 * @mbggenerated  Sun Sep 08 15:11:07 CST 2013
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue,
				String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table pension_hospitalizeregister
     *
     * @mbggenerated do_not_delete_during_merge Thu Aug 29 15:47:42 CST 2013
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}