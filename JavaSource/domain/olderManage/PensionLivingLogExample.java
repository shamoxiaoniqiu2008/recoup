package domain.olderManage;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class PensionLivingLogExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table pension_living_log
	 * @mbggenerated  Fri Sep 20 11:46:05 CST 2013
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table pension_living_log
	 * @mbggenerated  Fri Sep 20 11:46:05 CST 2013
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table pension_living_log
	 * @mbggenerated  Fri Sep 20 11:46:05 CST 2013
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_living_log
	 * @mbggenerated  Fri Sep 20 11:46:05 CST 2013
	 */
	public PensionLivingLogExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_living_log
	 * @mbggenerated  Fri Sep 20 11:46:05 CST 2013
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_living_log
	 * @mbggenerated  Fri Sep 20 11:46:05 CST 2013
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_living_log
	 * @mbggenerated  Fri Sep 20 11:46:05 CST 2013
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_living_log
	 * @mbggenerated  Fri Sep 20 11:46:05 CST 2013
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_living_log
	 * @mbggenerated  Fri Sep 20 11:46:05 CST 2013
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_living_log
	 * @mbggenerated  Fri Sep 20 11:46:05 CST 2013
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_living_log
	 * @mbggenerated  Fri Sep 20 11:46:05 CST 2013
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_living_log
	 * @mbggenerated  Fri Sep 20 11:46:05 CST 2013
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_living_log
	 * @mbggenerated  Fri Sep 20 11:46:05 CST 2013
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_living_log
	 * @mbggenerated  Fri Sep 20 11:46:05 CST 2013
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table pension_living_log
	 * @mbggenerated  Fri Sep 20 11:46:05 CST 2013
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null || value.toString().equals("")) {
				addCriterion("1=1");
				return;
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null
					|| value1.toString().equals("")
					|| value2.toString().equals("")) {
				addCriterion("1=1");
				return;
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		public Criteria andIdIsNull() {
			addCriterion("id is null");
			return (Criteria) this;
		}

		public Criteria andIdIsNotNull() {
			addCriterion("id is not null");
			return (Criteria) this;
		}

		public Criteria andIdEqualTo(Long value) {
			addCriterion("id =", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotEqualTo(Long value) {
			addCriterion("id <>", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThan(Long value) {
			addCriterion("id >", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThanOrEqualTo(Long value) {
			addCriterion("id >=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThan(Long value) {
			addCriterion("id <", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThanOrEqualTo(Long value) {
			addCriterion("id <=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdIn(List<Long> values) {
			addCriterion("id in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotIn(List<Long> values) {
			addCriterion("id not in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdBetween(Long value1, Long value2) {
			addCriterion("id between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotBetween(Long value1, Long value2) {
			addCriterion("id not between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andOlderIdIsNull() {
			addCriterion("older_id is null");
			return (Criteria) this;
		}

		public Criteria andOlderIdIsNotNull() {
			addCriterion("older_id is not null");
			return (Criteria) this;
		}

		public Criteria andOlderIdEqualTo(Long value) {
			addCriterion("older_id =", value, "olderId");
			return (Criteria) this;
		}

		public Criteria andOlderIdNotEqualTo(Long value) {
			addCriterion("older_id <>", value, "olderId");
			return (Criteria) this;
		}

		public Criteria andOlderIdGreaterThan(Long value) {
			addCriterion("older_id >", value, "olderId");
			return (Criteria) this;
		}

		public Criteria andOlderIdGreaterThanOrEqualTo(Long value) {
			addCriterion("older_id >=", value, "olderId");
			return (Criteria) this;
		}

		public Criteria andOlderIdLessThan(Long value) {
			addCriterion("older_id <", value, "olderId");
			return (Criteria) this;
		}

		public Criteria andOlderIdLessThanOrEqualTo(Long value) {
			addCriterion("older_id <=", value, "olderId");
			return (Criteria) this;
		}

		public Criteria andOlderIdIn(List<Long> values) {
			addCriterion("older_id in", values, "olderId");
			return (Criteria) this;
		}

		public Criteria andOlderIdNotIn(List<Long> values) {
			addCriterion("older_id not in", values, "olderId");
			return (Criteria) this;
		}

		public Criteria andOlderIdBetween(Long value1, Long value2) {
			addCriterion("older_id between", value1, value2, "olderId");
			return (Criteria) this;
		}

		public Criteria andOlderIdNotBetween(Long value1, Long value2) {
			addCriterion("older_id not between", value1, value2, "olderId");
			return (Criteria) this;
		}

		public Criteria andNurseLevelIdIsNull() {
			addCriterion("nurse_level_id is null");
			return (Criteria) this;
		}

		public Criteria andNurseLevelIdIsNotNull() {
			addCriterion("nurse_level_id is not null");
			return (Criteria) this;
		}

		public Criteria andNurseLevelIdEqualTo(Long value) {
			addCriterion("nurse_level_id =", value, "nurseLevelId");
			return (Criteria) this;
		}

		public Criteria andNurseLevelIdNotEqualTo(Long value) {
			addCriterion("nurse_level_id <>", value, "nurseLevelId");
			return (Criteria) this;
		}

		public Criteria andNurseLevelIdGreaterThan(Long value) {
			addCriterion("nurse_level_id >", value, "nurseLevelId");
			return (Criteria) this;
		}

		public Criteria andNurseLevelIdGreaterThanOrEqualTo(Long value) {
			addCriterion("nurse_level_id >=", value, "nurseLevelId");
			return (Criteria) this;
		}

		public Criteria andNurseLevelIdLessThan(Long value) {
			addCriterion("nurse_level_id <", value, "nurseLevelId");
			return (Criteria) this;
		}

		public Criteria andNurseLevelIdLessThanOrEqualTo(Long value) {
			addCriterion("nurse_level_id <=", value, "nurseLevelId");
			return (Criteria) this;
		}

		public Criteria andNurseLevelIdIn(List<Long> values) {
			addCriterion("nurse_level_id in", values, "nurseLevelId");
			return (Criteria) this;
		}

		public Criteria andNurseLevelIdNotIn(List<Long> values) {
			addCriterion("nurse_level_id not in", values, "nurseLevelId");
			return (Criteria) this;
		}

		public Criteria andNurseLevelIdBetween(Long value1, Long value2) {
			addCriterion("nurse_level_id between", value1, value2,
					"nurseLevelId");
			return (Criteria) this;
		}

		public Criteria andNurseLevelIdNotBetween(Long value1, Long value2) {
			addCriterion("nurse_level_id not between", value1, value2,
					"nurseLevelId");
			return (Criteria) this;
		}

		public Criteria andBedTypeIdIsNull() {
			addCriterion("bed_type_id is null");
			return (Criteria) this;
		}

		public Criteria andBedTypeIdIsNotNull() {
			addCriterion("bed_type_id is not null");
			return (Criteria) this;
		}

		public Criteria andBedTypeIdEqualTo(Long value) {
			addCriterion("bed_type_id =", value, "bedTypeId");
			return (Criteria) this;
		}

		public Criteria andBedTypeIdNotEqualTo(Long value) {
			addCriterion("bed_type_id <>", value, "bedTypeId");
			return (Criteria) this;
		}

		public Criteria andBedTypeIdGreaterThan(Long value) {
			addCriterion("bed_type_id >", value, "bedTypeId");
			return (Criteria) this;
		}

		public Criteria andBedTypeIdGreaterThanOrEqualTo(Long value) {
			addCriterion("bed_type_id >=", value, "bedTypeId");
			return (Criteria) this;
		}

		public Criteria andBedTypeIdLessThan(Long value) {
			addCriterion("bed_type_id <", value, "bedTypeId");
			return (Criteria) this;
		}

		public Criteria andBedTypeIdLessThanOrEqualTo(Long value) {
			addCriterion("bed_type_id <=", value, "bedTypeId");
			return (Criteria) this;
		}

		public Criteria andBedTypeIdIn(List<Long> values) {
			addCriterion("bed_type_id in", values, "bedTypeId");
			return (Criteria) this;
		}

		public Criteria andBedTypeIdNotIn(List<Long> values) {
			addCriterion("bed_type_id not in", values, "bedTypeId");
			return (Criteria) this;
		}

		public Criteria andBedTypeIdBetween(Long value1, Long value2) {
			addCriterion("bed_type_id between", value1, value2, "bedTypeId");
			return (Criteria) this;
		}

		public Criteria andBedTypeIdNotBetween(Long value1, Long value2) {
			addCriterion("bed_type_id not between", value1, value2, "bedTypeId");
			return (Criteria) this;
		}

		public Criteria andUpdateTimeIsNull() {
			addCriterion("update_time is null");
			return (Criteria) this;
		}

		public Criteria andUpdateTimeIsNotNull() {
			addCriterion("update_time is not null");
			return (Criteria) this;
		}

		public Criteria andUpdateTimeEqualTo(Date value) {
			addCriterion("update_time =", value, "updateTime");
			return (Criteria) this;
		}

		public Criteria andUpdateTimeNotEqualTo(Date value) {
			addCriterion("update_time <>", value, "updateTime");
			return (Criteria) this;
		}

		public Criteria andUpdateTimeGreaterThan(Date value) {
			addCriterion("update_time >", value, "updateTime");
			return (Criteria) this;
		}

		public Criteria andUpdateTimeGreaterThanOrEqualTo(Date value) {
			addCriterion("update_time >=", value, "updateTime");
			return (Criteria) this;
		}

		public Criteria andUpdateTimeLessThan(Date value) {
			addCriterion("update_time <", value, "updateTime");
			return (Criteria) this;
		}

		public Criteria andUpdateTimeLessThanOrEqualTo(Date value) {
			addCriterion("update_time <=", value, "updateTime");
			return (Criteria) this;
		}

		public Criteria andUpdateTimeIn(List<Date> values) {
			addCriterion("update_time in", values, "updateTime");
			return (Criteria) this;
		}

		public Criteria andUpdateTimeNotIn(List<Date> values) {
			addCriterion("update_time not in", values, "updateTime");
			return (Criteria) this;
		}

		public Criteria andUpdateTimeBetween(Date value1, Date value2) {
			addCriterion("update_time between", value1, value2, "updateTime");
			return (Criteria) this;
		}

		public Criteria andUpdateTimeNotBetween(Date value1, Date value2) {
			addCriterion("update_time not between", value1, value2,
					"updateTime");
			return (Criteria) this;
		}

		public Criteria andPayToDateIsNull() {
			addCriterion("pay_to_date is null");
			return (Criteria) this;
		}

		public Criteria andPayToDateIsNotNull() {
			addCriterion("pay_to_date is not null");
			return (Criteria) this;
		}

		public Criteria andPayToDateEqualTo(Date value) {
			addCriterion("pay_to_date =", value, "payToDate");
			return (Criteria) this;
		}

		public Criteria andPayToDateNotEqualTo(Date value) {
			addCriterion("pay_to_date <>", value, "payToDate");
			return (Criteria) this;
		}

		public Criteria andPayToDateGreaterThan(Date value) {
			addCriterion("pay_to_date >", value, "payToDate");
			return (Criteria) this;
		}

		public Criteria andPayToDateGreaterThanOrEqualTo(Date value) {
			addCriterion("pay_to_date >=", value, "payToDate");
			return (Criteria) this;
		}

		public Criteria andPayToDateLessThan(Date value) {
			addCriterion("pay_to_date <", value, "payToDate");
			return (Criteria) this;
		}

		public Criteria andPayToDateLessThanOrEqualTo(Date value) {
			addCriterion("pay_to_date <=", value, "payToDate");
			return (Criteria) this;
		}

		public Criteria andPayToDateIn(List<Date> values) {
			addCriterion("pay_to_date in", values, "payToDate");
			return (Criteria) this;
		}

		public Criteria andPayToDateNotIn(List<Date> values) {
			addCriterion("pay_to_date not in", values, "payToDate");
			return (Criteria) this;
		}

		public Criteria andPayToDateBetween(Date value1, Date value2) {
			addCriterion("pay_to_date between", value1, value2, "payToDate");
			return (Criteria) this;
		}

		public Criteria andPayToDateNotBetween(Date value1, Date value2) {
			addCriterion("pay_to_date not between", value1, value2, "payToDate");
			return (Criteria) this;
		}

		public Criteria andUpdateTimeNewIsNull() {
			addCriterion("update_time_new is null");
			return (Criteria) this;
		}

		public Criteria andUpdateTimeNewIsNotNull() {
			addCriterion("update_time_new is not null");
			return (Criteria) this;
		}

		public Criteria andUpdateTimeNewEqualTo(Date value) {
			addCriterion("update_time_new =", value, "updateTimeNew");
			return (Criteria) this;
		}

		public Criteria andUpdateTimeNewNotEqualTo(Date value) {
			addCriterion("update_time_new <>", value, "updateTimeNew");
			return (Criteria) this;
		}

		public Criteria andUpdateTimeNewGreaterThan(Date value) {
			addCriterion("update_time_new >", value, "updateTimeNew");
			return (Criteria) this;
		}

		public Criteria andUpdateTimeNewGreaterThanOrEqualTo(Date value) {
			addCriterion("update_time_new >=", value, "updateTimeNew");
			return (Criteria) this;
		}

		public Criteria andUpdateTimeNewLessThan(Date value) {
			addCriterion("update_time_new <", value, "updateTimeNew");
			return (Criteria) this;
		}

		public Criteria andUpdateTimeNewLessThanOrEqualTo(Date value) {
			addCriterion("update_time_new <=", value, "updateTimeNew");
			return (Criteria) this;
		}

		public Criteria andUpdateTimeNewIn(List<Date> values) {
			addCriterion("update_time_new in", values, "updateTimeNew");
			return (Criteria) this;
		}

		public Criteria andUpdateTimeNewNotIn(List<Date> values) {
			addCriterion("update_time_new not in", values, "updateTimeNew");
			return (Criteria) this;
		}

		public Criteria andUpdateTimeNewBetween(Date value1, Date value2) {
			addCriterion("update_time_new between", value1, value2,
					"updateTimeNew");
			return (Criteria) this;
		}

		public Criteria andUpdateTimeNewNotBetween(Date value1, Date value2) {
			addCriterion("update_time_new not between", value1, value2,
					"updateTimeNew");
			return (Criteria) this;
		}

		public Criteria andTotaldaysIsNull() {
			addCriterion("totalDays is null");
			return (Criteria) this;
		}

		public Criteria andTotaldaysIsNotNull() {
			addCriterion("totalDays is not null");
			return (Criteria) this;
		}

		public Criteria andTotaldaysEqualTo(Float value) {
			addCriterion("totalDays =", value, "totaldays");
			return (Criteria) this;
		}

		public Criteria andTotaldaysNotEqualTo(Float value) {
			addCriterion("totalDays <>", value, "totaldays");
			return (Criteria) this;
		}

		public Criteria andTotaldaysGreaterThan(Float value) {
			addCriterion("totalDays >", value, "totaldays");
			return (Criteria) this;
		}

		public Criteria andTotaldaysGreaterThanOrEqualTo(Float value) {
			addCriterion("totalDays >=", value, "totaldays");
			return (Criteria) this;
		}

		public Criteria andTotaldaysLessThan(Float value) {
			addCriterion("totalDays <", value, "totaldays");
			return (Criteria) this;
		}

		public Criteria andTotaldaysLessThanOrEqualTo(Float value) {
			addCriterion("totalDays <=", value, "totaldays");
			return (Criteria) this;
		}

		public Criteria andTotaldaysIn(List<Float> values) {
			addCriterion("totalDays in", values, "totaldays");
			return (Criteria) this;
		}

		public Criteria andTotaldaysNotIn(List<Float> values) {
			addCriterion("totalDays not in", values, "totaldays");
			return (Criteria) this;
		}

		public Criteria andTotaldaysBetween(Float value1, Float value2) {
			addCriterion("totalDays between", value1, value2, "totaldays");
			return (Criteria) this;
		}

		public Criteria andTotaldaysNotBetween(Float value1, Float value2) {
			addCriterion("totalDays not between", value1, value2, "totaldays");
			return (Criteria) this;
		}

		public Criteria andTotalfeesIsNull() {
			addCriterion("totalFees is null");
			return (Criteria) this;
		}

		public Criteria andTotalfeesIsNotNull() {
			addCriterion("totalFees is not null");
			return (Criteria) this;
		}

		public Criteria andTotalfeesEqualTo(Float value) {
			addCriterion("totalFees =", value, "totalfees");
			return (Criteria) this;
		}

		public Criteria andTotalfeesNotEqualTo(Float value) {
			addCriterion("totalFees <>", value, "totalfees");
			return (Criteria) this;
		}

		public Criteria andTotalfeesGreaterThan(Float value) {
			addCriterion("totalFees >", value, "totalfees");
			return (Criteria) this;
		}

		public Criteria andTotalfeesGreaterThanOrEqualTo(Float value) {
			addCriterion("totalFees >=", value, "totalfees");
			return (Criteria) this;
		}

		public Criteria andTotalfeesLessThan(Float value) {
			addCriterion("totalFees <", value, "totalfees");
			return (Criteria) this;
		}

		public Criteria andTotalfeesLessThanOrEqualTo(Float value) {
			addCriterion("totalFees <=", value, "totalfees");
			return (Criteria) this;
		}

		public Criteria andTotalfeesIn(List<Float> values) {
			addCriterion("totalFees in", values, "totalfees");
			return (Criteria) this;
		}

		public Criteria andTotalfeesNotIn(List<Float> values) {
			addCriterion("totalFees not in", values, "totalfees");
			return (Criteria) this;
		}

		public Criteria andTotalfeesBetween(Float value1, Float value2) {
			addCriterion("totalFees between", value1, value2, "totalfees");
			return (Criteria) this;
		}

		public Criteria andTotalfeesNotBetween(Float value1, Float value2) {
			addCriterion("totalFees not between", value1, value2, "totalfees");
			return (Criteria) this;
		}

		public Criteria andIscloseIsNull() {
			addCriterion("isClose is null");
			return (Criteria) this;
		}

		public Criteria andIscloseIsNotNull() {
			addCriterion("isClose is not null");
			return (Criteria) this;
		}

		public Criteria andIscloseEqualTo(Integer value) {
			addCriterion("isClose =", value, "isclose");
			return (Criteria) this;
		}

		public Criteria andIscloseNotEqualTo(Integer value) {
			addCriterion("isClose <>", value, "isclose");
			return (Criteria) this;
		}

		public Criteria andIscloseGreaterThan(Integer value) {
			addCriterion("isClose >", value, "isclose");
			return (Criteria) this;
		}

		public Criteria andIscloseGreaterThanOrEqualTo(Integer value) {
			addCriterion("isClose >=", value, "isclose");
			return (Criteria) this;
		}

		public Criteria andIscloseLessThan(Integer value) {
			addCriterion("isClose <", value, "isclose");
			return (Criteria) this;
		}

		public Criteria andIscloseLessThanOrEqualTo(Integer value) {
			addCriterion("isClose <=", value, "isclose");
			return (Criteria) this;
		}

		public Criteria andIscloseIn(List<Integer> values) {
			addCriterion("isClose in", values, "isclose");
			return (Criteria) this;
		}

		public Criteria andIscloseNotIn(List<Integer> values) {
			addCriterion("isClose not in", values, "isclose");
			return (Criteria) this;
		}

		public Criteria andIscloseBetween(Integer value1, Integer value2) {
			addCriterion("isClose between", value1, value2, "isclose");
			return (Criteria) this;
		}

		public Criteria andIscloseNotBetween(Integer value1, Integer value2) {
			addCriterion("isClose not between", value1, value2, "isclose");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table pension_living_log
	 * @mbggenerated  Fri Sep 20 11:46:05 CST 2013
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue,
				String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table pension_living_log
     *
     * @mbggenerated do_not_delete_during_merge Mon Sep 09 14:29:45 CST 2013
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}