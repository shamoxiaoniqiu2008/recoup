<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="persistence.receptionManage.PensionGuestrecordMapper">
	<resultMap id="BaseResultMap" type="domain.receptionManage.PensionGuestrecord">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Tue Sep 10 
			14:31:58 CST 2013. -->
		<id column="id" jdbcType="INTEGER" property="id" />
		<result column="older_id" jdbcType="INTEGER" property="olderId" />
		<result column="name" jdbcType="VARCHAR" property="name" />
		<result column="relation_id" jdbcType="INTEGER" property="relationId" />
		<result column="visitTime" jdbcType="TIMESTAMP" property="visittime" />
		<result column="visitType" jdbcType="INTEGER" property="visittype" />
		<result column="leaveTime" jdbcType="TIMESTAMP" property="leavetime" />
		<result column="carNo" jdbcType="VARCHAR" property="carno" />
		<result column="notes" jdbcType="VARCHAR" property="notes" />
		<result column="cleared" jdbcType="INTEGER" property="cleared" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Tue Sep 10 
			14:31:58 CST 2013. -->
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
                </when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
                </when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
                  </foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Tue Sep 10 
			14:31:58 CST 2013. -->
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
                </when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
                </when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
                  </foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Tue Sep 10 
			14:31:58 CST 2013. -->
		id, older_id, name, relation_id, visitTime, visitType, leaveTime,
		carNo, notes, cleared
	</sql>
	<select id="selectByExample" parameterType="domain.receptionManage.PensionGuestrecordExample"
		resultMap="BaseResultMap">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Tue Sep 10 
			14:31:58 CST 2013. -->
		select
		<if test="distinct">
			distinct
    </if>
		<include refid="Base_Column_List" />
		from pension_guestrecord
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
    </if>
	</select>
	<select id="selectByPrimaryKey" parameterType="java.lang.Long"
		resultMap="BaseResultMap">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Tue Sep 10 
			14:31:58 CST 2013. -->
		select
		<include refid="Base_Column_List" />
		from pension_guestrecord
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Tue Sep 10 
			14:31:58 CST 2013. -->
		delete from pension_guestrecord
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample" parameterType="domain.receptionManage.PensionGuestrecordExample">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Tue Sep 10 
			14:31:58 CST 2013. -->
		delete from pension_guestrecord
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="domain.receptionManage.PensionGuestrecord">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Tue Sep 10 
			14:31:58 CST 2013. -->
		insert into pension_guestrecord (id, older_id, name,
		relation_id,
		visitTime, visitType,
		leaveTime, carNo, notes,
		cleared)
		values
		(#{id,jdbcType=INTEGER}, #{olderId,jdbcType=INTEGER},
		#{name,jdbcType=VARCHAR},
		#{relationId,jdbcType=INTEGER},
		#{visittime,jdbcType=TIMESTAMP}, #{visittype,jdbcType=INTEGER},
		#{leavetime,jdbcType=TIMESTAMP}, #{carno,jdbcType=VARCHAR},
		#{notes,jdbcType=VARCHAR},
		#{cleared,jdbcType=INTEGER})
	</insert>
	<insert id="insertSelective" parameterType="domain.receptionManage.PensionGuestrecord">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Tue Sep 10 
			14:31:58 CST 2013. -->
		insert into pension_guestrecord
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
      </if>
			<if test="olderId != null">
				older_id,
      </if>
			<if test="name != null">
				name,
      </if>
			<if test="relationId != null">
				relation_id,
      </if>
			<if test="visittime != null">
				visitTime,
      </if>
			<if test="visittype != null">
				visitType,
      </if>
			<if test="leavetime != null">
				leaveTime,
      </if>
			<if test="carno != null">
				carNo,
      </if>
			<if test="notes != null">
				notes,
      </if>
			<if test="cleared != null">
				cleared,
      </if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
      </if>
			<if test="olderId != null">
				#{olderId,jdbcType=INTEGER},
      </if>
			<if test="name != null">
				#{name,jdbcType=VARCHAR},
      </if>
			<if test="relationId != null">
				#{relationId,jdbcType=INTEGER},
      </if>
			<if test="visittime != null">
				#{visittime,jdbcType=TIMESTAMP},
      </if>
			<if test="visittype != null">
				#{visittype,jdbcType=INTEGER},
      </if>
			<if test="leavetime != null">
				#{leavetime,jdbcType=TIMESTAMP},
      </if>
			<if test="carno != null">
				#{carno,jdbcType=VARCHAR},
      </if>
			<if test="notes != null">
				#{notes,jdbcType=VARCHAR},
      </if>
			<if test="cleared != null">
				#{cleared,jdbcType=INTEGER},
      </if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="domain.receptionManage.PensionGuestrecordExample"
		resultType="java.lang.Integer">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Tue Sep 10 
			14:31:58 CST 2013. -->
		select count(*) from pension_guestrecord
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Tue Sep 10 
			14:31:58 CST 2013. -->
		update pension_guestrecord
		<set>
			<if test="record.id != null">
				id = #{record.id,jdbcType=INTEGER},
      </if>
			<if test="record.olderId != null">
				older_id = #{record.olderId,jdbcType=INTEGER},
      </if>
			<if test="record.name != null">
				name = #{record.name,jdbcType=VARCHAR},
      </if>
			<if test="record.relationId != null">
				relation_id = #{record.relationId,jdbcType=INTEGER},
      </if>
			<if test="record.visittime != null">
				visitTime = #{record.visittime,jdbcType=TIMESTAMP},
      </if>
			<if test="record.visittype != null">
				visitType = #{record.visittype,jdbcType=INTEGER},
      </if>
			<if test="record.leavetime != null">
				leaveTime = #{record.leavetime,jdbcType=TIMESTAMP},
      </if>
			<if test="record.carno != null">
				carNo = #{record.carno,jdbcType=VARCHAR},
      </if>
			<if test="record.notes != null">
				notes = #{record.notes,jdbcType=VARCHAR},
      </if>
			<if test="record.cleared != null">
				cleared = #{record.cleared,jdbcType=INTEGER},
      </if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Tue Sep 10 
			14:31:58 CST 2013. -->
		update pension_guestrecord
		set id = #{record.id,jdbcType=INTEGER},
		older_id = #{record.olderId,jdbcType=INTEGER},
		name =
		#{record.name,jdbcType=VARCHAR},
		relation_id =
		#{record.relationId,jdbcType=INTEGER},
		visitTime =
		#{record.visittime,jdbcType=TIMESTAMP},
		visitType =
		#{record.visittype,jdbcType=INTEGER},
		leaveTime =
		#{record.leavetime,jdbcType=TIMESTAMP},
		carNo =
		#{record.carno,jdbcType=VARCHAR},
		notes =
		#{record.notes,jdbcType=VARCHAR},
		cleared =
		#{record.cleared,jdbcType=INTEGER}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="domain.receptionManage.PensionGuestrecord">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Tue Sep 10 
			14:31:58 CST 2013. -->
		update pension_guestrecord
		<set>
			<if test="olderId != null">
				older_id = #{olderId,jdbcType=INTEGER},
      </if>
			<if test="name != null">
				name = #{name,jdbcType=VARCHAR},
      </if>
			<if test="relationId != null">
				relation_id = #{relationId,jdbcType=INTEGER},
      </if>
			<if test="visittime != null">
				visitTime = #{visittime,jdbcType=TIMESTAMP},
      </if>
			<if test="visittype != null">
				visitType = #{visittype,jdbcType=INTEGER},
      </if>
			<if test="leavetime != null">
				leaveTime = #{leavetime,jdbcType=TIMESTAMP},
      </if>
			<if test="carno != null">
				carNo = #{carno,jdbcType=VARCHAR},
      </if>
			<if test="notes != null">
				notes = #{notes,jdbcType=VARCHAR},
      </if>
			<if test="cleared != null">
				cleared = #{cleared,jdbcType=INTEGER},
      </if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="domain.receptionManage.PensionGuestrecord">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Tue Sep 10 
			14:31:58 CST 2013. -->
		update pension_guestrecord
		set older_id = #{olderId,jdbcType=INTEGER},
		name = #{name,jdbcType=VARCHAR},
		relation_id =
		#{relationId,jdbcType=INTEGER},
		visitTime =
		#{visittime,jdbcType=TIMESTAMP},
		visitType =
		#{visittype,jdbcType=INTEGER},
		leaveTime =
		#{leavetime,jdbcType=TIMESTAMP},
		carNo = #{carno,jdbcType=VARCHAR},
		notes = #{notes,jdbcType=VARCHAR},
		cleared =
		#{cleared,jdbcType=INTEGER}
		where id = #{id,jdbcType=INTEGER}
	</update>


	<!-- 访客登记，查询所有访客登记记录 -->
	<select id="selectAllGuestRecords" resultType="service.receptionManage.GuestRecordDomain">
		select
		aa.id,aa.carNo
		,aa.cleared,aa.leaveTime,aa.`name`,aa.notes,aa.visitTime,aa.older_id,aa.visitTypeName,
		aa.olderName,aa.bedName,
		aa.relationShip,
		aa.visittype
		,aa.relationId
		FROM
		(select pg.id,pg.carNo
		,pg.cleared,pg.leaveTime,pg.`name`,pg.notes,pg.visitTime,pg.older_id,pdv.visittype
		as
		visitTypeName,po.`name` as olderName,pd.`name` as bedName,
		pdr.relationShip,
		pg.visitType as visittype
		,pg.relation_id AS
		relationId
		from pension_guestrecord pg,pension_older po,
		pension_dic_visitstyle pdv,pension_dic_relationship pdr,
		pension_livingrecord pl,pension_bed pd,pension_room pr,
		pension_floor
		pf,pension_building pb
		where pdv.id=pg.visitType and pg.older_id=po.id
		and pdr.id=pg.relation_id and pl.older_id=po.id
		and pd.room_id=pr.id
		and pr.floor_id=pf.id and pf.build_id=pb.id
		and pg.older_id is not null
		and pl.bed_id=pd.id
		and pg.cleared=2
		UNION
		select
		pg.id,pg.carNo,pg.cleared,pg.leaveTime,pg.`name`,pg.notes,pg.visitTime,'
		',pdv.visittype as
		visitTypeName,' ' as olderName,' ' as bedName,
		' ' as
		relationShip,
		pg.visitType as visittype
		,null AS relationId
		from
		pension_guestrecord pg,
		pension_dic_visitstyle pdv
		where
		pdv.id=pg.visitType
		and pg.older_id is null
		and pg.cleared=2) aa
		where
		1=1
		<if test="startDate != null &amp;&amp; startDate != ''">
			and aa.visitTime &gt;= #{startDate,jdbcType=TIMESTAMP}
		</if>
		<if test="endDate != null &amp;&amp; endDate != ''">
			and
			unix_timestamp(date_add(#{endDate}, interval 1 day))
			>=unix_timestamp(aa.visitTime)
		</if>
		ORDER BY aa.visitTime DESC

	</select>
	<!-- 访客登记，按老人ID查询访客登记记录 -->
	<select id="selectGuestRecordsByOlderId" parameterType="map"
		resultType="service.receptionManage.GuestRecordDomain">
		select
		pg.id,pg.carNo,pg.cleared,pg.leaveTime,pg.`name`,pg.notes,pg.visitTime,pg.older_id,pdv.visittype
		as
		visitTypeName,po.`name` as olderName,pd.`name` as bedName,
		pdr.relationShip,
		pg.visitType as visittype
		,pg.relation_id AS
		relationId
		from pension_guestrecord pg,pension_older po,
		pension_dic_visitstyle pdv,pension_dic_relationship pdr,
		pension_livingrecord pl,pension_bed pd,pension_room pr,
		pension_floor
		pf,pension_building pb
		where pdv.id=pg.visitType and pg.older_id=po.id
		and pdr.id=pg.relation_id and pl.older_id=po.id
		and pd.room_id=pr.id
		and pg.older_id = #{olderId,jdbcType=INTEGER}
		and pr.floor_id=pf.id and
		pf.build_id=pb.id
		and pg.older_id is not null
		and pl.bed_id=pd.id
		and
		pg.cleared=2
		<if test="startDate != null &amp;&amp; startDate != ''">
			and pg.visitTime &gt;= #{startDate,jdbcType=TIMESTAMP}
		</if>
		<if test="endDate != null &amp;&amp; endDate != ''">
			and
			unix_timestamp(date_add(#{endDate}, interval 1 day))
			>=unix_timestamp(pg.visitTime)
		</if>
		order by pg.visitTime desc
	</select>
	<!-- 访客登记，按访客类型查询访客登记记录 -->
	<select id="selectGuestRecordsByStyleId" parameterType="map"
		resultType="service.receptionManage.GuestRecordDomain">
		select aa.id,aa.carNo
		,aa.cleared,aa.leaveTime,aa.`name`,aa.notes,aa.visitTime,aa.older_id,aa.visitTypeName,
		aa.olderName,aa.bedName,
		aa.relationShip,
		aa.visittype
		,aa.relationId
		FROM
		(
		select
		pg.id,pg.carNo,pg.cleared,pg.leaveTime,pg.`name`,pg.notes,pg.visitTime,pg.older_id,pdv.visittype
		as
		visitTypeName,po.`name` as olderName,pd.`name` as bedName,
		pdr.relationShip,
		pg.visitType as visittype
		,pg.relation_id AS
		relationId
		from pension_guestrecord pg,pension_older po,
		pension_dic_visitstyle pdv,pension_dic_relationship pdr,
		pension_livingrecord pl,pension_bed pd,pension_room pr,
		pension_floor
		pf,pension_building pb
		where pdv.id=pg.visitType and pg.older_id=po.id
		and pdr.id=pg.relation_id and pl.older_id=po.id
		and pd.room_id=pr.id
		and pr.floor_id=pf.id and pf.build_id=pb.id
		and pg.older_id is not null
		and pl.bed_id=pd.id
		and pg.visitType = #{styleId,jdbcType=INTEGER}
		and
		pg.cleared=2
		UNION
		select
		pg.id,pg.carNo,pg.cleared,pg.leaveTime,pg.`name`,pg.notes,pg.visitTime,
		null as olderId,pdv.visittype as
		visitTypeName,' ' as olderName,' ' as
		bedName,
		' ' as relationShip,
		pg.visitType as
		visittype
		,null AS
		relationId
		from pension_guestrecord pg,
		pension_dic_visitstyle pdv
		where
		pdv.id=pg.visitType
		and pg.older_id is null
		and pg.visitType =
		#{styleId,jdbcType=INTEGER}
		and pg.cleared=2) aa
		where 1=1
		<if test="startDate != null &amp;&amp; startDate != ''">
			and aa.visitTime &gt;= #{startDate,jdbcType=TIMESTAMP}
		</if>
		<if test="endDate != null &amp;&amp; endDate != ''">
			and
			unix_timestamp(date_add(#{endDate}, interval 1 day))
			>=unix_timestamp(aa.visitTime)
		</if>
		ORDER BY aa.visitTime DESC
	</select>

	<select id="selectStatistics" resultType="service.receptionManage.GuestRecordDomain">
		select p.name as olderName,count(*) as countNo
		from pension_guestrecord
		g,pension_older p
		where p.id=g.older_id and g.visitType=4
		<if test="oldId !=null">
			and g.older_Id=#{oldId,jdbcType=INTEGER}
		</if>
		<if test="startDate != null &amp;&amp; startDate != ''">
			and g.visitTime &gt;= #{startDate,jdbcType=TIMESTAMP}
		</if>
		<if test="endDate != null &amp;&amp; endDate != ''">
			and
			unix_timestamp(date_add(#{endDate}, interval 1 day))
			>=unix_timestamp(g.visitTime)
		</if>
		and g.cleared=2
		group by p.name
	</select>
	<select id="selectVisitOlderReports" resultType="domain.receptionManage.VisitOlderReport">
		select aa.visitNumber,count(aa.id) as olderCount from

		(select
		po.id,po.name,count(po.id)
		as visitNumber
		from pension_guestrecord pg,
		pension_older po
		where
		po.id=pg.older_id
		and pg.cleared=2
		and po.cleared=2
		<if test="startDate != null &amp;&amp; startDate != ''">
			and pg.visitTime &gt;= #{startDate,jdbcType=TIMESTAMP}
		</if>
		<if test="endDate != null &amp;&amp; endDate != ''">
			and
			unix_timestamp(date_add(#{endDate}, interval 1 day))
			>=unix_timestamp(pg.visitTime)
		</if>
		group by po.id,po.name) aa
		group by aa.visitNumber
		order by aa.visitNumber asc
	</select>
</mapper>