package persistence.receptionManage;

import domain.receptionManage.PensionAgentApply;
import domain.receptionManage.PensionAgentApplyExample;

import java.util.Date;
import java.util.List;
import org.apache.ibatis.annotations.Param;

import service.receptionManage.AgentApplyDomain;

public interface PensionAgentApplyMapper {

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_agent_apply
	 * @mbggenerated  Mon Mar 10 18:05:52 CST 2014
	 */
	int countByExample(PensionAgentApplyExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_agent_apply
	 * @mbggenerated  Mon Mar 10 18:05:52 CST 2014
	 */
	int deleteByExample(PensionAgentApplyExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_agent_apply
	 * @mbggenerated  Mon Mar 10 18:05:52 CST 2014
	 */
	int deleteByPrimaryKey(Long id);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_agent_apply
	 * @mbggenerated  Mon Mar 10 18:05:52 CST 2014
	 */
	int insert(PensionAgentApply record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_agent_apply
	 * @mbggenerated  Mon Mar 10 18:05:52 CST 2014
	 */
	int insertSelective(PensionAgentApply record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_agent_apply
	 * @mbggenerated  Mon Mar 10 18:05:52 CST 2014
	 */
	List<PensionAgentApply> selectByExample(PensionAgentApplyExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_agent_apply
	 * @mbggenerated  Mon Mar 10 18:05:52 CST 2014
	 */
	PensionAgentApply selectByPrimaryKey(Long id);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_agent_apply
	 * @mbggenerated  Mon Mar 10 18:05:52 CST 2014
	 */
	int updateByExampleSelective(@Param("record") PensionAgentApply record,
			@Param("example") PensionAgentApplyExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_agent_apply
	 * @mbggenerated  Mon Mar 10 18:05:52 CST 2014
	 */
	int updateByExample(@Param("record") PensionAgentApply record,
			@Param("example") PensionAgentApplyExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_agent_apply
	 * @mbggenerated  Mon Mar 10 18:05:52 CST 2014
	 */
	int updateByPrimaryKeySelective(PensionAgentApply record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_agent_apply
	 * @mbggenerated  Mon Mar 10 18:05:52 CST 2014
	 */
	int updateByPrimaryKey(PensionAgentApply record);

	/**
	 * 代办申请查询
	 * 
	 * @param olderId
	 * @param isAudit
	 * @param auditResult
	 * @param isComplete
	 * @return
	 */
	List<AgentApplyDomain> selectApplications(@Param("olderId") Long olderId,
			@Param("isAudit") String isAudit,
			@Param("auditResult") String auditResult,
			@Param("isComplete") String isComplete,
			@Param("applyId") Long applyId, @Param("startDate") Date startDate,
			@Param("endDate") Date endDate);

	/**
	 * 代办评估查询
	 * 
	 * @param olderId
	 * @param isAudit
	 * @param auditResult
	 * @return
	 */
	List<PensionAgentApply> selectEvaluations(@Param("olderId") Long olderId,
			@Param("isAudit") String isAudit,
			@Param("auditResult") String auditResult,
			@Param("applyId") Long applyId, @Param("startDate") Date startDate,
			@Param("endDate") Date endDate);

	/**
	 * 查询某一用户的处理代办服务列表
	 * 
	 * @param olderId
	 * @param startDate
	 * @param endDate
	 * @return
	 */
	List<PensionAgentApply> selectAgentConfirmList(
			@Param("olderId") Long olderId, @Param("startDate") Date startDate,
			@Param("endDate") Date endDate, @Param("userId") Long userId,
			@Param("applyId") Long applyId);
}