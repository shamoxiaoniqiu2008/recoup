package persistence.configureManage;

import domain.configureManage.PensionBuilding;
import domain.configureManage.PensionBuildingExample;

import java.util.Date;
import java.util.List;
import org.apache.ibatis.annotations.Param;

public interface PensionBuildingMapper {

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_building
	 * @mbggenerated  Tue Apr 29 17:02:36 CST 2014
	 */
	int countByExample(PensionBuildingExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_building
	 * @mbggenerated  Tue Apr 29 17:02:36 CST 2014
	 */
	int deleteByExample(PensionBuildingExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_building
	 * @mbggenerated  Tue Apr 29 17:02:36 CST 2014
	 */
	int deleteByPrimaryKey(Long id);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_building
	 * @mbggenerated  Tue Apr 29 17:02:36 CST 2014
	 */
	int insert(PensionBuilding record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_building
	 * @mbggenerated  Tue Apr 29 17:02:36 CST 2014
	 */
	int insertSelective(PensionBuilding record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_building
	 * @mbggenerated  Tue Apr 29 17:02:36 CST 2014
	 */
	List<PensionBuilding> selectByExample(PensionBuildingExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_building
	 * @mbggenerated  Tue Apr 29 17:02:36 CST 2014
	 */
	PensionBuilding selectByPrimaryKey(Long id);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_building
	 * @mbggenerated  Tue Apr 29 17:02:36 CST 2014
	 */
	int updateByExampleSelective(@Param("record") PensionBuilding record,
			@Param("example") PensionBuildingExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_building
	 * @mbggenerated  Tue Apr 29 17:02:36 CST 2014
	 */
	int updateByExample(@Param("record") PensionBuilding record,
			@Param("example") PensionBuildingExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_building
	 * @mbggenerated  Tue Apr 29 17:02:36 CST 2014
	 */
	int updateByPrimaryKeySelective(PensionBuilding record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_building
	 * @mbggenerated  Tue Apr 29 17:02:36 CST 2014
	 */
	int updateByPrimaryKey(PensionBuilding record);

	List<PensionBuilding> selectOlderLiquidityByDate(@Param("date")Date date);

	/**
	 * 根据开始结束日期查询资金流动情况
	 * @param startDate 开始日期
	 * @param endDate 结束日期
	 * @param itemPurseId 缴费项目编号
	 * @param refundTypeId 退费类型编号
	 * @param payFlag 缴费/欠费
	 * @param source 临时缴费来源--1-价表中的临时收费 2-菜品收费
	 * @return
	 */
	List<PensionBuilding> selectCapitalFlowByDetail(@Param("startDate")Date startDate,
			@Param("endDate")Date endDate, 
			@Param("itemPurseId")Long itemPurseId, 
			@Param("refundTypeId")Long refundTypeId,
			@Param("payFlag")Integer payFlag, 
			@Param("source")Integer source);//

	/**
	 * 根据开始结束日期查询资金流动情况
	 * @param startDate
	 * @param endDate
	 * @param paywayId 支付方式编号
	 * @return
	 */
	List<PensionBuilding> selectCapitalFlowByPayway(@Param("startDate")Date startDate, @Param("endDate")Date endDate,
			@Param("paywayId")Long paywayId);

	/**
	 * 根据开始结束日期查询在院老人数
	 * @param startDate
	 * @param endDate
	 * @param paywayId 支付方式编号
	 * @return
	 */
	List<PensionBuilding> selectInOlderNumInPeriod(@Param("startDate")Date startDate, @Param("endDate")Date endDate);
	/**
	 * 按照菜品编号查询临时缴费
	 * @param startDate 开始日期
	 * @param endDate 结束日期
	 * @param itemPurseId 缴费项目编号
	 * @param refundTypeId 退费类型编号
	 * @param payFlag 缴费/欠费
	 * @param source 临时缴费来源--1-价表中的临时收费 2-菜品收费
	 * @return
	 */
	List<PensionBuilding> selectCapitalFlowByFoodMenu(@Param("startDate")Date startDate,
			@Param("endDate")Date endDate, 
			@Param("itemPurseId")Long itemPurseId, 
			@Param("refundTypeId")Long refundTypeId,
			@Param("payFlag")Integer payFlag, 
			@Param("source")Integer source);

	/**
	 * 根据起止时间和支付方式查询日常缴费信息表 ，查询以该支付方式的缴费金额
	 * @param startDate
	 * @param endDate
	 * @param paywayId
	 * @return
	 */
	List<PensionBuilding> selectNormalCapitalFlowByPayway(@Param("startDate")Date startDate, @Param("endDate")Date endDate,
			@Param("paywayId")Long paywayId);

	/**
	 * 根据起止时间和支付方式查询临时缴费信息表 ，查询以该支付方式的缴费金额
	 * @param startDate
	 * @param endDate
	 * @param paywayId
	 * @return
	 */
	List<PensionBuilding> selectTempCapitalFlowByPayway(@Param("startDate")Date startDate, @Param("endDate")Date endDate,
			@Param("paywayId")Long paywayId);

	/**
	 * 根据起止时间和支付方式查询押金缴费信息表 ，查询以该支付方式的缴费金额
	 * @param startDate
	 * @param endDate
	 * @param paywayId
	 * @return
	 */
	List<PensionBuilding> selectDepositCapitalFlowByPayway(@Param("startDate")Date startDate, @Param("endDate")Date endDate,
			@Param("paywayId")Long paywayId);

	/**
	 * 根据开始结束日期查询日常缴费退费相关
	 * @param startDate 开始日期
	 * @param endDate 结束日期
	 * @param refundTypeId 退费类型编号
	 * @return
	 */
	List<PensionBuilding> selectNormalCapitalFlowForRefund(@Param("startDate")Date startDate,
			@Param("endDate")Date endDate, 
			@Param("refundTypeId")Long refundTypeId);
	/**
	 * 根据开始结束日期查询临时缴费退费相关
	 * @param startDate 开始日期
	 * @param endDate 结束日期
	 * @param refundTypeId 退费类型编号
	 * @return
	 */
	List<PensionBuilding> selectTempCapitalFlowForRefund(@Param("startDate")Date startDate,
			@Param("endDate")Date endDate, 
			@Param("refundTypeId")Long refundTypeId);
	
	/**
	 * 按起止时间查找在院老人数 （总数量）
	 * @param date
	 * @return
	 */
	int selectOlderLiquidityByDateInTotal(@Param("date")Date date);
}