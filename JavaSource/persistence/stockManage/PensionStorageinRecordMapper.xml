<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="persistence.stockManage.PensionStorageinRecordMapper">
	<resultMap id="BaseResultMap" type="domain.stockManage.PensionStorageinRecord">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Tue Nov 26 
			16:10:30 CST 2013. -->
		<id column="id" jdbcType="INTEGER" property="id" />
		<result column="storagein_no" jdbcType="VARCHAR" property="storageinNo" />
		<result column="storagein_time" jdbcType="TIMESTAMP" property="storageinTime" />
		<result column="operator_id" jdbcType="INTEGER" property="operatorId" />
		<result column="storagein_type" jdbcType="INTEGER" property="storageinType" />
		<result column="bankFlag" jdbcType="INTEGER" property="bankflag" />
		<result column="cleared" jdbcType="INTEGER" property="cleared" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Tue Nov 26 
			16:10:30 CST 2013. -->
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
                </when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
                </when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
                </when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
                  </foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Tue Nov 26 
			16:10:30 CST 2013. -->
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
                </when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
                </when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
                </when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
                  </foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Tue Nov 26 
			16:10:30 CST 2013. -->
		id, storagein_no, storagein_time, operator_id, storagein_type,
		bankFlag, cleared
	</sql>
	<select id="selectByExample" parameterType="domain.stockManage.PensionStorageinRecordExample"
		resultMap="BaseResultMap">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Tue Nov 26 
			16:10:30 CST 2013. -->
		select
		<if test="distinct">
			distinct
    </if>
		<include refid="Base_Column_List" />
		from pension_storagein_record
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
    </if>
	</select>
	<select id="selectByPrimaryKey" parameterType="java.lang.Long"
		resultMap="BaseResultMap">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Tue Nov 26 
			16:10:30 CST 2013. -->
		select
		<include refid="Base_Column_List" />
		from pension_storagein_record
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Tue Nov 26 
			16:10:30 CST 2013. -->
		delete from pension_storagein_record
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample" parameterType="domain.stockManage.PensionStorageinRecordExample">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Tue Nov 26 
			16:10:30 CST 2013. -->
		delete from pension_storagein_record
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="domain.stockManage.PensionStorageinRecord">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Tue Nov 26 
			16:10:30 CST 2013. -->
		insert into pension_storagein_record (id, storagein_no,
		storagein_time,
		operator_id, storagein_type, bankFlag,
		cleared)
		values (#{id,jdbcType=INTEGER}, #{storageinNo,jdbcType=VARCHAR},
		#{storageinTime,jdbcType=TIMESTAMP},
		#{operatorId,jdbcType=INTEGER}, #{storageinType,jdbcType=INTEGER}, #{bankflag,jdbcType=INTEGER},
		#{cleared,jdbcType=INTEGER})
	</insert>
	<insert id="insertSelective" keyProperty="id"
		parameterType="domain.stockManage.PensionStorageinRecord"
		useGeneratedKeys="true">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Tue Nov 26 
			16:10:30 CST 2013. -->
		insert into pension_storagein_record
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
      </if>
			<if test="storageinNo != null">
				storagein_no,
      </if>
			<if test="storageinTime != null">
				storagein_time,
      </if>
			<if test="operatorId != null">
				operator_id,
      </if>
			<if test="storageinType != null">
				storagein_type,
      </if>
			<if test="bankflag != null">
				bankFlag,
      </if>
			<if test="cleared != null">
				cleared,
      </if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
      </if>
			<if test="storageinNo != null">
				#{storageinNo,jdbcType=VARCHAR},
      </if>
			<if test="storageinTime != null">
				#{storageinTime,jdbcType=TIMESTAMP},
      </if>
			<if test="operatorId != null">
				#{operatorId,jdbcType=INTEGER},
      </if>
			<if test="storageinType != null">
				#{storageinType,jdbcType=INTEGER},
      </if>
			<if test="bankflag != null">
				#{bankflag,jdbcType=INTEGER},
      </if>
			<if test="cleared != null">
				#{cleared,jdbcType=INTEGER},
      </if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="domain.stockManage.PensionStorageinRecordExample"
		resultType="java.lang.Integer">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Tue Nov 26 
			16:10:30 CST 2013. -->
		select count(*) from pension_storagein_record
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Tue Nov 26 
			16:10:30 CST 2013. -->
		update pension_storagein_record
		<set>
			<if test="record.id != null">
				id = #{record.id,jdbcType=INTEGER},
      </if>
			<if test="record.storageinNo != null">
				storagein_no = #{record.storageinNo,jdbcType=VARCHAR},
      </if>
			<if test="record.storageinTime != null">
				storagein_time = #{record.storageinTime,jdbcType=TIMESTAMP},
      </if>
			<if test="record.operatorId != null">
				operator_id = #{record.operatorId,jdbcType=INTEGER},
      </if>
			<if test="record.storageinType != null">
				storagein_type = #{record.storageinType,jdbcType=INTEGER},
      </if>
			<if test="record.bankflag != null">
				bankFlag = #{record.bankflag,jdbcType=INTEGER},
      </if>
			<if test="record.cleared != null">
				cleared = #{record.cleared,jdbcType=INTEGER},
      </if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Tue Nov 26 
			16:10:30 CST 2013. -->
		update pension_storagein_record
		set id = #{record.id,jdbcType=INTEGER},
		storagein_no = #{record.storageinNo,jdbcType=VARCHAR},
		storagein_time = #{record.storageinTime,jdbcType=TIMESTAMP},
		operator_id = #{record.operatorId,jdbcType=INTEGER},
		storagein_type = #{record.storageinType,jdbcType=INTEGER},
		bankFlag = #{record.bankflag,jdbcType=INTEGER},
		cleared = #{record.cleared,jdbcType=INTEGER}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="domain.stockManage.PensionStorageinRecord">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Tue Nov 26 
			16:10:30 CST 2013. -->
		update pension_storagein_record
		<set>
			<if test="storageinNo != null">
				storagein_no = #{storageinNo,jdbcType=VARCHAR},
      </if>
			<if test="storageinTime != null">
				storagein_time = #{storageinTime,jdbcType=TIMESTAMP},
      </if>
			<if test="operatorId != null">
				operator_id = #{operatorId,jdbcType=INTEGER},
      </if>
			<if test="storageinType != null">
				storagein_type = #{storageinType,jdbcType=INTEGER},
      </if>
			<if test="bankflag != null">
				bankFlag = #{bankflag,jdbcType=INTEGER},
      </if>
			<if test="cleared != null">
				cleared = #{cleared,jdbcType=INTEGER},
      </if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="domain.stockManage.PensionStorageinRecord">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Tue Nov 26 
			16:10:30 CST 2013. -->
		update pension_storagein_record
		set storagein_no = #{storageinNo,jdbcType=VARCHAR},
		storagein_time = #{storageinTime,jdbcType=TIMESTAMP},
		operator_id = #{operatorId,jdbcType=INTEGER},
		storagein_type = #{storageinType,jdbcType=INTEGER},
		bankFlag = #{bankflag,jdbcType=INTEGER},
		cleared = #{cleared,jdbcType=INTEGER}
		where id = #{id,jdbcType=INTEGER}
	</update>

	<select id="selectStorageinRecord" parameterType="map"
		resultType="service.stockManage.StorageInRecordDomain">
		select
		psr.id,
		psr.storagein_no as storageinNo,
		psr.storagein_time as
		storageinTime,
		pe.name as operatorName,
		psr.bankFlag as bankflag,
		sum(pd.in_qty*pd.purchase_price) as totalMoney,
		psr.storagein_type as
		storageinType,
		case psr.storagein_type
		when 1
		then '正常入库'
		when 2 then
		'盈余入库'
		when 3 then '调拨入库'
		else '其他入库' end as
		storageinTypeName
		from
		pension_storagein_record psr,
		pension_employee pe,
		pension_storagein_detail pd
		where
		pe.id=psr.operator_id
		and psr.id=pd.record_id
		and psr.cleared=2
		<if test="startDate!=null">
			and psr.storagein_time
			&gt;=#{startDate,jdbcType=TIMESTAMP}
		</if>
		<if test="endDate!=null">
			and psr.storagein_time &lt;=date_add(#{endDate}, interval
			1 day)
		</if>
		group by psr.id,
		psr.storagein_no,
		psr.storagein_time,
		pe.name,
		psr.bankFlag,
		psr.storagein_type
	</select>
</mapper>