<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="persistence.stockManage.PensionStorageoutRecordMapper">
	<resultMap id="BaseResultMap" type="domain.stockManage.PensionStorageoutRecord">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Tue Nov 26 
			19:02:42 CST 2013. -->
		<id column="id" jdbcType="INTEGER" property="id" />
		<result column="storageout_no" jdbcType="VARCHAR" property="storageoutNo" />
		<result column="storageout_time" jdbcType="TIMESTAMP" property="storageoutTime" />
		<result column="operator_id" jdbcType="INTEGER" property="operatorId" />
		<result column="storageout_type" jdbcType="INTEGER" property="storageoutType" />
		<result column="bank_flag" jdbcType="INTEGER" property="bankFlag" />
		<result column="cleared" jdbcType="INTEGER" property="cleared" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Tue Nov 26 
			19:02:42 CST 2013. -->
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
                </when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
                </when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
                  </foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Tue Nov 26 
			19:02:42 CST 2013. -->
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
                </when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
                </when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
                  </foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Tue Nov 26 
			19:02:42 CST 2013. -->
		id, storageout_no, storageout_time, operator_id, storageout_type,
		bank_flag, cleared
	</sql>
	<select id="selectByExample" parameterType="domain.stockManage.PensionStorageoutRecordExample"
		resultMap="BaseResultMap">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Tue Nov 26 
			19:02:42 CST 2013. -->
		select
		<if test="distinct">
			distinct
    </if>
		<include refid="Base_Column_List" />
		from pension_storageout_record
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
    </if>
	</select>
	<select id="selectByPrimaryKey" parameterType="java.lang.Long"
		resultMap="BaseResultMap">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Tue Nov 26 
			19:02:42 CST 2013. -->
		select
		<include refid="Base_Column_List" />
		from pension_storageout_record
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Tue Nov 26 
			19:02:42 CST 2013. -->
		delete from pension_storageout_record
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample" parameterType="domain.stockManage.PensionStorageoutRecordExample">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Tue Nov 26 
			19:02:42 CST 2013. -->
		delete from pension_storageout_record
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="domain.stockManage.PensionStorageoutRecord">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Tue Nov 26 
			19:02:42 CST 2013. -->
		insert into pension_storageout_record (id, storageout_no,
		storageout_time,
		operator_id, storageout_type, bank_flag,
		cleared)
		values (#{id,jdbcType=INTEGER}, #{storageoutNo,jdbcType=VARCHAR},
		#{storageoutTime,jdbcType=TIMESTAMP},
		#{operatorId,jdbcType=INTEGER},
		#{storageoutType,jdbcType=INTEGER}, #{bankFlag,jdbcType=INTEGER},
		#{cleared,jdbcType=INTEGER})
	</insert>
	<insert id="insertSelective" keyProperty="id"
		parameterType="domain.stockManage.PensionStorageoutRecord"
		useGeneratedKeys="true">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Tue Nov 26 
			19:02:42 CST 2013. -->
		insert into pension_storageout_record
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
      </if>
			<if test="storageoutNo != null">
				storageout_no,
      </if>
			<if test="storageoutTime != null">
				storageout_time,
      </if>
			<if test="operatorId != null">
				operator_id,
      </if>
			<if test="storageoutType != null">
				storageout_type,
      </if>
			<if test="bankFlag != null">
				bank_flag,
      </if>
			<if test="cleared != null">
				cleared,
      </if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
      </if>
			<if test="storageoutNo != null">
				#{storageoutNo,jdbcType=VARCHAR},
      </if>
			<if test="storageoutTime != null">
				#{storageoutTime,jdbcType=TIMESTAMP},
      </if>
			<if test="operatorId != null">
				#{operatorId,jdbcType=INTEGER},
      </if>
			<if test="storageoutType != null">
				#{storageoutType,jdbcType=INTEGER},
      </if>
			<if test="bankFlag != null">
				#{bankFlag,jdbcType=INTEGER},
      </if>
			<if test="cleared != null">
				#{cleared,jdbcType=INTEGER},
      </if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="domain.stockManage.PensionStorageoutRecordExample"
		resultType="java.lang.Integer">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Tue Nov 26 
			19:02:42 CST 2013. -->
		select count(*) from pension_storageout_record
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Tue Nov 26 
			19:02:42 CST 2013. -->
		update pension_storageout_record
		<set>
			<if test="record.id != null">
				id = #{record.id,jdbcType=INTEGER},
      </if>
			<if test="record.storageoutNo != null">
				storageout_no = #{record.storageoutNo,jdbcType=VARCHAR},
			</if>
			<if test="record.storageoutTime != null">
				storageout_time =
				#{record.storageoutTime,jdbcType=TIMESTAMP},
      </if>
			<if test="record.operatorId != null">
				operator_id = #{record.operatorId,jdbcType=INTEGER},
      </if>
			<if test="record.storageoutType != null">
				storageout_type =
				#{record.storageoutType,jdbcType=INTEGER},
      </if>
			<if test="record.bankFlag != null">
				bank_flag = #{record.bankFlag,jdbcType=INTEGER},
      </if>
			<if test="record.cleared != null">
				cleared = #{record.cleared,jdbcType=INTEGER},
      </if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Tue Nov 26 
			19:02:42 CST 2013. -->
		update pension_storageout_record
		set id =
		#{record.id,jdbcType=INTEGER},
		storageout_no =
		#{record.storageoutNo,jdbcType=VARCHAR},
		storageout_time =
		#{record.storageoutTime,jdbcType=TIMESTAMP},
		operator_id =
		#{record.operatorId,jdbcType=INTEGER},
		storageout_type =
		#{record.storageoutType,jdbcType=INTEGER},
		bank_flag =
		#{record.bankFlag,jdbcType=INTEGER},
		cleared =
		#{record.cleared,jdbcType=INTEGER}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="domain.stockManage.PensionStorageoutRecord">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Tue Nov 26 
			19:02:42 CST 2013. -->
		update pension_storageout_record
		<set>
			<if test="storageoutNo != null">
				storageout_no = #{storageoutNo,jdbcType=VARCHAR},
      </if>
			<if test="storageoutTime != null">
				storageout_time = #{storageoutTime,jdbcType=TIMESTAMP},
			</if>
			<if test="operatorId != null">
				operator_id = #{operatorId,jdbcType=INTEGER},
      </if>
			<if test="storageoutType != null">
				storageout_type = #{storageoutType,jdbcType=INTEGER},
			</if>
			<if test="bankFlag != null">
				bank_flag = #{bankFlag,jdbcType=INTEGER},
      </if>
			<if test="cleared != null">
				cleared = #{cleared,jdbcType=INTEGER},
      </if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="domain.stockManage.PensionStorageoutRecord">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Tue Nov 26 
			19:02:42 CST 2013. -->
		update pension_storageout_record
		set storageout_no =
		#{storageoutNo,jdbcType=VARCHAR},
		storageout_time =
		#{storageoutTime,jdbcType=TIMESTAMP},
		operator_id =
		#{operatorId,jdbcType=INTEGER},
		storageout_type =
		#{storageoutType,jdbcType=INTEGER},
		bank_flag =
		#{bankFlag,jdbcType=INTEGER},
		cleared = #{cleared,jdbcType=INTEGER}
		where id = #{id,jdbcType=INTEGER}
	</update>

	<select id="selectStorageOutRecord" parameterType="map"
		resultType="service.stockManage.StorageOutRecordDomain">
		select
		pr.id,
		pr.storageout_no as storageoutNo,
		pr.storageout_time as
		storageoutTime,
		pe.name as operatorName,
		pr.bank_flag as bankFlag,
		pr.storageout_type as
		storageoutType,
		case pr.storageout_type
		when 1 then
		'正常出库'
		else '盘盈出库' end as storageoutTypeName,
		sum(pd.out_qty*pd.purchase_price) as totalMOney
		from
		pension_storageout_record pr,
		pension_storageout_detail pd,
		pension_employee pe
		where
		pe.id=pr.operator_id
		and pd.record_id=pr.id
		and
		pr.cleared=2
		<if test="startDate!=null">
			and pr.storageout_time
			&gt;=#{startDate,jdbcType=TIMESTAMP}
		</if>
		<if test="endDate!=null">
			and pr.storageout_time &lt;=date_add(#{endDate}, interval
			1 day)
		</if>
		group by pr.id,
		pr.storageout_no,
		pr.storageout_time,
		pe.name,
		pr.storageout_type,
		pr.storageout_type
	</select>

	<select id="selectTotalMoney" resultType="java.lang.Float"
		parameterType="map">
		select sum(pd.out_qty*pd.purchase_price) as totalMoney
		from pension_storageout_detail pd,
		pension_storageout_record pr
		where
		pd.cleared=2
		and pr.cleared=2
		and pr.id=pd.record_id
		and
		pr.storageout_time &gt;=#{startDate,jdbcType=TIMESTAMP}
		and pr.storageout_time &lt;date_add(#{endDate}, interval
		1 day)
	</select>
</mapper>