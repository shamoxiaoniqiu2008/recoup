<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="persistence.stockManage.PensionStorageMapper">
  <resultMap id="BaseResultMap" type="domain.stockManage.PensionStorage">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Mar 13 09:07:00 CST 2014.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="type_id" jdbcType="INTEGER" property="typeId" />
    <result column="item_id" jdbcType="INTEGER" property="itemId" />
    <result column="item_name" jdbcType="VARCHAR" property="itemName" />
    <result column="storage_qty" jdbcType="REAL" property="storageQty" />
    <result column="expire_date" jdbcType="TIMESTAMP" property="expireDate" />
    <result column="purchase_price" jdbcType="REAL" property="purchasePrice" />
    <result column="unit" jdbcType="VARCHAR" property="unit" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Mar 13 09:07:00 CST 2014.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Mar 13 09:07:00 CST 2014.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Mar 13 09:07:00 CST 2014.
    -->
    id, type_id, item_id, item_name, storage_qty, expire_date, purchase_price, unit
  </sql>
  <select id="selectByExample" parameterType="domain.stockManage.PensionStorageExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Mar 13 09:07:00 CST 2014.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from pension_storage
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Mar 13 09:07:00 CST 2014.
    -->
    select 
    <include refid="Base_Column_List" />
    from pension_storage
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Mar 13 09:07:00 CST 2014.
    -->
    delete from pension_storage
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="domain.stockManage.PensionStorageExample">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Mar 13 09:07:00 CST 2014.
    -->
    delete from pension_storage
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="domain.stockManage.PensionStorage">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Mar 13 09:07:00 CST 2014.
    -->
    insert into pension_storage (id, type_id, item_id, 
      item_name, storage_qty, expire_date, 
      purchase_price, unit)
    values (#{id,jdbcType=INTEGER}, #{typeId,jdbcType=INTEGER}, #{itemId,jdbcType=INTEGER}, 
      #{itemName,jdbcType=VARCHAR}, #{storageQty,jdbcType=REAL}, #{expireDate,jdbcType=TIMESTAMP}, 
      #{purchasePrice,jdbcType=REAL}, #{unit,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" keyProperty="id" parameterType="domain.stockManage.PensionStorage" useGeneratedKeys="true">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Mar 13 09:07:00 CST 2014.
    -->
    insert into pension_storage
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="typeId != null">
        type_id,
      </if>
      <if test="itemId != null">
        item_id,
      </if>
      <if test="itemName != null">
        item_name,
      </if>
      <if test="storageQty != null">
        storage_qty,
      </if>
      <if test="expireDate != null">
        expire_date,
      </if>
      <if test="purchasePrice != null">
        purchase_price,
      </if>
      <if test="unit != null">
        unit,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="typeId != null">
        #{typeId,jdbcType=INTEGER},
      </if>
      <if test="itemId != null">
        #{itemId,jdbcType=INTEGER},
      </if>
      <if test="itemName != null">
        #{itemName,jdbcType=VARCHAR},
      </if>
      <if test="storageQty != null">
        #{storageQty,jdbcType=REAL},
      </if>
      <if test="expireDate != null">
        #{expireDate,jdbcType=TIMESTAMP},
      </if>
      <if test="purchasePrice != null">
        #{purchasePrice,jdbcType=REAL},
      </if>
      <if test="unit != null">
        #{unit,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="domain.stockManage.PensionStorageExample" resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Mar 13 09:07:00 CST 2014.
    -->
    select count(*) from pension_storage
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Mar 13 09:07:00 CST 2014.
    -->
    update pension_storage
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.typeId != null">
        type_id = #{record.typeId,jdbcType=INTEGER},
      </if>
      <if test="record.itemId != null">
        item_id = #{record.itemId,jdbcType=INTEGER},
      </if>
      <if test="record.itemName != null">
        item_name = #{record.itemName,jdbcType=VARCHAR},
      </if>
      <if test="record.storageQty != null">
        storage_qty = #{record.storageQty,jdbcType=REAL},
      </if>
      <if test="record.expireDate != null">
        expire_date = #{record.expireDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.purchasePrice != null">
        purchase_price = #{record.purchasePrice,jdbcType=REAL},
      </if>
      <if test="record.unit != null">
        unit = #{record.unit,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Mar 13 09:07:00 CST 2014.
    -->
    update pension_storage
    set id = #{record.id,jdbcType=INTEGER},
      type_id = #{record.typeId,jdbcType=INTEGER},
      item_id = #{record.itemId,jdbcType=INTEGER},
      item_name = #{record.itemName,jdbcType=VARCHAR},
      storage_qty = #{record.storageQty,jdbcType=REAL},
      expire_date = #{record.expireDate,jdbcType=TIMESTAMP},
      purchase_price = #{record.purchasePrice,jdbcType=REAL},
      unit = #{record.unit,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="domain.stockManage.PensionStorage">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Mar 13 09:07:00 CST 2014.
    -->
    update pension_storage
    <set>
      <if test="typeId != null">
        type_id = #{typeId,jdbcType=INTEGER},
      </if>
      <if test="itemId != null">
        item_id = #{itemId,jdbcType=INTEGER},
      </if>
      <if test="itemName != null">
        item_name = #{itemName,jdbcType=VARCHAR},
      </if>
      <if test="storageQty != null">
        storage_qty = #{storageQty,jdbcType=REAL},
      </if>
      <if test="expireDate != null">
        expire_date = #{expireDate,jdbcType=TIMESTAMP},
      </if>
      <if test="purchasePrice != null">
        purchase_price = #{purchasePrice,jdbcType=REAL},
      </if>
      <if test="unit != null">
        unit = #{unit,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="domain.stockManage.PensionStorage">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Mar 13 09:07:00 CST 2014.
    -->
    update pension_storage
    set type_id = #{typeId,jdbcType=INTEGER},
      item_id = #{itemId,jdbcType=INTEGER},
      item_name = #{itemName,jdbcType=VARCHAR},
      storage_qty = #{storageQty,jdbcType=REAL},
      expire_date = #{expireDate,jdbcType=TIMESTAMP},
      purchase_price = #{purchasePrice,jdbcType=REAL},
      unit = #{unit,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <!-- add by justin.su 2013-12-03 查询库存数量（与价格无关）-->
  <select id="selectStorageQtyWithoutPrice" parameterType="map" resultType="Float">
  		select
			ps.storage_qty
		from
			pension_storage ps
		where
			ps.type_id = #{typeId}
		and
			ps.item_id = #{itemId}
  </select>
  
  <!-- add by justin.su 2013-12-03 查询库存数量（与价格有关）-->
  <select id="selectStorageQtyWithPrice" parameterType="map" resultType="Float">
    		select
			ps.storage_qty
		from
			pension_storage ps
		where
			ps.type_id = #{typeId}
		and
			ps.item_id = #{itemId}
		and
			ps.purchase_price = #{purchasePrice}
  </select>
  
  
  <!-- add by justin.su 2013-12-03 加库存不更新价格-->
  <update id="updateAddQtyWithoutPrice" parameterType="map">
  		update
			pension_storage ps
		set 
			ps.storage_qty = ps.storage_qty+#{storageQty}
		where
			ps.type_id = #{typeId}
		and
			ps.item_id = #{itemId}
  </update>
  <!-- add by justin.su 2013-12-03 加库存的同时更新价格-->
  <update id="updateAddQtyWithPrice" parameterType="map">
    		update
			pension_storage ps
		set 
			ps.storage_qty = ps.storage_qty+#{storageQty}
			,ps.purchase_price = #{purchasePrice}
		where
			ps.type_id = #{typeId}
		and
			ps.item_id = #{itemId}		
  </update>
  <!-- add by justin.su 2013-12-03 减库存不更新价格-->
  <update id="updateSubtractQtyWithoutPrice" parameterType="map">
  		update
			pension_storage ps
		set 
			ps.storage_qty = ps.storage_qty-#{storageQty}
		where
			ps.type_id = #{typeId}
		and
			ps.item_id = #{itemId}	
  </update>
  <!-- add by justin.su 2013-12-03 减库存的同时更新价格-->
    <update id="updateSubtractQtyWithPrice" parameterType="map">
  		update
			pension_storage ps
		set 
			ps.storage_qty = ps.storage_qty-#{storageQty}
			,ps.purchase_price = #{purchasePrice}
		where
			ps.type_id = #{typeId}
		and
			ps.item_id = #{itemId}
  </update>
  
  
</mapper>