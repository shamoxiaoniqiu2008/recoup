<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="persistence.dictionary.PensionDicAccidenttypeMapper">
  
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Nov 15 09:07:08 CST 2013.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Nov 15 09:07:08 CST 2013.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Nov 15 09:07:08 CST 2013.
    -->
    id, accidenttype_name, input_code, cleared, note, num
  </sql>
  <select id="selectByExample" parameterType="domain.dictionary.PensionDicAccidenttypeExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Nov 15 09:07:08 CST 2013.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from pension_dic_accidenttype
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Nov 15 09:07:08 CST 2013.
    -->
    select 
    <include refid="Base_Column_List" />
    from pension_dic_accidenttype
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Nov 15 09:07:08 CST 2013.
    -->
    delete from pension_dic_accidenttype
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="domain.dictionary.PensionDicAccidenttypeExample">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Nov 15 09:07:08 CST 2013.
    -->
    delete from pension_dic_accidenttype
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="domain.dictionary.PensionDicAccidenttype">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Nov 15 09:07:08 CST 2013.
    -->
    insert into pension_dic_accidenttype (id, accidenttype_name, input_code, 
      cleared, note, num)
    values (#{id,jdbcType=INTEGER}, #{accidenttypeName,jdbcType=VARCHAR}, #{inputCode,jdbcType=VARCHAR}, 
      #{cleared,jdbcType=INTEGER}, #{note,jdbcType=VARCHAR}, #{num,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" keyProperty="id" parameterType="domain.dictionary.PensionDicAccidenttype" useGeneratedKeys="true">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Nov 15 09:07:08 CST 2013.
    -->
    insert into pension_dic_accidenttype
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="accidenttypeName != null">
        accidenttype_name,
      </if>
      <if test="inputCode != null">
        input_code,
      </if>
      <if test="cleared != null">
        cleared,
      </if>
      <if test="note != null">
        note,
      </if>
      <if test="num != null">
        num,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="accidenttypeName != null">
        #{accidenttypeName,jdbcType=VARCHAR},
      </if>
      <if test="inputCode != null">
        #{inputCode,jdbcType=VARCHAR},
      </if>
      <if test="cleared != null">
        #{cleared,jdbcType=INTEGER},
      </if>
      <if test="note != null">
        #{note,jdbcType=VARCHAR},
      </if>
      <if test="num != null">
        #{num,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="domain.dictionary.PensionDicAccidenttypeExample" resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Nov 15 09:07:08 CST 2013.
    -->
    select count(*) from pension_dic_accidenttype
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Nov 15 09:07:08 CST 2013.
    -->
    update pension_dic_accidenttype
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.accidenttypeName != null">
        accidenttype_name = #{record.accidenttypeName,jdbcType=VARCHAR},
      </if>
      <if test="record.inputCode != null">
        input_code = #{record.inputCode,jdbcType=VARCHAR},
      </if>
      <if test="record.cleared != null">
        cleared = #{record.cleared,jdbcType=INTEGER},
      </if>
      <if test="record.note != null">
        note = #{record.note,jdbcType=VARCHAR},
      </if>
      <if test="record.num != null">
        num = #{record.num,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Nov 15 09:07:08 CST 2013.
    -->
    update pension_dic_accidenttype
    set id = #{record.id,jdbcType=INTEGER},
      accidenttype_name = #{record.accidenttypeName,jdbcType=VARCHAR},
      input_code = #{record.inputCode,jdbcType=VARCHAR},
      cleared = #{record.cleared,jdbcType=INTEGER},
      note = #{record.note,jdbcType=VARCHAR},
      num = #{record.num,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="domain.dictionary.PensionDicAccidenttype">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Nov 15 09:07:08 CST 2013.
    -->
    update pension_dic_accidenttype
    <set>
      <if test="accidenttypeName != null">
        accidenttype_name = #{accidenttypeName,jdbcType=VARCHAR},
      </if>
      <if test="inputCode != null">
        input_code = #{inputCode,jdbcType=VARCHAR},
      </if>
      <if test="cleared != null">
        cleared = #{cleared,jdbcType=INTEGER},
      </if>
      <if test="note != null">
        note = #{note,jdbcType=VARCHAR},
      </if>
      <if test="num != null">
        num = #{num,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="domain.dictionary.PensionDicAccidenttype">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Nov 15 09:07:08 CST 2013.
    -->
    update pension_dic_accidenttype
    set accidenttype_name = #{accidenttypeName,jdbcType=VARCHAR},
      input_code = #{inputCode,jdbcType=VARCHAR},
      cleared = #{cleared,jdbcType=INTEGER},
      note = #{note,jdbcType=VARCHAR},
      num = #{num,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="domain.dictionary.PensionDicAccidenttype">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Nov 15 09:07:08 CST 2013.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="accidenttype_name" jdbcType="VARCHAR" property="accidenttypeName" />
    <result column="input_code" jdbcType="VARCHAR" property="inputCode" />
    <result column="cleared" jdbcType="INTEGER" property="cleared" />
    <result column="note" jdbcType="VARCHAR" property="note" />
    <result column="num" jdbcType="INTEGER" property="num" />
  </resultMap>
  
  <!-- 生成起止日期内 每种事故类型的老人数量 -->
    <select id="selectDicAccidentTypes" parameterType="java.util.Map" resultMap="BaseResultMap">
(
SELECT pda.id AS id,
 pda.accidenttype_name AS accidenttype_name,
 pda.input_code AS input_code,
 pda.cleared AS cleared,
 pda.note AS note, COUNT(pda.id) AS num
FROM pension_accident_record par
INNER JOIN pension_dic_accidenttype pda ON par.accidenttype_id = pda.id
WHERE par.cleared = 2 AND pda.cleared = 2
and unix_timestamp(par.accident_time) &gt;= unix_timestamp(#{startDate} )
and unix_timestamp(date_add(#{endDate} , interval 1 day)) &gt; unix_timestamp(par.accident_time)
GROUP BY pda.id) UNION
	(
SELECT b.id AS id,
 b.accidenttype_name AS accidenttype_name,
 b.input_code AS input_code,
 b.cleared AS cleared,
 b.note AS note,
 0 AS num
FROM pension_dic_accidenttype b
WHERE b.id NOT IN(
SELECT pda.id AS id
FROM pension_accident_record par
INNER JOIN pension_dic_accidenttype pda ON par.accidenttype_id = pda.id
WHERE par.cleared = 2 AND pda.cleared = 2
and unix_timestamp(par.accident_time) &gt;= unix_timestamp(#{startDate} ) 
and unix_timestamp(date_add(#{endDate}, interval 1 day)) &gt; unix_timestamp(par.accident_time)
GROUP BY pda.id
	) 
	)
ORDER BY id
    </select>
</mapper>