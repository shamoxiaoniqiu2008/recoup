<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="persistence.dictionary.PensionDicPaywayMapper">
  <resultMap id="BaseResultMap" type="domain.dictionary.PensionDicPayway">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Dec 09 09:26:38 CST 2013.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="payway_name" jdbcType="VARCHAR" property="paywayName" />
    <result column="input_code" jdbcType="VARCHAR" property="inputCode" />
    <result column="payway_mark" jdbcType="VARCHAR" property="paywayMark" />
    <result column="cleared" jdbcType="INTEGER" property="cleared" />
    <result column="note" jdbcType="VARCHAR" property="note" />
    <result column="fee" jdbcType="REAL" property="fee" />
    <result column="pay_fee" jdbcType="VARCHAR" property="payFee" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Dec 09 09:26:38 CST 2013.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Dec 09 09:26:38 CST 2013.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Dec 09 09:26:38 CST 2013.
    -->
    id, payway_name, input_code, payway_mark, cleared, note, fee, pay_fee
  </sql>
  <select id="selectByExample" parameterType="domain.dictionary.PensionDicPaywayExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Dec 09 09:26:38 CST 2013.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from pension_dic_payway
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Dec 09 09:26:38 CST 2013.
    -->
    select 
    <include refid="Base_Column_List" />
    from pension_dic_payway
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Dec 09 09:26:38 CST 2013.
    -->
    delete from pension_dic_payway
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="domain.dictionary.PensionDicPaywayExample">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Dec 09 09:26:38 CST 2013.
    -->
    delete from pension_dic_payway
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="domain.dictionary.PensionDicPayway">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Dec 09 09:26:38 CST 2013.
    -->
    insert into pension_dic_payway (id, payway_name, input_code, 
      payway_mark, cleared, note, 
      fee, pay_fee)
    values (#{id,jdbcType=INTEGER}, #{paywayName,jdbcType=VARCHAR}, #{inputCode,jdbcType=VARCHAR}, 
      #{paywayMark,jdbcType=VARCHAR}, #{cleared,jdbcType=INTEGER}, #{note,jdbcType=VARCHAR}, 
      #{fee,jdbcType=REAL}, #{payFee,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" keyProperty="id" parameterType="domain.dictionary.PensionDicPayway" useGeneratedKeys="true">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Dec 09 09:26:38 CST 2013.
    -->
    insert into pension_dic_payway
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="paywayName != null">
        payway_name,
      </if>
      <if test="inputCode != null">
        input_code,
      </if>
      <if test="paywayMark != null">
        payway_mark,
      </if>
      <if test="cleared != null">
        cleared,
      </if>
      <if test="note != null">
        note,
      </if>
      <if test="fee != null">
        fee,
      </if>
      <if test="payFee != null">
        pay_fee,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="paywayName != null">
        #{paywayName,jdbcType=VARCHAR},
      </if>
      <if test="inputCode != null">
        #{inputCode,jdbcType=VARCHAR},
      </if>
      <if test="paywayMark != null">
        #{paywayMark,jdbcType=VARCHAR},
      </if>
      <if test="cleared != null">
        #{cleared,jdbcType=INTEGER},
      </if>
      <if test="note != null">
        #{note,jdbcType=VARCHAR},
      </if>
      <if test="fee != null">
        #{fee,jdbcType=REAL},
      </if>
      <if test="payFee != null">
        #{payFee,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="domain.dictionary.PensionDicPaywayExample" resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Dec 09 09:26:38 CST 2013.
    -->
    select count(*) from pension_dic_payway
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Dec 09 09:26:38 CST 2013.
    -->
    update pension_dic_payway
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.paywayName != null">
        payway_name = #{record.paywayName,jdbcType=VARCHAR},
      </if>
      <if test="record.inputCode != null">
        input_code = #{record.inputCode,jdbcType=VARCHAR},
      </if>
      <if test="record.paywayMark != null">
        payway_mark = #{record.paywayMark,jdbcType=VARCHAR},
      </if>
      <if test="record.cleared != null">
        cleared = #{record.cleared,jdbcType=INTEGER},
      </if>
      <if test="record.note != null">
        note = #{record.note,jdbcType=VARCHAR},
      </if>
      <if test="record.fee != null">
        fee = #{record.fee,jdbcType=REAL},
      </if>
      <if test="record.payFee != null">
        pay_fee = #{record.payFee,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Dec 09 09:26:38 CST 2013.
    -->
    update pension_dic_payway
    set id = #{record.id,jdbcType=INTEGER},
      payway_name = #{record.paywayName,jdbcType=VARCHAR},
      input_code = #{record.inputCode,jdbcType=VARCHAR},
      payway_mark = #{record.paywayMark,jdbcType=VARCHAR},
      cleared = #{record.cleared,jdbcType=INTEGER},
      note = #{record.note,jdbcType=VARCHAR},
      fee = #{record.fee,jdbcType=REAL},
      pay_fee = #{record.payFee,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="domain.dictionary.PensionDicPayway">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Dec 09 09:26:38 CST 2013.
    -->
    update pension_dic_payway
    <set>
      <if test="paywayName != null">
        payway_name = #{paywayName,jdbcType=VARCHAR},
      </if>
      <if test="inputCode != null">
        input_code = #{inputCode,jdbcType=VARCHAR},
      </if>
      <if test="paywayMark != null">
        payway_mark = #{paywayMark,jdbcType=VARCHAR},
      </if>
      <if test="cleared != null">
        cleared = #{cleared,jdbcType=INTEGER},
      </if>
      <if test="note != null">
        note = #{note,jdbcType=VARCHAR},
      </if>
      <if test="fee != null">
        fee = #{fee,jdbcType=REAL},
      </if>
      <if test="payFee != null">
        pay_fee = #{payFee,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="domain.dictionary.PensionDicPayway">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Dec 09 09:26:38 CST 2013.
    -->
    update pension_dic_payway
    set payway_name = #{paywayName,jdbcType=VARCHAR},
      input_code = #{inputCode,jdbcType=VARCHAR},
      payway_mark = #{paywayMark,jdbcType=VARCHAR},
      cleared = #{cleared,jdbcType=INTEGER},
      note = #{note,jdbcType=VARCHAR},
      fee = #{fee,jdbcType=REAL},
      pay_fee = #{payFee,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  
    <select id="selectDicPayWaysBySisConfig" parameterType="java.util.Map" resultMap="BaseResultMap">
    (select * from pension_dic_PayWay pw
	where pw.ID = #{defaultPayWay,jdbcType=INTEGER} and pw.cleared=2 )
	union
	(select * from pension_dic_PayWay pw
	where pw.ID not in (#{defaultPayWay,jdbcType=INTEGER}) and pw.cleared=2 )
	
  </select>
  <select id="selectBalancePayWays" parameterType="java.util.Map" resultMap="BaseResultMap">
    select
	pdp.id as id,
	pdp.payway_name as payway_name,
	pdp.input_code as input_code,
	pdp.payway_mark as payway_mark,
	pdp.cleared as cleared,
	pdp.note as note,
	sum(pp.money) as fee
from
	pension_paymentdetail pp
inner join
	pension_dic_payway pdp
on
	pp.payStyle_id = pdp.id
	left join pension_employee pe on pe.id = pp.payer_id
left join pension_dept pd on pe.dept_id = pd.id
	
	where 
	
<if test="normalIdList !=null">	
	(
	pp.paymentID in 
	<foreach close=")" collection="normalIdList" index="index" item="normalId" open="(" separator=",">
		#{normalId,jdbcType=INTEGER}
	</foreach>
	
	and pp.payType_id = #{paytypeNormal,jdbcType=INTEGER}
	)
	or
	</if>
	<if test="tempIdList !=null">	
	(
	pp.paymentID in 
	<foreach close=")" collection="tempIdList" index="index" item="tempId" open="(" separator=",">
		#{tempId,jdbcType=INTEGER}
	</foreach>
	
	and pp.payType_id = #{paytypeTemp,jdbcType=INTEGER}
	)
	or
	</if>
	<if test="depositLogIdList !=null">
	(
	pp.paymentID in 
	<foreach close=")" collection="depositLogIdList" index="index" item="depositLogId" open="(" separator=",">
		#{depositLogId,jdbcType=INTEGER}
	</foreach>
	
	and pp.payType_id = #{paytypeDeposit,jdbcType=INTEGER}
	)
	or 
	</if>
	 1=2	
	 <if test="empId != null">
	and pe.id =  #{empId,jdbcType=DECIMAL}
	</if>
	<if test="deptId != null">
	and pd.id =  #{deptId,jdbcType=DECIMAL}
	</if>
group by
	pp.payStyle_id,pdp.payway_name
  </select>
</mapper>