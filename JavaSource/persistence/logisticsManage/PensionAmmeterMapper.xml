<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="persistence.logisticsManage.PensionAmmeterMapper">
  <resultMap id="BaseResultMap" type="domain.logisticsManage.PensionAmmeter">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Dec 12 17:39:57 CST 2013.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="room_id" jdbcType="INTEGER" property="roomId" />
    <result column="ammeter_name" jdbcType="VARCHAR" property="ammeterName" />
    <result column="valid_flag" jdbcType="INTEGER" property="validFlag" />
    <result column="cleared" jdbcType="INTEGER" property="cleared" />
    <result column="note" jdbcType="VARCHAR" property="note" />
    <result column="init_degree_number" jdbcType="REAL" property="initDegreeNumber" />
    <result column="init_datetime" jdbcType="TIMESTAMP" property="initDatetime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Dec 12 17:39:57 CST 2013.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Dec 12 17:39:57 CST 2013.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Dec 12 17:39:57 CST 2013.
    -->
    id, room_id, ammeter_name, valid_flag, cleared, note, init_degree_number, init_datetime
  </sql>
  <select id="selectByExample" parameterType="domain.logisticsManage.PensionAmmeterExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Dec 12 17:39:57 CST 2013.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from pension_ammeter
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Dec 12 17:39:57 CST 2013.
    -->
    select 
    <include refid="Base_Column_List" />
    from pension_ammeter
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Dec 12 17:39:57 CST 2013.
    -->
    delete from pension_ammeter
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="domain.logisticsManage.PensionAmmeterExample">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Dec 12 17:39:57 CST 2013.
    -->
    delete from pension_ammeter
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="domain.logisticsManage.PensionAmmeter">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Dec 12 17:39:57 CST 2013.
    -->
    insert into pension_ammeter (id, room_id, ammeter_name, 
      valid_flag, cleared, note, 
      init_degree_number, init_datetime)
    values (#{id,jdbcType=INTEGER}, #{roomId,jdbcType=INTEGER}, #{ammeterName,jdbcType=VARCHAR}, 
      #{validFlag,jdbcType=INTEGER}, #{cleared,jdbcType=INTEGER}, #{note,jdbcType=VARCHAR}, 
      #{initDegreeNumber,jdbcType=REAL}, #{initDatetime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" keyProperty="id" parameterType="domain.logisticsManage.PensionAmmeter" useGeneratedKeys="true">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Dec 12 17:39:57 CST 2013.
    -->
    insert into pension_ammeter
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="roomId != null">
        room_id,
      </if>
      <if test="ammeterName != null">
        ammeter_name,
      </if>
      <if test="validFlag != null">
        valid_flag,
      </if>
      <if test="cleared != null">
        cleared,
      </if>
      <if test="note != null">
        note,
      </if>
      <if test="initDegreeNumber != null">
        init_degree_number,
      </if>
      <if test="initDatetime != null">
        init_datetime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="roomId != null">
        #{roomId,jdbcType=INTEGER},
      </if>
      <if test="ammeterName != null">
        #{ammeterName,jdbcType=VARCHAR},
      </if>
      <if test="validFlag != null">
        #{validFlag,jdbcType=INTEGER},
      </if>
      <if test="cleared != null">
        #{cleared,jdbcType=INTEGER},
      </if>
      <if test="note != null">
        #{note,jdbcType=VARCHAR},
      </if>
      <if test="initDegreeNumber != null">
        #{initDegreeNumber,jdbcType=REAL},
      </if>
      <if test="initDatetime != null">
        #{initDatetime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="domain.logisticsManage.PensionAmmeterExample" resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Dec 12 17:39:57 CST 2013.
    -->
    select count(*) from pension_ammeter
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Dec 12 17:39:57 CST 2013.
    -->
    update pension_ammeter
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.roomId != null">
        room_id = #{record.roomId,jdbcType=INTEGER},
      </if>
      <if test="record.ammeterName != null">
        ammeter_name = #{record.ammeterName,jdbcType=VARCHAR},
      </if>
      <if test="record.validFlag != null">
        valid_flag = #{record.validFlag,jdbcType=INTEGER},
      </if>
      <if test="record.cleared != null">
        cleared = #{record.cleared,jdbcType=INTEGER},
      </if>
      <if test="record.note != null">
        note = #{record.note,jdbcType=VARCHAR},
      </if>
      <if test="record.initDegreeNumber != null">
        init_degree_number = #{record.initDegreeNumber,jdbcType=REAL},
      </if>
      <if test="record.initDatetime != null">
        init_datetime = #{record.initDatetime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Dec 12 17:39:57 CST 2013.
    -->
    update pension_ammeter
    set id = #{record.id,jdbcType=INTEGER},
      room_id = #{record.roomId,jdbcType=INTEGER},
      ammeter_name = #{record.ammeterName,jdbcType=VARCHAR},
      valid_flag = #{record.validFlag,jdbcType=INTEGER},
      cleared = #{record.cleared,jdbcType=INTEGER},
      note = #{record.note,jdbcType=VARCHAR},
      init_degree_number = #{record.initDegreeNumber,jdbcType=REAL},
      init_datetime = #{record.initDatetime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="domain.logisticsManage.PensionAmmeter">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Dec 12 17:39:57 CST 2013.
    -->
    update pension_ammeter
    <set>
      <if test="roomId != null">
        room_id = #{roomId,jdbcType=INTEGER},
      </if>
      <if test="ammeterName != null">
        ammeter_name = #{ammeterName,jdbcType=VARCHAR},
      </if>
      <if test="validFlag != null">
        valid_flag = #{validFlag,jdbcType=INTEGER},
      </if>
      <if test="cleared != null">
        cleared = #{cleared,jdbcType=INTEGER},
      </if>
      <if test="note != null">
        note = #{note,jdbcType=VARCHAR},
      </if>
      <if test="initDegreeNumber != null">
        init_degree_number = #{initDegreeNumber,jdbcType=REAL},
      </if>
      <if test="initDatetime != null">
        init_datetime = #{initDatetime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="domain.logisticsManage.PensionAmmeter">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Dec 12 17:39:57 CST 2013.
    -->
    update pension_ammeter
    set room_id = #{roomId,jdbcType=INTEGER},
      ammeter_name = #{ammeterName,jdbcType=VARCHAR},
      valid_flag = #{validFlag,jdbcType=INTEGER},
      cleared = #{cleared,jdbcType=INTEGER},
      note = #{note,jdbcType=VARCHAR},
      init_degree_number = #{initDegreeNumber,jdbcType=REAL},
      init_datetime = #{initDatetime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectAmmeterRecords" parameterType="java.util.Map" resultType="domain.logisticsManage.PensionAmmeterExtend">
		select 
		    pr.name as roomName,
		    pa.room_id as roomId,
		    pf.name as floorName,
		    pf.id as floorId,
		    pb.name as buildName,
		    pb.id as buildId,
			pa.init_degree_number as initDegreeNumber,
			pa.init_datetime as initDatetime,
		    pa.id as id,
		    pa.ammeter_name as ammeterName,
		    pa.valid_flag as validFlag,
		    pa.cleared as cleared,
		    pa.note as note
		from
		    pension_ammeter pa
		        join
		    pension_room pr ON pa.room_id = pr.id
		        join
		    pension_floor pf ON pr.floor_id = pf.id
		        join
		    pension_building pb ON pf.build_id = pb.id
		where
		    pa.cleared = 2
 	 <if test="roomId != null &amp;&amp; roomId != ''">
	 	  and pa.room_id = #{roomId,jdbcType=INTEGER}
	 </if>
	 <if test="validFlag != 0">
	 	  and pa.valid_flag = #{validFlag,jdbcType=INTEGER}
	 </if>
  </select>
  <select id="fillField" parameterType="java.lang.Long" resultType="domain.logisticsManage.PensionAmmeterExtend">
    select pr.id          as roomId,
	       pr.name        as roomName,
	       pf.id          as floorId,
	       pf.name        as floorName,
	       pbuilding.id   as buildId,
	       pbuilding.name as buildName
	
	  from pension_room pr
	  join pension_floor pf
	    on pr.floor_id = pf.id
	  join pension_building pbuilding
	    on pf.build_id = pbuilding.id
	 where pr.cleared = 2 
 	<if test="roomId != null">
       and pr.id = #{roomId,jdbcType=INTEGER}
    </if>
  </select>
</mapper>