<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="persistence.logisticsManage.PensionOlderElectricityMapper">
  <resultMap id="BaseResultMap" type="domain.logisticsManage.PensionOlderElectricity">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Dec 10 10:16:04 CST 2013.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="older_id" jdbcType="INTEGER" property="olderId" />
    <result column="older_name" jdbcType="VARCHAR" property="olderName" />
    <result column="start_time" jdbcType="TIMESTAMP" property="startTime" />
    <result column="end_time" jdbcType="TIMESTAMP" property="endTime" />
    <result column="electricity_amount" jdbcType="REAL" property="electricityAmount" />
    <result column="unit_price" jdbcType="REAL" property="unitPrice" />
    <result column="charge_flag" jdbcType="INTEGER" property="chargeFlag" />
    <result column="room_id" jdbcType="INTEGER" property="roomId" />
    <result column="floor_id" jdbcType="INTEGER" property="floorId" />
    <result column="build_id" jdbcType="INTEGER" property="buildId" />
    <result column="room_name" jdbcType="VARCHAR" property="roomName" />
    <result column="floor_name" jdbcType="VARCHAR" property="floorName" />
    <result column="build_name" jdbcType="VARCHAR" property="buildName" />
    <result column="inputuser_id" jdbcType="INTEGER" property="inputuserId" />
    <result column="inputuser_name" jdbcType="VARCHAR" property="inputuserName" />
    <result column="electricity_record_id" jdbcType="INTEGER" property="electricityRecordId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Dec 10 10:16:04 CST 2013.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Dec 10 10:16:04 CST 2013.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Dec 10 10:16:04 CST 2013.
    -->
    id, older_id, older_name, start_time, end_time, electricity_amount, unit_price, charge_flag, 
    room_id, floor_id, build_id, room_name, floor_name, build_name, inputuser_id, inputuser_name, 
    electricity_record_id
  </sql>
  <select id="selectByExample" parameterType="domain.logisticsManage.PensionOlderElectricityExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Dec 10 10:16:04 CST 2013.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from pension_older_electricity
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Dec 10 10:16:04 CST 2013.
    -->
    select 
    <include refid="Base_Column_List" />
    from pension_older_electricity
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Dec 10 10:16:04 CST 2013.
    -->
    delete from pension_older_electricity
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="domain.logisticsManage.PensionOlderElectricityExample">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Dec 10 10:16:04 CST 2013.
    -->
    delete from pension_older_electricity
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="domain.logisticsManage.PensionOlderElectricity">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Dec 10 10:16:04 CST 2013.
    -->
    insert into pension_older_electricity (id, older_id, older_name, 
      start_time, end_time, electricity_amount, 
      unit_price, charge_flag, room_id, 
      floor_id, build_id, room_name, 
      floor_name, build_name, inputuser_id, 
      inputuser_name, electricity_record_id)
    values (#{id,jdbcType=INTEGER}, #{olderId,jdbcType=INTEGER}, #{olderName,jdbcType=VARCHAR}, 
      #{startTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP}, #{electricityAmount,jdbcType=REAL}, 
      #{unitPrice,jdbcType=REAL}, #{chargeFlag,jdbcType=INTEGER}, #{roomId,jdbcType=INTEGER}, 
      #{floorId,jdbcType=INTEGER}, #{buildId,jdbcType=INTEGER}, #{roomName,jdbcType=VARCHAR}, 
      #{floorName,jdbcType=VARCHAR}, #{buildName,jdbcType=VARCHAR}, #{inputuserId,jdbcType=INTEGER}, 
      #{inputuserName,jdbcType=VARCHAR}, #{electricityRecordId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" keyProperty="id" parameterType="domain.logisticsManage.PensionOlderElectricity" useGeneratedKeys="true">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Dec 10 10:16:04 CST 2013.
    -->
    insert into pension_older_electricity
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="olderId != null">
        older_id,
      </if>
      <if test="olderName != null">
        older_name,
      </if>
      <if test="startTime != null">
        start_time,
      </if>
      <if test="endTime != null">
        end_time,
      </if>
      <if test="electricityAmount != null">
        electricity_amount,
      </if>
      <if test="unitPrice != null">
        unit_price,
      </if>
      <if test="chargeFlag != null">
        charge_flag,
      </if>
      <if test="roomId != null">
        room_id,
      </if>
      <if test="floorId != null">
        floor_id,
      </if>
      <if test="buildId != null">
        build_id,
      </if>
      <if test="roomName != null">
        room_name,
      </if>
      <if test="floorName != null">
        floor_name,
      </if>
      <if test="buildName != null">
        build_name,
      </if>
      <if test="inputuserId != null">
        inputuser_id,
      </if>
      <if test="inputuserName != null">
        inputuser_name,
      </if>
      <if test="electricityRecordId != null">
        electricity_record_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="olderId != null">
        #{olderId,jdbcType=INTEGER},
      </if>
      <if test="olderName != null">
        #{olderName,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null">
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="electricityAmount != null">
        #{electricityAmount,jdbcType=REAL},
      </if>
      <if test="unitPrice != null">
        #{unitPrice,jdbcType=REAL},
      </if>
      <if test="chargeFlag != null">
        #{chargeFlag,jdbcType=INTEGER},
      </if>
      <if test="roomId != null">
        #{roomId,jdbcType=INTEGER},
      </if>
      <if test="floorId != null">
        #{floorId,jdbcType=INTEGER},
      </if>
      <if test="buildId != null">
        #{buildId,jdbcType=INTEGER},
      </if>
      <if test="roomName != null">
        #{roomName,jdbcType=VARCHAR},
      </if>
      <if test="floorName != null">
        #{floorName,jdbcType=VARCHAR},
      </if>
      <if test="buildName != null">
        #{buildName,jdbcType=VARCHAR},
      </if>
      <if test="inputuserId != null">
        #{inputuserId,jdbcType=INTEGER},
      </if>
      <if test="inputuserName != null">
        #{inputuserName,jdbcType=VARCHAR},
      </if>
      <if test="electricityRecordId != null">
        #{electricityRecordId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="domain.logisticsManage.PensionOlderElectricityExample" resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Dec 10 10:16:04 CST 2013.
    -->
    select count(*) from pension_older_electricity
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Dec 10 10:16:04 CST 2013.
    -->
    update pension_older_electricity
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.olderId != null">
        older_id = #{record.olderId,jdbcType=INTEGER},
      </if>
      <if test="record.olderName != null">
        older_name = #{record.olderName,jdbcType=VARCHAR},
      </if>
      <if test="record.startTime != null">
        start_time = #{record.startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.endTime != null">
        end_time = #{record.endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.electricityAmount != null">
        electricity_amount = #{record.electricityAmount,jdbcType=REAL},
      </if>
      <if test="record.unitPrice != null">
        unit_price = #{record.unitPrice,jdbcType=REAL},
      </if>
      <if test="record.chargeFlag != null">
        charge_flag = #{record.chargeFlag,jdbcType=INTEGER},
      </if>
      <if test="record.roomId != null">
        room_id = #{record.roomId,jdbcType=INTEGER},
      </if>
      <if test="record.floorId != null">
        floor_id = #{record.floorId,jdbcType=INTEGER},
      </if>
      <if test="record.buildId != null">
        build_id = #{record.buildId,jdbcType=INTEGER},
      </if>
      <if test="record.roomName != null">
        room_name = #{record.roomName,jdbcType=VARCHAR},
      </if>
      <if test="record.floorName != null">
        floor_name = #{record.floorName,jdbcType=VARCHAR},
      </if>
      <if test="record.buildName != null">
        build_name = #{record.buildName,jdbcType=VARCHAR},
      </if>
      <if test="record.inputuserId != null">
        inputuser_id = #{record.inputuserId,jdbcType=INTEGER},
      </if>
      <if test="record.inputuserName != null">
        inputuser_name = #{record.inputuserName,jdbcType=VARCHAR},
      </if>
      <if test="record.electricityRecordId != null">
        electricity_record_id = #{record.electricityRecordId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Dec 10 10:16:04 CST 2013.
    -->
    update pension_older_electricity
    set id = #{record.id,jdbcType=INTEGER},
      older_id = #{record.olderId,jdbcType=INTEGER},
      older_name = #{record.olderName,jdbcType=VARCHAR},
      start_time = #{record.startTime,jdbcType=TIMESTAMP},
      end_time = #{record.endTime,jdbcType=TIMESTAMP},
      electricity_amount = #{record.electricityAmount,jdbcType=REAL},
      unit_price = #{record.unitPrice,jdbcType=REAL},
      charge_flag = #{record.chargeFlag,jdbcType=INTEGER},
      room_id = #{record.roomId,jdbcType=INTEGER},
      floor_id = #{record.floorId,jdbcType=INTEGER},
      build_id = #{record.buildId,jdbcType=INTEGER},
      room_name = #{record.roomName,jdbcType=VARCHAR},
      floor_name = #{record.floorName,jdbcType=VARCHAR},
      build_name = #{record.buildName,jdbcType=VARCHAR},
      inputuser_id = #{record.inputuserId,jdbcType=INTEGER},
      inputuser_name = #{record.inputuserName,jdbcType=VARCHAR},
      electricity_record_id = #{record.electricityRecordId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="domain.logisticsManage.PensionOlderElectricity">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Dec 10 10:16:04 CST 2013.
    -->
    update pension_older_electricity
    <set>
      <if test="olderId != null">
        older_id = #{olderId,jdbcType=INTEGER},
      </if>
      <if test="olderName != null">
        older_name = #{olderName,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null">
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="electricityAmount != null">
        electricity_amount = #{electricityAmount,jdbcType=REAL},
      </if>
      <if test="unitPrice != null">
        unit_price = #{unitPrice,jdbcType=REAL},
      </if>
      <if test="chargeFlag != null">
        charge_flag = #{chargeFlag,jdbcType=INTEGER},
      </if>
      <if test="roomId != null">
        room_id = #{roomId,jdbcType=INTEGER},
      </if>
      <if test="floorId != null">
        floor_id = #{floorId,jdbcType=INTEGER},
      </if>
      <if test="buildId != null">
        build_id = #{buildId,jdbcType=INTEGER},
      </if>
      <if test="roomName != null">
        room_name = #{roomName,jdbcType=VARCHAR},
      </if>
      <if test="floorName != null">
        floor_name = #{floorName,jdbcType=VARCHAR},
      </if>
      <if test="buildName != null">
        build_name = #{buildName,jdbcType=VARCHAR},
      </if>
      <if test="inputuserId != null">
        inputuser_id = #{inputuserId,jdbcType=INTEGER},
      </if>
      <if test="inputuserName != null">
        inputuser_name = #{inputuserName,jdbcType=VARCHAR},
      </if>
      <if test="electricityRecordId != null">
        electricity_record_id = #{electricityRecordId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="domain.logisticsManage.PensionOlderElectricity">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Dec 10 10:16:04 CST 2013.
    -->
    update pension_older_electricity
    set older_id = #{olderId,jdbcType=INTEGER},
      older_name = #{olderName,jdbcType=VARCHAR},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      electricity_amount = #{electricityAmount,jdbcType=REAL},
      unit_price = #{unitPrice,jdbcType=REAL},
      charge_flag = #{chargeFlag,jdbcType=INTEGER},
      room_id = #{roomId,jdbcType=INTEGER},
      floor_id = #{floorId,jdbcType=INTEGER},
      build_id = #{buildId,jdbcType=INTEGER},
      room_name = #{roomName,jdbcType=VARCHAR},
      floor_name = #{floorName,jdbcType=VARCHAR},
      build_name = #{buildName,jdbcType=VARCHAR},
      inputuser_id = #{inputuserId,jdbcType=INTEGER},
      inputuser_name = #{inputuserName,jdbcType=VARCHAR},
      electricity_record_id = #{electricityRecordId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

  
  <!-- add by justin.su 2013-12-09 -->
  <select id="selectOlderNumbers" parameterType="map" resultType="Long">
  	select
		count(*) as olderNumbers
	from
		pension_older po
	inner join
		pension_livingrecord pl
	on
		po.id = pl.older_id
	inner join
		pension_bed pb
	on
		pl.bed_id = pb.id
	inner join
		pension_room pr
	on
		pb.room_id = pr.id
	where
		po.statuses in (3,4)
	and
		pr.id = #{roomId}
	and
		DATE_FORMAT(pl.visitTime, '%Y-%m-%d') &lt;= DATE_FORMAT(#{endDate},'%Y-%m-%d')
  </select>
  
  <!-- add by justin.su 2013-12-09 -->
  <select id="selectPensionOlderElectricityList" parameterType="map" resultType="domain.logisticsManage.PensionOlderElectricity">
  		select
			tempT.olderId as olderId
			,tempT.olderName as olderName
			,tempT.roomId as roomId
			,tempT.roomName as roomName
			,tempT.floorId as floorId
			,tempT.floorName as floorName
			,tempT.buildId as buildId
			,tempT.buildName as buildName
			,tempT.olderNumbers as olderNumbers
			,tempT.degreesNumber as degreesNumber
			,tempT.degreesNumber/tempT.olderNumbers as everyDegrees
			,tempT.lastInputTime as startTime
			,tempT.inputTime as endTime
			,tempT.electricityRecordId as electricityRecordId
		from
		(
		select
			per.id as electricityRecordId
			,pl.older_id as olderId
			,po.name as olderName
			,pr.id as roomId
			,pr.name as roomName
			,pf.id as floorId
			,pf.name as floorName
			,pbd.id as buildId
			,pbd.name as buildName
			,(select
			count(*) as olderNumbers
			from
				pension_older po
			inner join
				pension_livingrecord pl
			on
				po.id = pl.older_id
			inner join
				pension_bed pb
			on
				pl.bed_id = pb.id
			inner join
				pension_room pr
			on
				pb.room_id = pr.id
			where
				po.statuses in (3,4)
			and 
				per.cleared = 2
			and
				pr.id = #{roomId}
			and
				DATE_FORMAT(pl.visitTime, '%Y-%m-%d') &lt;= DATE_FORMAT(#{endDate},'%Y-%m-%d')
			) as olderNumbers
			,per.degrees_number-per.last_degrees_number as degreesNumber
			,per.ammeter_id as ammeterId
			,per.input_time as inputTime
			,per.last_input_time as lastInputTime
		from
			pension_livingrecord pl
		inner join
			pension_older po
		on
			pl.older_id = po.id
		inner join
			pension_bed pb
		on
			pl.bed_id = pb.id
		inner join
			pension_room pr
		on
			pb.room_id = pr.id
		inner join
			pension_floor pf
		on
			pr.floor_id = pf.id
		inner join
			pension_building pbd
		on
			pf.build_id = pbd.id
		inner join
			pension_ammeter pa
		on
			pa.room_id = pr.id
		inner join
			pension_electricity_record per
		on
			per.ammeter_id = pa.id
		where
			po.statuses in (3,4)
		and
			pr.id = #{roomId}
		and
			DATE_FORMAT(pl.visitTime, '%Y-%m-%d') &lt;= DATE_FORMAT(#{endDate},'%Y-%m-%d')
		and
			DATE_FORMAT(per.input_time, '%Y-%m-%d %H:%i') = DATE_FORMAT(#{inputDate},'%Y-%m-%d %H:%i')
		) tempT
  </select>

  
  
  <!-- 根据起止日期查询该事件段内的老人用电记录 add by mary 2013-12-09 -->
  <select id="searchOlderElectricity" parameterType="java.util.Map" resultMap="BaseResultMap">
  select * from pension_older_electricity p
  where 1=1
   <if test="olderId !=null">
and p.older_id = #{olderId,jdbcType=INTEGER}
</if>
  and unix_timestamp(p.start_time)
			&lt;=unix_timestamp(#{endDate})
and unix_timestamp(p.end_time)
			&gt;=unix_timestamp(#{startDate})
order by p.id desc
  
  </select>
  <!-- 根据起止日期查询该事件段内的老人用电记录 add by mary 2013-12-09 -->
  <select id="searchFreeOlder" parameterType="java.util.Map" resultMap="BaseResultMap">
  

select p.id,
p.older_id,
p.older_name,
p.unit_price,
p.room_id,
p.floor_id,
p.build_id,
p.room_name,
p.floor_name,
p.build_name,
sum(p.electricity_amount) as electricity_amount 
from pension_older_electricity p
  where p.charge_flag = 2
 
   and unix_timestamp(p.start_time)
			&lt;=unix_timestamp(#{endDate})
and unix_timestamp(p.end_time)
			&gt;=unix_timestamp(#{startDate})
group by p.older_id


  
  </select>


 <!-- add by justin.su 2013-12-09 -->
  <select id="selectPensionOlderElectricityListByEnsured" parameterType="map" resultType="domain.logisticsManage.PensionOlderElectricity">
  		select
			poe.older_id as olderId
			,poe.older_name as olderName
			,poe.room_id as roomId
			,poe.room_name as roomName
			,poe.floor_id as floorId
			,poe.floor_name as floorName
			,poe.build_id as buildId
			,poe.build_name as buildName
			,poe.electricity_amount as everyDegrees
			,poe.start_time as startTime
			,poe.end_time as endTime
			,poe.electricity_record_id as electricityRecordId
			,poe.unit_price as unitPrice
		from
			pension_older_electricity poe
		where
			poe.room_id =#{roomId}
		and
			DATE_FORMAT(poe.start_time, '%Y-%m-%d %H:%i') &gt;= DATE_FORMAT(#{startTime},'%Y-%m-%d %H:%i')
		and
			DATE_FORMAT(poe.end_time, '%Y-%m-%d %H:%i') &lt;= DATE_FORMAT(#{endTime},'%Y-%m-%d %H:%i')
  </select>
</mapper>