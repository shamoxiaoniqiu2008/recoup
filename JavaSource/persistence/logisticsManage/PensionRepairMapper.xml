<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="persistence.logisticsManage.PensionRepairMapper">
  <resultMap id="BaseResultMap" type="domain.logisticsManage.PensionRepair">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Mar 03 10:25:25 CST 2014.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="older_id" jdbcType="INTEGER" property="olderId" />
    <result column="room_id" jdbcType="INTEGER" property="roomId" />
    <result column="repair_detail" jdbcType="VARCHAR" property="repairDetail" />
    <result column="repair_type" jdbcType="INTEGER" property="repairType" />
    <result column="apply_time" jdbcType="TIMESTAMP" property="applyTime" />
    <result column="repairer_id" jdbcType="INTEGER" property="repairerId" />
    <result column="send_flag" jdbcType="INTEGER" property="sendFlag" />
    <result column="handle_flag" jdbcType="INTEGER" property="handleFlag" />
    <result column="pay_flag" jdbcType="INTEGER" property="payFlag" />
    <result column="cleared" jdbcType="INTEGER" property="cleared" />
    <result column="note" jdbcType="VARCHAR" property="note" />
    <result column="manager_id" jdbcType="INTEGER" property="managerId" />
    <result column="payer_id" jdbcType="INTEGER" property="payerId" />
    <result column="handle_time" jdbcType="TIMESTAMP" property="handleTime" />
    <result column="ensure_emp_id" jdbcType="INTEGER" property="ensureEmpId" />
    <result column="ensure_emp_name" jdbcType="VARCHAR" property="ensureEmpName" />
    <result column="ensure_date" jdbcType="TIMESTAMP" property="ensureDate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Mar 03 10:25:25 CST 2014.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Mar 03 10:25:25 CST 2014.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Mar 03 10:25:25 CST 2014.
    -->
    id, older_id, room_id, repair_detail, repair_type, apply_time, repairer_id, send_flag, 
    handle_flag, pay_flag, cleared, note, manager_id, payer_id, handle_time, ensure_emp_id, 
    ensure_emp_name, ensure_date
  </sql>
  <select id="selectByExample" parameterType="domain.logisticsManage.PensionRepairExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Mar 03 10:25:25 CST 2014.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from pension_repair
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Mar 03 10:25:25 CST 2014.
    -->
    select 
    <include refid="Base_Column_List" />
    from pension_repair
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Mar 03 10:25:25 CST 2014.
    -->
    delete from pension_repair
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="domain.logisticsManage.PensionRepairExample">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Mar 03 10:25:25 CST 2014.
    -->
    delete from pension_repair
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="domain.logisticsManage.PensionRepair">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Mar 03 10:25:25 CST 2014.
    -->
    insert into pension_repair (id, older_id, room_id, 
      repair_detail, repair_type, apply_time, 
      repairer_id, send_flag, handle_flag, 
      pay_flag, cleared, note, 
      manager_id, payer_id, handle_time, 
      ensure_emp_id, ensure_emp_name, ensure_date
      )
    values (#{id,jdbcType=INTEGER}, #{olderId,jdbcType=INTEGER}, #{roomId,jdbcType=INTEGER}, 
      #{repairDetail,jdbcType=VARCHAR}, #{repairType,jdbcType=INTEGER}, #{applyTime,jdbcType=TIMESTAMP}, 
      #{repairerId,jdbcType=INTEGER}, #{sendFlag,jdbcType=INTEGER}, #{handleFlag,jdbcType=INTEGER}, 
      #{payFlag,jdbcType=INTEGER}, #{cleared,jdbcType=INTEGER}, #{note,jdbcType=VARCHAR}, 
      #{managerId,jdbcType=INTEGER}, #{payerId,jdbcType=INTEGER}, #{handleTime,jdbcType=TIMESTAMP}, 
      #{ensureEmpId,jdbcType=INTEGER}, #{ensureEmpName,jdbcType=VARCHAR}, #{ensureDate,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" keyProperty="id" parameterType="domain.logisticsManage.PensionRepair" useGeneratedKeys="true">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Mar 03 10:25:25 CST 2014.
    -->
    insert into pension_repair
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="olderId != null">
        older_id,
      </if>
      <if test="roomId != null">
        room_id,
      </if>
      <if test="repairDetail != null">
        repair_detail,
      </if>
      <if test="repairType != null">
        repair_type,
      </if>
      <if test="applyTime != null">
        apply_time,
      </if>
      <if test="repairerId != null">
        repairer_id,
      </if>
      <if test="sendFlag != null">
        send_flag,
      </if>
      <if test="handleFlag != null">
        handle_flag,
      </if>
      <if test="payFlag != null">
        pay_flag,
      </if>
      <if test="cleared != null">
        cleared,
      </if>
      <if test="note != null">
        note,
      </if>
      <if test="managerId != null">
        manager_id,
      </if>
      <if test="payerId != null">
        payer_id,
      </if>
      <if test="handleTime != null">
        handle_time,
      </if>
      <if test="ensureEmpId != null">
        ensure_emp_id,
      </if>
      <if test="ensureEmpName != null">
        ensure_emp_name,
      </if>
      <if test="ensureDate != null">
        ensure_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="olderId != null">
        #{olderId,jdbcType=INTEGER},
      </if>
      <if test="roomId != null">
        #{roomId,jdbcType=INTEGER},
      </if>
      <if test="repairDetail != null">
        #{repairDetail,jdbcType=VARCHAR},
      </if>
      <if test="repairType != null">
        #{repairType,jdbcType=INTEGER},
      </if>
      <if test="applyTime != null">
        #{applyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="repairerId != null">
        #{repairerId,jdbcType=INTEGER},
      </if>
      <if test="sendFlag != null">
        #{sendFlag,jdbcType=INTEGER},
      </if>
      <if test="handleFlag != null">
        #{handleFlag,jdbcType=INTEGER},
      </if>
      <if test="payFlag != null">
        #{payFlag,jdbcType=INTEGER},
      </if>
      <if test="cleared != null">
        #{cleared,jdbcType=INTEGER},
      </if>
      <if test="note != null">
        #{note,jdbcType=VARCHAR},
      </if>
      <if test="managerId != null">
        #{managerId,jdbcType=INTEGER},
      </if>
      <if test="payerId != null">
        #{payerId,jdbcType=INTEGER},
      </if>
      <if test="handleTime != null">
        #{handleTime,jdbcType=TIMESTAMP},
      </if>
      <if test="ensureEmpId != null">
        #{ensureEmpId,jdbcType=INTEGER},
      </if>
      <if test="ensureEmpName != null">
        #{ensureEmpName,jdbcType=VARCHAR},
      </if>
      <if test="ensureDate != null">
        #{ensureDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="domain.logisticsManage.PensionRepairExample" resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Mar 03 10:25:25 CST 2014.
    -->
    select count(*) from pension_repair
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Mar 03 10:25:25 CST 2014.
    -->
    update pension_repair
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.olderId != null">
        older_id = #{record.olderId,jdbcType=INTEGER},
      </if>
      <if test="record.roomId != null">
        room_id = #{record.roomId,jdbcType=INTEGER},
      </if>
      <if test="record.repairDetail != null">
        repair_detail = #{record.repairDetail,jdbcType=VARCHAR},
      </if>
      <if test="record.repairType != null">
        repair_type = #{record.repairType,jdbcType=INTEGER},
      </if>
      <if test="record.applyTime != null">
        apply_time = #{record.applyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.repairerId != null">
        repairer_id = #{record.repairerId,jdbcType=INTEGER},
      </if>
      <if test="record.sendFlag != null">
        send_flag = #{record.sendFlag,jdbcType=INTEGER},
      </if>
      <if test="record.handleFlag != null">
        handle_flag = #{record.handleFlag,jdbcType=INTEGER},
      </if>
      <if test="record.payFlag != null">
        pay_flag = #{record.payFlag,jdbcType=INTEGER},
      </if>
      <if test="record.cleared != null">
        cleared = #{record.cleared,jdbcType=INTEGER},
      </if>
      <if test="record.note != null">
        note = #{record.note,jdbcType=VARCHAR},
      </if>
      <if test="record.managerId != null">
        manager_id = #{record.managerId,jdbcType=INTEGER},
      </if>
      <if test="record.payerId != null">
        payer_id = #{record.payerId,jdbcType=INTEGER},
      </if>
      <if test="record.handleTime != null">
        handle_time = #{record.handleTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.ensureEmpId != null">
        ensure_emp_id = #{record.ensureEmpId,jdbcType=INTEGER},
      </if>
      <if test="record.ensureEmpName != null">
        ensure_emp_name = #{record.ensureEmpName,jdbcType=VARCHAR},
      </if>
      <if test="record.ensureDate != null">
        ensure_date = #{record.ensureDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Mar 03 10:25:25 CST 2014.
    -->
    update pension_repair
    set id = #{record.id,jdbcType=INTEGER},
      older_id = #{record.olderId,jdbcType=INTEGER},
      room_id = #{record.roomId,jdbcType=INTEGER},
      repair_detail = #{record.repairDetail,jdbcType=VARCHAR},
      repair_type = #{record.repairType,jdbcType=INTEGER},
      apply_time = #{record.applyTime,jdbcType=TIMESTAMP},
      repairer_id = #{record.repairerId,jdbcType=INTEGER},
      send_flag = #{record.sendFlag,jdbcType=INTEGER},
      handle_flag = #{record.handleFlag,jdbcType=INTEGER},
      pay_flag = #{record.payFlag,jdbcType=INTEGER},
      cleared = #{record.cleared,jdbcType=INTEGER},
      note = #{record.note,jdbcType=VARCHAR},
      manager_id = #{record.managerId,jdbcType=INTEGER},
      payer_id = #{record.payerId,jdbcType=INTEGER},
      handle_time = #{record.handleTime,jdbcType=TIMESTAMP},
      ensure_emp_id = #{record.ensureEmpId,jdbcType=INTEGER},
      ensure_emp_name = #{record.ensureEmpName,jdbcType=VARCHAR},
      ensure_date = #{record.ensureDate,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="domain.logisticsManage.PensionRepair">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Mar 03 10:25:25 CST 2014.
    -->
    update pension_repair
    <set>
      <if test="olderId != null">
        older_id = #{olderId,jdbcType=INTEGER},
      </if>
      <if test="roomId != null">
        room_id = #{roomId,jdbcType=INTEGER},
      </if>
      <if test="repairDetail != null">
        repair_detail = #{repairDetail,jdbcType=VARCHAR},
      </if>
      <if test="repairType != null">
        repair_type = #{repairType,jdbcType=INTEGER},
      </if>
      <if test="applyTime != null">
        apply_time = #{applyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="repairerId != null">
        repairer_id = #{repairerId,jdbcType=INTEGER},
      </if>
      <if test="sendFlag != null">
        send_flag = #{sendFlag,jdbcType=INTEGER},
      </if>
      <if test="handleFlag != null">
        handle_flag = #{handleFlag,jdbcType=INTEGER},
      </if>
      <if test="payFlag != null">
        pay_flag = #{payFlag,jdbcType=INTEGER},
      </if>
      <if test="cleared != null">
        cleared = #{cleared,jdbcType=INTEGER},
      </if>
      <if test="note != null">
        note = #{note,jdbcType=VARCHAR},
      </if>
      <if test="managerId != null">
        manager_id = #{managerId,jdbcType=INTEGER},
      </if>
      <if test="payerId != null">
        payer_id = #{payerId,jdbcType=INTEGER},
      </if>
      <if test="handleTime != null">
        handle_time = #{handleTime,jdbcType=TIMESTAMP},
      </if>
      <if test="ensureEmpId != null">
        ensure_emp_id = #{ensureEmpId,jdbcType=INTEGER},
      </if>
      <if test="ensureEmpName != null">
        ensure_emp_name = #{ensureEmpName,jdbcType=VARCHAR},
      </if>
      <if test="ensureDate != null">
        ensure_date = #{ensureDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="domain.logisticsManage.PensionRepair">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Mar 03 10:25:25 CST 2014.
    -->
    update pension_repair
    set older_id = #{olderId,jdbcType=INTEGER},
      room_id = #{roomId,jdbcType=INTEGER},
      repair_detail = #{repairDetail,jdbcType=VARCHAR},
      repair_type = #{repairType,jdbcType=INTEGER},
      apply_time = #{applyTime,jdbcType=TIMESTAMP},
      repairer_id = #{repairerId,jdbcType=INTEGER},
      send_flag = #{sendFlag,jdbcType=INTEGER},
      handle_flag = #{handleFlag,jdbcType=INTEGER},
      pay_flag = #{payFlag,jdbcType=INTEGER},
      cleared = #{cleared,jdbcType=INTEGER},
      note = #{note,jdbcType=VARCHAR},
      manager_id = #{managerId,jdbcType=INTEGER},
      payer_id = #{payerId,jdbcType=INTEGER},
      handle_time = #{handleTime,jdbcType=TIMESTAMP},
      ensure_emp_id = #{ensureEmpId,jdbcType=INTEGER},
      ensure_emp_name = #{ensureEmpName,jdbcType=VARCHAR},
      ensure_date = #{ensureDate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
	<select id="selectRepairApplicationRecords" parameterType="java.util.Map" resultType="service.logisticsManage.PensionRepairExtend">
		select pr.name as roomName,
		pf.id as floorId,
		pf.name as floorName,
		pbuilding.id as buildId,
		pbuilding.name as buildName,
		pre.repairer_id as repairerId,
		pee.name as repairerName,
		pre.repair_detail as repairDetail,
		pre.apply_time as applyTime,
		pre.older_id as olderId,
		po.name as olderName,
		pre.id as id,
		pre.send_flag as sendFlag,
		pre.handle_flag as handleFlag,
		pre.manager_id as managerId,
		pre.cleared as cleared,
		pre.repair_type as repairType,
		pre.pay_flag as payFLag,
		pre.handle_time as repairDate
		from pension_repair pre
		join pension_room pr
		on pre.room_id = pr.id
		join pension_floor pf
		on pr.floor_id = pf.id
		join pension_building pbuilding
		on pf.build_id = pbuilding.id
		left join pension_older po
		on pre.older_id = po.id
		left join pension_employee pe
		on pre.manager_id = pe.id
		left join pension_employee pee
		on pre.repairer_id = pee.id
		where pre.cleared = 2
		<if test="managerId != null &amp;&amp; managerId != ''">
			and pe.id = #{managerId,jdbcType=INTEGER}
	 </if>
		<if test="startDate != null &amp;&amp; startDate != ''">
			and ( pre.apply_time &gt;= #{startDate,jdbcType=TIMESTAMP})
	 </if>
		<if test="endDate != null &amp;&amp; endDate != ''">
			and ( pre.apply_time &lt; #{endDate,jdbcType=TIMESTAMP})
	</if>
		<if test="olderId != null &amp;&amp; olderId != ''">
			and pre.older_id = #{olderId,jdbcType=INTEGER}
	 </if>
		<if test="sendFlag != 0">
			and pre.send_flag= #{sendFlag,jdbcType=INTEGER}
 	  </if>
		<if test="handleFlag != 0">
			and pre.handle_flag= #{handleFlag,jdbcType=INTEGER}
 	  </if>
		<if test="repairId != null &amp;&amp; repairId != ''">
			and pre.id= #{repairId,jdbcType=INTEGER}
	  </if>
		<if test="repairerId != null &amp;&amp; repairerId != ''">
			and pre.repairer_id= #{repairerId,jdbcType=INTEGER}
	  </if>
		order by pre.apply_time desc
	</select>
	<select id="selectRepairCountRecords" parameterType="java.util.Map" resultType="service.logisticsManage.RepairCount">

		select proom.name as roomName,
		proom.floorName as floorName,
		proom.buildName as buildName,
		pr.repair_type as repairType,
		count(pr.id) as repairCount
		from pension_repair pr
		join pension_room proom
		on pr.room_id = proom.id
		join pension_floor pf
		on proom.floor_id = pf.id
		join pension_building pb
		on pf.build_id = pb.id
		where pr.cleared = 2
		and pr.handle_flag = 1
		<if test="startDate != null &amp;&amp; startDate != ''">
			and pr.apply_time &gt;= #{startDate,jdbcType=TIMESTAMP}
	 </if>
		<if test="endDate != null &amp;&amp; endDate != ''">
			and pr.apply_time &lt; #{endDate,jdbcType=TIMESTAMP}
	 </if>
		<if test="roomId != null &amp;&amp; roomId != ''">
			and pr.room_id = #{roomId,jdbcType=INTEGER}
	 </if>
		<if test="floorId != null &amp;&amp; floorId != ''">
			and pf.id = #{floorId,jdbcType=INTEGER}
	 </if>
		<if test="buildId != null &amp;&amp; buildId != ''">
			and pb.id = #{buildId,jdbcType=INTEGER}
	 </if>
		group by proom.name, proom.floorName, proom.buildName, pr.repair_type
		order by buildName asc ,floorName asc ,roomName asc ,repairType asc
	</select>

	<select id="selectRepairRecordByDate" parameterType="java.util.Map" resultType="service.logisticsManage.RepairCount">

		select proom.name as roomName,
		proom.floorName as floorName,
		proom.buildName as buildName,
		count(pr.id) as repairCount
		from pension_repair pr
		join pension_room proom
		on pr.room_id = proom.id
		join pension_floor pf
		on proom.floor_id = pf.id
		join pension_building pb
		on pf.build_id = pb.id
		where pr.cleared = 2
		and pr.send_flag = 1
		and pr.handle_flag = 1
		<if test="startDate != null &amp;&amp; startDate != ''">
			and unix_timestamp(pr.apply_time) &gt;= unix_timestamp(#{startDate})
		</if>
		<if test="endDate != null &amp;&amp; endDate != ''">
			and unix_timestamp(pr.apply_time) &lt;= unix_timestamp(#{endDate})
	 </if>
		<if test="sortClass == 'buildName'">
			group by proom.buildName
	 </if>
		<if test="sortClass == 'floorName'">
			group by proom.floorName
	 </if>
		<if test="sortClass == null ">
			group by proom.name, proom.floorName, proom.buildName
	 </if>

	</select>

</mapper>