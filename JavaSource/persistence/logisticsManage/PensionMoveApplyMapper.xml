<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="persistence.logisticsManage.PensionMoveApplyMapper">
  <resultMap id="BaseResultMap" type="domain.logisticsManage.PensionMoveApply">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Mar 03 11:04:52 CST 2014.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="older_id" jdbcType="INTEGER" property="olderId" />
    <result column="move_type" jdbcType="INTEGER" property="moveType" />
    <result column="move_detail" jdbcType="VARCHAR" property="moveDetail" />
    <result column="apply_time" jdbcType="TIMESTAMP" property="applyTime" />
    <result column="move_time" jdbcType="TIMESTAMP" property="moveTime" />
    <result column="finish_flag" jdbcType="INTEGER" property="finishFlag" />
    <result column="send_flag" jdbcType="INTEGER" property="sendFlag" />
    <result column="finish_time" jdbcType="TIMESTAMP" property="finishTime" />
    <result column="pay_flag" jdbcType="INTEGER" property="payFlag" />
    <result column="processor_id" jdbcType="INTEGER" property="processorId" />
    <result column="cleared" jdbcType="INTEGER" property="cleared" />
    <result column="note" jdbcType="VARCHAR" property="note" />
    <result column="payer_id" jdbcType="INTEGER" property="payerId" />
    <result column="ensure_emp_id" jdbcType="INTEGER" property="ensureEmpId" />
    <result column="ensure_emp_name" jdbcType="VARCHAR" property="ensureEmpName" />
    <result column="ensure_date" jdbcType="TIMESTAMP" property="ensureDate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Mar 03 11:04:52 CST 2014.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Mar 03 11:04:52 CST 2014.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Mar 03 11:04:52 CST 2014.
    -->
    id, older_id, move_type, move_detail, apply_time, move_time, finish_flag, send_flag, 
    finish_time, pay_flag, processor_id, cleared, note, payer_id, ensure_emp_id, ensure_emp_name, 
    ensure_date
  </sql>
  <select id="selectByExample" parameterType="domain.logisticsManage.PensionMoveApplyExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Mar 03 11:04:52 CST 2014.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from pension_move_apply
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Mar 03 11:04:52 CST 2014.
    -->
    select 
    <include refid="Base_Column_List" />
    from pension_move_apply
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Mar 03 11:04:52 CST 2014.
    -->
    delete from pension_move_apply
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="domain.logisticsManage.PensionMoveApplyExample">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Mar 03 11:04:52 CST 2014.
    -->
    delete from pension_move_apply
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="domain.logisticsManage.PensionMoveApply">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Mar 03 11:04:52 CST 2014.
    -->
    insert into pension_move_apply (id, older_id, move_type, 
      move_detail, apply_time, move_time, 
      finish_flag, send_flag, finish_time, 
      pay_flag, processor_id, cleared, 
      note, payer_id, ensure_emp_id, 
      ensure_emp_name, ensure_date)
    values (#{id,jdbcType=INTEGER}, #{olderId,jdbcType=INTEGER}, #{moveType,jdbcType=INTEGER}, 
      #{moveDetail,jdbcType=VARCHAR}, #{applyTime,jdbcType=TIMESTAMP}, #{moveTime,jdbcType=TIMESTAMP}, 
      #{finishFlag,jdbcType=INTEGER}, #{sendFlag,jdbcType=INTEGER}, #{finishTime,jdbcType=TIMESTAMP}, 
      #{payFlag,jdbcType=INTEGER}, #{processorId,jdbcType=INTEGER}, #{cleared,jdbcType=INTEGER}, 
      #{note,jdbcType=VARCHAR}, #{payerId,jdbcType=INTEGER}, #{ensureEmpId,jdbcType=INTEGER}, 
      #{ensureEmpName,jdbcType=VARCHAR}, #{ensureDate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" keyProperty="id" parameterType="domain.logisticsManage.PensionMoveApply" useGeneratedKeys="true">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Mar 03 11:04:52 CST 2014.
    -->
    insert into pension_move_apply
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="olderId != null">
        older_id,
      </if>
      <if test="moveType != null">
        move_type,
      </if>
      <if test="moveDetail != null">
        move_detail,
      </if>
      <if test="applyTime != null">
        apply_time,
      </if>
      <if test="moveTime != null">
        move_time,
      </if>
      <if test="finishFlag != null">
        finish_flag,
      </if>
      <if test="sendFlag != null">
        send_flag,
      </if>
      <if test="finishTime != null">
        finish_time,
      </if>
      <if test="payFlag != null">
        pay_flag,
      </if>
      <if test="processorId != null">
        processor_id,
      </if>
      <if test="cleared != null">
        cleared,
      </if>
      <if test="note != null">
        note,
      </if>
      <if test="payerId != null">
        payer_id,
      </if>
      <if test="ensureEmpId != null">
        ensure_emp_id,
      </if>
      <if test="ensureEmpName != null">
        ensure_emp_name,
      </if>
      <if test="ensureDate != null">
        ensure_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="olderId != null">
        #{olderId,jdbcType=INTEGER},
      </if>
      <if test="moveType != null">
        #{moveType,jdbcType=INTEGER},
      </if>
      <if test="moveDetail != null">
        #{moveDetail,jdbcType=VARCHAR},
      </if>
      <if test="applyTime != null">
        #{applyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="moveTime != null">
        #{moveTime,jdbcType=TIMESTAMP},
      </if>
      <if test="finishFlag != null">
        #{finishFlag,jdbcType=INTEGER},
      </if>
      <if test="sendFlag != null">
        #{sendFlag,jdbcType=INTEGER},
      </if>
      <if test="finishTime != null">
        #{finishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="payFlag != null">
        #{payFlag,jdbcType=INTEGER},
      </if>
      <if test="processorId != null">
        #{processorId,jdbcType=INTEGER},
      </if>
      <if test="cleared != null">
        #{cleared,jdbcType=INTEGER},
      </if>
      <if test="note != null">
        #{note,jdbcType=VARCHAR},
      </if>
      <if test="payerId != null">
        #{payerId,jdbcType=INTEGER},
      </if>
      <if test="ensureEmpId != null">
        #{ensureEmpId,jdbcType=INTEGER},
      </if>
      <if test="ensureEmpName != null">
        #{ensureEmpName,jdbcType=VARCHAR},
      </if>
      <if test="ensureDate != null">
        #{ensureDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="domain.logisticsManage.PensionMoveApplyExample" resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Mar 03 11:04:52 CST 2014.
    -->
    select count(*) from pension_move_apply
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Mar 03 11:04:52 CST 2014.
    -->
    update pension_move_apply
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.olderId != null">
        older_id = #{record.olderId,jdbcType=INTEGER},
      </if>
      <if test="record.moveType != null">
        move_type = #{record.moveType,jdbcType=INTEGER},
      </if>
      <if test="record.moveDetail != null">
        move_detail = #{record.moveDetail,jdbcType=VARCHAR},
      </if>
      <if test="record.applyTime != null">
        apply_time = #{record.applyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.moveTime != null">
        move_time = #{record.moveTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.finishFlag != null">
        finish_flag = #{record.finishFlag,jdbcType=INTEGER},
      </if>
      <if test="record.sendFlag != null">
        send_flag = #{record.sendFlag,jdbcType=INTEGER},
      </if>
      <if test="record.finishTime != null">
        finish_time = #{record.finishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.payFlag != null">
        pay_flag = #{record.payFlag,jdbcType=INTEGER},
      </if>
      <if test="record.processorId != null">
        processor_id = #{record.processorId,jdbcType=INTEGER},
      </if>
      <if test="record.cleared != null">
        cleared = #{record.cleared,jdbcType=INTEGER},
      </if>
      <if test="record.note != null">
        note = #{record.note,jdbcType=VARCHAR},
      </if>
      <if test="record.payerId != null">
        payer_id = #{record.payerId,jdbcType=INTEGER},
      </if>
      <if test="record.ensureEmpId != null">
        ensure_emp_id = #{record.ensureEmpId,jdbcType=INTEGER},
      </if>
      <if test="record.ensureEmpName != null">
        ensure_emp_name = #{record.ensureEmpName,jdbcType=VARCHAR},
      </if>
      <if test="record.ensureDate != null">
        ensure_date = #{record.ensureDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Mar 03 11:04:52 CST 2014.
    -->
    update pension_move_apply
    set id = #{record.id,jdbcType=INTEGER},
      older_id = #{record.olderId,jdbcType=INTEGER},
      move_type = #{record.moveType,jdbcType=INTEGER},
      move_detail = #{record.moveDetail,jdbcType=VARCHAR},
      apply_time = #{record.applyTime,jdbcType=TIMESTAMP},
      move_time = #{record.moveTime,jdbcType=TIMESTAMP},
      finish_flag = #{record.finishFlag,jdbcType=INTEGER},
      send_flag = #{record.sendFlag,jdbcType=INTEGER},
      finish_time = #{record.finishTime,jdbcType=TIMESTAMP},
      pay_flag = #{record.payFlag,jdbcType=INTEGER},
      processor_id = #{record.processorId,jdbcType=INTEGER},
      cleared = #{record.cleared,jdbcType=INTEGER},
      note = #{record.note,jdbcType=VARCHAR},
      payer_id = #{record.payerId,jdbcType=INTEGER},
      ensure_emp_id = #{record.ensureEmpId,jdbcType=INTEGER},
      ensure_emp_name = #{record.ensureEmpName,jdbcType=VARCHAR},
      ensure_date = #{record.ensureDate,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="domain.logisticsManage.PensionMoveApply">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Mar 03 11:04:52 CST 2014.
    -->
    update pension_move_apply
    <set>
      <if test="olderId != null">
        older_id = #{olderId,jdbcType=INTEGER},
      </if>
      <if test="moveType != null">
        move_type = #{moveType,jdbcType=INTEGER},
      </if>
      <if test="moveDetail != null">
        move_detail = #{moveDetail,jdbcType=VARCHAR},
      </if>
      <if test="applyTime != null">
        apply_time = #{applyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="moveTime != null">
        move_time = #{moveTime,jdbcType=TIMESTAMP},
      </if>
      <if test="finishFlag != null">
        finish_flag = #{finishFlag,jdbcType=INTEGER},
      </if>
      <if test="sendFlag != null">
        send_flag = #{sendFlag,jdbcType=INTEGER},
      </if>
      <if test="finishTime != null">
        finish_time = #{finishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="payFlag != null">
        pay_flag = #{payFlag,jdbcType=INTEGER},
      </if>
      <if test="processorId != null">
        processor_id = #{processorId,jdbcType=INTEGER},
      </if>
      <if test="cleared != null">
        cleared = #{cleared,jdbcType=INTEGER},
      </if>
      <if test="note != null">
        note = #{note,jdbcType=VARCHAR},
      </if>
      <if test="payerId != null">
        payer_id = #{payerId,jdbcType=INTEGER},
      </if>
      <if test="ensureEmpId != null">
        ensure_emp_id = #{ensureEmpId,jdbcType=INTEGER},
      </if>
      <if test="ensureEmpName != null">
        ensure_emp_name = #{ensureEmpName,jdbcType=VARCHAR},
      </if>
      <if test="ensureDate != null">
        ensure_date = #{ensureDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="domain.logisticsManage.PensionMoveApply">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Mar 03 11:04:52 CST 2014.
    -->
    update pension_move_apply
    set older_id = #{olderId,jdbcType=INTEGER},
      move_type = #{moveType,jdbcType=INTEGER},
      move_detail = #{moveDetail,jdbcType=VARCHAR},
      apply_time = #{applyTime,jdbcType=TIMESTAMP},
      move_time = #{moveTime,jdbcType=TIMESTAMP},
      finish_flag = #{finishFlag,jdbcType=INTEGER},
      send_flag = #{sendFlag,jdbcType=INTEGER},
      finish_time = #{finishTime,jdbcType=TIMESTAMP},
      pay_flag = #{payFlag,jdbcType=INTEGER},
      processor_id = #{processorId,jdbcType=INTEGER},
      cleared = #{cleared,jdbcType=INTEGER},
      note = #{note,jdbcType=VARCHAR},
      payer_id = #{payerId,jdbcType=INTEGER},
      ensure_emp_id = #{ensureEmpId,jdbcType=INTEGER},
      ensure_emp_name = #{ensureEmpName,jdbcType=VARCHAR},
      ensure_date = #{ensureDate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectMoveApplicationRecords" parameterType="java.util.Map" resultType="domain.logisticsManage.PensionMoveApplyExtend">
	select pb.id                as bedId,
	       pb.name              as bedName,
	       pr.id                as roomId,
	       pr.name              as roomName,
	       pf.id                as floorId,
	       pf.name              as floorName,
	       pbuilding.id         as buildId,
	       pbuilding.name       as buildName,
	       pma.older_id         as olderId,
	       po.name              as olderName,
	       pma.send_flag   		as sendFlag,
	       pma.move_type        as moveType,
	       pma.move_detail      as moveDetail,
	       pma.apply_time       as applyTime,
	       pma.id               as id,
	       pma.cleared          as cleared,
	       pmaa.approval_result as approvalResult,
	       pe.name              as approverName,
	       pd.name              as approverDept,
	       pma.finish_flag	    as finishFlag,
	       pma.finish_time		as finishTime,
	       pma.processor_id     as processorId,
	       pee.name				as processorName,
	       pma.pay_flag			as payFlag,
	       pma.note				as note,
	       pma.ensure_emp_name as ensureEmpName
	       
	  from pension_move_apply pma
	  join pension_older po
	    on pma.older_id = po.id
	  join pension_livingRecord plr
	    on pma.older_id = plr.older_id
	  join pension_bed pb
	    on plr.bed_id = pb.id
	  join pension_room pr
	    on pb.room_id = pr.id
	  join pension_floor pf
	    on pr.floor_id = pf.id
	  join pension_building pbuilding
	    on pf.build_id = pbuilding.id
 left join pension_move_approval pmaa
	    on pmaa.apply_id = pma.id
 left join pension_employee pe
	    on pmaa.approver_id = pe.id
 left join pension_dept pd
	    on pe.dept_id = pd.id
 left join pension_employee pee
        on pma.processor_id = pee.id	    
	 where pma.cleared = 2
	 <if test="startDate != null &amp;&amp; startDate != ''">
		  and (pma.apply_time &gt;= #{startDate,jdbcType=TIMESTAMP} or pma.apply_time is null)
	 </if>
	 <if test="endDate != null &amp;&amp; endDate != ''">
		  and (pma.apply_time &lt; #{endDate,jdbcType=TIMESTAMP} or pma.apply_time is null)
	</if>
	 <if test="olderId != null &amp;&amp; olderId != ''">
	 	  and pma.older_id = #{olderId,jdbcType=INTEGER}
	 </if>
	 <if test="applyId != null &amp;&amp; applyId != ''">
	 	  and pma.id = #{applyId,jdbcType=INTEGER}
	 </if>
	  <if test="sendFlag != 0">
	 	  and pma.send_flag  = #{sendFlag,jdbcType=INTEGER}
	 </if>
 	  <if test="approveFlag == 1">
 	  		and pmaa.approval_result is not null
 	  </if>
 	  <if test="approveFlag == 2">
 	  		and pmaa.approval_result is null
 	  </if>
 	  
  	  order by approvalResult desc, applyTime desc
  </select>
  <select id="fillField" parameterType="java.lang.Long" resultType="domain.logisticsManage.PensionMoveApplyExtend">
    select pb.id              as bedId,
		   pb.name			  as bedName,
	       pr.id              as roomId,
	       pr.name			  as roomName,
		   pf.id     	      as floorId,
	       pf.name			  as floorName,
		   pbuilding.id       as buildId,
		   pbuilding.name	  as buildName,
	       po.name			  as olderName
	  from pension_older po
	  join pension_livingRecord plr
	    on po.id = plr.older_id
	  join pension_bed pb
	    on plr.bed_id = pb.id
	  join pension_room pr
	    on pb.room_id = pr.id
	  join pension_floor pf
	    on pr.floor_id = pf.id
	  join pension_building pbuilding
	    on pf.build_id = pbuilding.id
	 where 1 = 1
	 <if test="olderId != null &amp;&amp; olderId != ''">
	 	  and po.id = #{olderId,jdbcType=INTEGER}
	 </if>
  	
  </select>
</mapper>