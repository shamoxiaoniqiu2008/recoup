<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="persistence.logisticsManage.PensionCheckApproveMapper">
  <resultMap id="BaseResultMap" type="domain.logisticsManage.PensionCheckApprove">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Dec 10 13:16:44 CST 2013.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="check_id" jdbcType="INTEGER" property="checkId" />
    <result column="approver_id" jdbcType="INTEGER" property="approverId" />
    <result column="dept_id" jdbcType="INTEGER" property="deptId" />
    <result column="refuse_reason" jdbcType="VARCHAR" property="refuseReason" />
    <result column="approve_time" jdbcType="TIMESTAMP" property="approveTime" />
    <result column="approve_result" jdbcType="VARCHAR" property="approveResult" />
    <result column="approve_type" jdbcType="INTEGER" property="approveType" />
    <result column="cleared" jdbcType="INTEGER" property="cleared" />
    <result column="note" jdbcType="VARCHAR" property="note" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Dec 10 13:16:44 CST 2013.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Dec 10 13:16:44 CST 2013.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Dec 10 13:16:44 CST 2013.
    -->
    id, check_id, approver_id, dept_id, refuse_reason, approve_time, approve_result, 
    approve_type, cleared, note
  </sql>
  <select id="selectByExample" parameterType="domain.logisticsManage.PensionCheckApproveExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Dec 10 13:16:44 CST 2013.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from pension_check_approve
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Dec 10 13:16:44 CST 2013.
    -->
    select 
    <include refid="Base_Column_List" />
    from pension_check_approve
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Dec 10 13:16:44 CST 2013.
    -->
    delete from pension_check_approve
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="domain.logisticsManage.PensionCheckApproveExample">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Dec 10 13:16:44 CST 2013.
    -->
    delete from pension_check_approve
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="domain.logisticsManage.PensionCheckApprove">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Dec 10 13:16:44 CST 2013.
    -->
    insert into pension_check_approve (id, check_id, approver_id, 
      dept_id, refuse_reason, approve_time, 
      approve_result, approve_type, cleared, 
      note)
    values (#{id,jdbcType=INTEGER}, #{checkId,jdbcType=INTEGER}, #{approverId,jdbcType=INTEGER}, 
      #{deptId,jdbcType=INTEGER}, #{refuseReason,jdbcType=VARCHAR}, #{approveTime,jdbcType=TIMESTAMP}, 
      #{approveResult,jdbcType=VARCHAR}, #{approveType,jdbcType=INTEGER}, #{cleared,jdbcType=INTEGER}, 
      #{note,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" keyProperty="id" parameterType="domain.logisticsManage.PensionCheckApprove" useGeneratedKeys="true">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Dec 10 13:16:44 CST 2013.
    -->
    insert into pension_check_approve
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="checkId != null">
        check_id,
      </if>
      <if test="approverId != null">
        approver_id,
      </if>
      <if test="deptId != null">
        dept_id,
      </if>
      <if test="refuseReason != null">
        refuse_reason,
      </if>
      <if test="approveTime != null">
        approve_time,
      </if>
      <if test="approveResult != null">
        approve_result,
      </if>
      <if test="approveType != null">
        approve_type,
      </if>
      <if test="cleared != null">
        cleared,
      </if>
      <if test="note != null">
        note,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="checkId != null">
        #{checkId,jdbcType=INTEGER},
      </if>
      <if test="approverId != null">
        #{approverId,jdbcType=INTEGER},
      </if>
      <if test="deptId != null">
        #{deptId,jdbcType=INTEGER},
      </if>
      <if test="refuseReason != null">
        #{refuseReason,jdbcType=VARCHAR},
      </if>
      <if test="approveTime != null">
        #{approveTime,jdbcType=TIMESTAMP},
      </if>
      <if test="approveResult != null">
        #{approveResult,jdbcType=VARCHAR},
      </if>
      <if test="approveType != null">
        #{approveType,jdbcType=INTEGER},
      </if>
      <if test="cleared != null">
        #{cleared,jdbcType=INTEGER},
      </if>
      <if test="note != null">
        #{note,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="domain.logisticsManage.PensionCheckApproveExample" resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Dec 10 13:16:44 CST 2013.
    -->
    select count(*) from pension_check_approve
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Dec 10 13:16:44 CST 2013.
    -->
    update pension_check_approve
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.checkId != null">
        check_id = #{record.checkId,jdbcType=INTEGER},
      </if>
      <if test="record.approverId != null">
        approver_id = #{record.approverId,jdbcType=INTEGER},
      </if>
      <if test="record.deptId != null">
        dept_id = #{record.deptId,jdbcType=INTEGER},
      </if>
      <if test="record.refuseReason != null">
        refuse_reason = #{record.refuseReason,jdbcType=VARCHAR},
      </if>
      <if test="record.approveTime != null">
        approve_time = #{record.approveTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.approveResult != null">
        approve_result = #{record.approveResult,jdbcType=VARCHAR},
      </if>
      <if test="record.approveType != null">
        approve_type = #{record.approveType,jdbcType=INTEGER},
      </if>
      <if test="record.cleared != null">
        cleared = #{record.cleared,jdbcType=INTEGER},
      </if>
      <if test="record.note != null">
        note = #{record.note,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Dec 10 13:16:44 CST 2013.
    -->
    update pension_check_approve
    set id = #{record.id,jdbcType=INTEGER},
      check_id = #{record.checkId,jdbcType=INTEGER},
      approver_id = #{record.approverId,jdbcType=INTEGER},
      dept_id = #{record.deptId,jdbcType=INTEGER},
      refuse_reason = #{record.refuseReason,jdbcType=VARCHAR},
      approve_time = #{record.approveTime,jdbcType=TIMESTAMP},
      approve_result = #{record.approveResult,jdbcType=VARCHAR},
      approve_type = #{record.approveType,jdbcType=INTEGER},
      cleared = #{record.cleared,jdbcType=INTEGER},
      note = #{record.note,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="domain.logisticsManage.PensionCheckApprove">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Dec 10 13:16:44 CST 2013.
    -->
    update pension_check_approve
    <set>
      <if test="checkId != null">
        check_id = #{checkId,jdbcType=INTEGER},
      </if>
      <if test="approverId != null">
        approver_id = #{approverId,jdbcType=INTEGER},
      </if>
      <if test="deptId != null">
        dept_id = #{deptId,jdbcType=INTEGER},
      </if>
      <if test="refuseReason != null">
        refuse_reason = #{refuseReason,jdbcType=VARCHAR},
      </if>
      <if test="approveTime != null">
        approve_time = #{approveTime,jdbcType=TIMESTAMP},
      </if>
      <if test="approveResult != null">
        approve_result = #{approveResult,jdbcType=VARCHAR},
      </if>
      <if test="approveType != null">
        approve_type = #{approveType,jdbcType=INTEGER},
      </if>
      <if test="cleared != null">
        cleared = #{cleared,jdbcType=INTEGER},
      </if>
      <if test="note != null">
        note = #{note,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="domain.logisticsManage.PensionCheckApprove">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Dec 10 13:16:44 CST 2013.
    -->
    update pension_check_approve
    set check_id = #{checkId,jdbcType=INTEGER},
      approver_id = #{approverId,jdbcType=INTEGER},
      dept_id = #{deptId,jdbcType=INTEGER},
      refuse_reason = #{refuseReason,jdbcType=VARCHAR},
      approve_time = #{approveTime,jdbcType=TIMESTAMP},
      approve_result = #{approveResult,jdbcType=VARCHAR},
      approve_type = #{approveType,jdbcType=INTEGER},
      cleared = #{cleared,jdbcType=INTEGER},
      note = #{note,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
   <update id="check" parameterType="java.util.Map">
  	update pension_check_approve pca
  	set pca.approve_result = #{approveResult,jdbcType=INTEGER},
  	pca.approve_time= #{currentTime,jdbcType=TIMESTAMP},
  	pca.approver_id= #{approverId,jdbcType=INTEGER}
  	<if test="refuseReason != null &amp;&amp; refuseReason != ''">
  		,pca.refuse_reason = #{refuseReason,jdbcType=VARCHAR}
	</if>
  	where pca.check_id = #{checkId,jdbcType=INTEGER}
  	and pca.dept_id = #{deptId,jdbcType=INTEGER}
  </update>
  <select id="selectInvestigatationRecords" parameterType="java.util.Map" resultType="domain.logisticsManage.PensionCheckExtend">
    select pr.name            as roomName,
	       pr.id              as roomId,
	       pf.name            as floorName,
	       pf.id              as floorId,
	       pb.name            as buildName,
	       pb.id              as buildId,
	       pca.approve_time	  as approveTime,
	       pca.approve_result as approveResult,
	       pc.id			  as id,
	       pca.cleared        as cleared,
           pc.check_time      as checkTime,
		   pc.check_type	  as checkType,
		   pc.check_result	  as checkResult,
	       pca.refuse_reason  as refuseReason
			
	  from pension_check pc
	  join pension_check_approve pca
	    on pc.id = pca.check_id
	  join pension_room pr
	    on pc.room_id = pr.id
	  join pension_floor pf
	    on pr.floor_id = pf.id
	  join pension_building pb
	    on pf.build_id = pb.id
	 where pca.cleared = 2
	 <if test="startDate != null &amp;&amp; startDate != ''">
		  and pc.check_time &gt;= #{startDate,jdbcType=TIMESTAMP}
	 </if>
	 <if test="endDate != null &amp;&amp; endDate != ''">
		  and pc.check_time &lt; #{endDate,jdbcType=TIMESTAMP}
	 </if>
	 <if test="checkId != null &amp;&amp; checkId != ''">
	 	  and pca.check_id = #{checkId,jdbcType=INTEGER}
	 </if>
	 <if test="deptId != null &amp;&amp; deptId != ''">
	 	  and pca.dept_id = #{deptId,jdbcType=INTEGER}
	 </if>
	 <if test="ensureFlag == 1">
	 	  and pca.approve_time is not null
	 </if>
	 <if test="ensureFlag == 2">
	 	  and pca.approve_time is null
	 </if>
  	 order by checkTime desc
  </select>
  <select id="selectApproveResults" parameterType="java.lang.Long" resultType="domain.logisticsManage.PensionCheckApproveExtend">
	select pca.approve_result as approveResult,
	       pca.approve_time   as approveTime,	      
	       pd.name            as deptName,
	       pe.name				  as approverName,
	       pca.id			     as id,
	       pca.approve_type	  as approveType,
	       pca.refuse_reason  as refuseReason
	  from pension_check_approve pca
	  join pension_dept pd
	    on pca.dept_id = pd.id
 left join pension_employee pe
	    on pca.approver_id = pe.id
	 where 1 = 1
	 <if test="checkId != null &amp;&amp; checkId != ''">
	 	  and pca.check_id = #{checkId,jdbcType=INTEGER}
	 </if>
  
  </select>
</mapper>