<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="persistence.logisticsManage.PensionChangeroomMapper">
  <resultMap id="BaseResultMap" type="domain.logisticsManage.PensionChangeroom">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Dec 24 13:52:14 CST 2013.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="apply_id" jdbcType="INTEGER" property="applyId" />
    <result column="oldbed_id" jdbcType="INTEGER" property="oldbedId" />
    <result column="newbed_id" jdbcType="INTEGER" property="newbedId" />
    <result column="mover_id" jdbcType="INTEGER" property="moverId" />
    <result column="changeroom_flag" jdbcType="INTEGER" property="changeroomFlag" />
    <result column="cleared" jdbcType="INTEGER" property="cleared" />
    <result column="note" jdbcType="VARCHAR" property="note" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Dec 24 13:52:14 CST 2013.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Dec 24 13:52:14 CST 2013.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Dec 24 13:52:14 CST 2013.
    -->
    id, apply_id, oldbed_id, newbed_id, mover_id, changeroom_flag, cleared, note
  </sql>
  <select id="selectByExample" parameterType="domain.logisticsManage.PensionChangeroomExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Dec 24 13:52:14 CST 2013.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from pension_changeroom
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Dec 24 13:52:14 CST 2013.
    -->
    select 
    <include refid="Base_Column_List" />
    from pension_changeroom
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Dec 24 13:52:14 CST 2013.
    -->
    delete from pension_changeroom
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="domain.logisticsManage.PensionChangeroomExample">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Dec 24 13:52:14 CST 2013.
    -->
    delete from pension_changeroom
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="domain.logisticsManage.PensionChangeroom">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Dec 24 13:52:14 CST 2013.
    -->
    insert into pension_changeroom (id, apply_id, oldbed_id, 
      newbed_id, mover_id, changeroom_flag, 
      cleared, note)
    values (#{id,jdbcType=INTEGER}, #{applyId,jdbcType=INTEGER}, #{oldbedId,jdbcType=INTEGER}, 
      #{newbedId,jdbcType=INTEGER}, #{moverId,jdbcType=INTEGER}, #{changeroomFlag,jdbcType=INTEGER}, 
      #{cleared,jdbcType=INTEGER}, #{note,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" keyProperty="id" parameterType="domain.logisticsManage.PensionChangeroom" useGeneratedKeys="true">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Dec 24 13:52:14 CST 2013.
    -->
    insert into pension_changeroom
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="applyId != null">
        apply_id,
      </if>
      <if test="oldbedId != null">
        oldbed_id,
      </if>
      <if test="newbedId != null">
        newbed_id,
      </if>
      <if test="moverId != null">
        mover_id,
      </if>
      <if test="changeroomFlag != null">
        changeroom_flag,
      </if>
      <if test="cleared != null">
        cleared,
      </if>
      <if test="note != null">
        note,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="applyId != null">
        #{applyId,jdbcType=INTEGER},
      </if>
      <if test="oldbedId != null">
        #{oldbedId,jdbcType=INTEGER},
      </if>
      <if test="newbedId != null">
        #{newbedId,jdbcType=INTEGER},
      </if>
      <if test="moverId != null">
        #{moverId,jdbcType=INTEGER},
      </if>
      <if test="changeroomFlag != null">
        #{changeroomFlag,jdbcType=INTEGER},
      </if>
      <if test="cleared != null">
        #{cleared,jdbcType=INTEGER},
      </if>
      <if test="note != null">
        #{note,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="domain.logisticsManage.PensionChangeroomExample" resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Dec 24 13:52:14 CST 2013.
    -->
    select count(*) from pension_changeroom
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Dec 24 13:52:14 CST 2013.
    -->
    update pension_changeroom
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.applyId != null">
        apply_id = #{record.applyId,jdbcType=INTEGER},
      </if>
      <if test="record.oldbedId != null">
        oldbed_id = #{record.oldbedId,jdbcType=INTEGER},
      </if>
      <if test="record.newbedId != null">
        newbed_id = #{record.newbedId,jdbcType=INTEGER},
      </if>
      <if test="record.moverId != null">
        mover_id = #{record.moverId,jdbcType=INTEGER},
      </if>
      <if test="record.changeroomFlag != null">
        changeroom_flag = #{record.changeroomFlag,jdbcType=INTEGER},
      </if>
      <if test="record.cleared != null">
        cleared = #{record.cleared,jdbcType=INTEGER},
      </if>
      <if test="record.note != null">
        note = #{record.note,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Dec 24 13:52:14 CST 2013.
    -->
    update pension_changeroom
    set id = #{record.id,jdbcType=INTEGER},
      apply_id = #{record.applyId,jdbcType=INTEGER},
      oldbed_id = #{record.oldbedId,jdbcType=INTEGER},
      newbed_id = #{record.newbedId,jdbcType=INTEGER},
      mover_id = #{record.moverId,jdbcType=INTEGER},
      changeroom_flag = #{record.changeroomFlag,jdbcType=INTEGER},
      cleared = #{record.cleared,jdbcType=INTEGER},
      note = #{record.note,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="domain.logisticsManage.PensionChangeroom">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Dec 24 13:52:14 CST 2013.
    -->
    update pension_changeroom
    <set>
      <if test="applyId != null">
        apply_id = #{applyId,jdbcType=INTEGER},
      </if>
      <if test="oldbedId != null">
        oldbed_id = #{oldbedId,jdbcType=INTEGER},
      </if>
      <if test="newbedId != null">
        newbed_id = #{newbedId,jdbcType=INTEGER},
      </if>
      <if test="moverId != null">
        mover_id = #{moverId,jdbcType=INTEGER},
      </if>
      <if test="changeroomFlag != null">
        changeroom_flag = #{changeroomFlag,jdbcType=INTEGER},
      </if>
      <if test="cleared != null">
        cleared = #{cleared,jdbcType=INTEGER},
      </if>
      <if test="note != null">
        note = #{note,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="domain.logisticsManage.PensionChangeroom">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Dec 24 13:52:14 CST 2013.
    -->
    update pension_changeroom
    set apply_id = #{applyId,jdbcType=INTEGER},
      oldbed_id = #{oldbedId,jdbcType=INTEGER},
      newbed_id = #{newbedId,jdbcType=INTEGER},
      mover_id = #{moverId,jdbcType=INTEGER},
      changeroom_flag = #{changeroomFlag,jdbcType=INTEGER},
      cleared = #{cleared,jdbcType=INTEGER},
      note = #{note,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
 <select id="selectChangeroomApplicationRecords" parameterType="java.lang.Long" resultType="domain.logisticsManage.PensionChangeroomExtend">
	select npb.id       as newbedId,
	       npb.name     as newBedName,
	       npr.id       as newRoomId,
	       npr.name     as newRoomName,
	       npf.id       as newFloorId,
	       npf.name     as newFloorName,
	       npbing.id    as newBuildId,
	       npbing.name  as newBuildName,
	       opb.id       as oldBedId,
	       opb.name     as oldBedName,
	       opr.id       as oldRoomId,
	       opr.name     as oldRoomName,
	       opf.id       as oldFloorId,
	       opf.name     as oldFloorName,
	       opbing.id    as oldBuildId,
	       opbing.name  as oldBuildName,
	       pe.name      as moverName,
	       pcr.mover_id as moverId,
	       pcr.cleared  as cleared,
	       pcr.id       as id,
	       po.id        as olderId,
	       po.name      as olderName,
		   pcr.changeroom_flag as changeroomFlag
	  from pension_changeroom pcr
	  join pension_move_apply pma
	    on pcr.apply_id = pma.id
	  join pension_older po
	    on pma.older_id = po.id
	    
	  join pension_bed opb
	    on pcr.oldbed_id = opb.id
	  join pension_room opr
	    on opb.room_id = opr.id
	  join pension_floor opf
	    on opr.floor_id = opf.id
	  join pension_building opbing
	    on opf.build_id = opbing.id
	    
	  left join pension_bed npb
	    on pcr.newbed_id = npb.id
	  left join pension_room npr
	    on npb.room_id = npr.id
	  left join pension_floor npf
	    on npr.floor_id = npf.id
	  left join pension_building npbing
	    on npf.build_id = npbing.id
	    
	  left join pension_employee pe
	    on pcr.mover_id = pe.id
	 where pcr.cleared = 2
	 <if test="applyId != null &amp;&amp; applyId != ''">
	   and pcr.apply_id = #{applyId,jdbcType=INTEGER}
	 </if> 
  </select>
  <select id="fillBedField" parameterType="java.lang.Long" resultType="domain.logisticsManage.PensionChangeroomExtend">
	select pb.id	      as newbedId,
		   pb.name		  as newBedname,
           pr.id          as newRoomId,
	       pr.name        as newRoomName,
	       pf.id          as newFloorId,
	       pf.name        as newFloorName,
	       pbuilding.id   as newBuildId,
	       pbuilding.name as newBuildName
	  from pension_bed pb	  
	  join pension_room pr
	    on pb.room_id = pr.id
	  join pension_floor pf
	    on pr.floor_id = pf.id
	  join pension_building pbuilding
	    on pf.build_id = pbuilding.id
	 where 1 = 1
  	<if test="newbedId != null">
        and pb.id = #{newbedId,jdbcType=INTEGER}
     </if>
  </select>
</mapper>