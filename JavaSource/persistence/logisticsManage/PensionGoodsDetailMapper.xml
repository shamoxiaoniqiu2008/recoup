<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="persistence.logisticsManage.PensionGoodsDetailMapper">
	<resultMap id="BaseResultMap" type="domain.logisticsManage.PensionGoodsDetail">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Tue Oct 29 
			15:30:49 GMT+08:00 2013. -->
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="repair_id" property="repairId" jdbcType="INTEGER" />
		<result column="item_id" property="itemId" jdbcType="INTEGER" />
		<result column="item_name" property="itemName" jdbcType="VARCHAR" />
		<result column="item_qty" property="itemQty" jdbcType="REAL" />
		<result column="item_state" property="itemState" jdbcType="INTEGER" />
		<result column="cleared" property="cleared" jdbcType="INTEGER" />
		<result column="note" property="note" jdbcType="VARCHAR" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Tue Oct 29 
			15:30:49 GMT+08:00 2013. -->
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Tue Oct 29 
			15:30:49 GMT+08:00 2013. -->
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Tue Oct 29 
			15:30:49 GMT+08:00 2013. -->
		id, repair_id, item_id, item_name, item_qty, item_state, cleared, note
	</sql>
	<select id="selectByExample" resultMap="BaseResultMap"
		parameterType="domain.logisticsManage.PensionGoodsDetailExample">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Tue Oct 29 
			15:30:49 GMT+08:00 2013. -->
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from pension_goods_detail
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Long">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Tue Oct 29 
			15:30:49 GMT+08:00 2013. -->
		select
		<include refid="Base_Column_List" />
		from pension_goods_detail
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Tue Oct 29 
			15:30:49 GMT+08:00 2013. -->
		delete from pension_goods_detail
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample" parameterType="domain.logisticsManage.PensionGoodsDetailExample">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Tue Oct 29 
			15:30:49 GMT+08:00 2013. -->
		delete from pension_goods_detail
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="domain.logisticsManage.PensionGoodsDetail">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Tue Oct 29 
			15:30:49 GMT+08:00 2013. -->
		insert into pension_goods_detail (id, repair_id, item_id,
		item_name,
		item_qty, item_state,
		cleared, note)
		values (#{id,jdbcType=INTEGER},
		#{repairId,jdbcType=INTEGER},
		#{itemId,jdbcType=INTEGER},
		#{itemName,jdbcType=VARCHAR}, #{itemQty,jdbcType=REAL},
		#{itemState,jdbcType=INTEGER},
		#{cleared,jdbcType=INTEGER},
		#{note,jdbcType=VARCHAR})
	</insert>
	<insert id="insertSelective" useGeneratedKeys="true"
		keyProperty="id" parameterType="domain.logisticsManage.PensionGoodsDetail">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Tue Oct 29 
			15:30:49 GMT+08:00 2013. -->
		insert into pension_goods_detail
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="repairId != null">
				repair_id,
			</if>
			<if test="itemId != null">
				item_id,
			</if>
			<if test="itemName != null">
				item_name,
			</if>
			<if test="itemQty != null">
				item_qty,
			</if>
			<if test="itemState != null">
				item_state,
			</if>
			<if test="cleared != null">
				cleared,
			</if>
			<if test="note != null">
				note,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="repairId != null">
				#{repairId,jdbcType=INTEGER},
			</if>
			<if test="itemId != null">
				#{itemId,jdbcType=INTEGER},
			</if>
			<if test="itemName != null">
				#{itemName,jdbcType=VARCHAR},
			</if>
			<if test="itemQty != null">
				#{itemQty,jdbcType=REAL},
			</if>
			<if test="itemState != null">
				#{itemState,jdbcType=INTEGER},
			</if>
			<if test="cleared != null">
				#{cleared,jdbcType=INTEGER},
			</if>
			<if test="note != null">
				#{note,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="domain.logisticsManage.PensionGoodsDetailExample"
		resultType="java.lang.Integer">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Tue Oct 29 
			15:30:49 GMT+08:00 2013. -->
		select count(*) from pension_goods_detail
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Tue Oct 29 
			15:30:49 GMT+08:00 2013. -->
		update pension_goods_detail
		<set>
			<if test="record.id != null">
				id = #{record.id,jdbcType=INTEGER},
			</if>
			<if test="record.repairId != null">
				repair_id = #{record.repairId,jdbcType=INTEGER},
			</if>
			<if test="record.itemId != null">
				item_id = #{record.itemId,jdbcType=INTEGER},
			</if>
			<if test="record.itemName != null">
				item_name = #{record.itemName,jdbcType=VARCHAR},
			</if>
			<if test="record.itemQty != null">
				item_qty = #{record.itemQty,jdbcType=REAL},
			</if>
			<if test="record.itemState != null">
				item_state = #{record.itemState,jdbcType=INTEGER},
			</if>
			<if test="record.cleared != null">
				cleared = #{record.cleared,jdbcType=INTEGER},
			</if>
			<if test="record.note != null">
				note = #{record.note,jdbcType=VARCHAR},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Tue Oct 29 
			15:30:49 GMT+08:00 2013. -->
		update pension_goods_detail
		set id = #{record.id,jdbcType=INTEGER},
		repair_id = #{record.repairId,jdbcType=INTEGER},
		item_id =
		#{record.itemId,jdbcType=INTEGER},
		item_name =
		#{record.itemName,jdbcType=VARCHAR},
		item_qty =
		#{record.itemQty,jdbcType=REAL},
		item_state =
		#{record.itemState,jdbcType=INTEGER},
		cleared =
		#{record.cleared,jdbcType=INTEGER},
		note =
		#{record.note,jdbcType=VARCHAR}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="domain.logisticsManage.PensionGoodsDetail">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Tue Oct 29 
			15:30:49 GMT+08:00 2013. -->
		update pension_goods_detail
		<set>
			<if test="repairId != null">
				repair_id = #{repairId,jdbcType=INTEGER},
			</if>
			<if test="itemId != null">
				item_id = #{itemId,jdbcType=INTEGER},
			</if>
			<if test="itemName != null">
				item_name = #{itemName,jdbcType=VARCHAR},
			</if>
			<if test="itemQty != null">
				item_qty = #{itemQty,jdbcType=REAL},
			</if>
			<if test="itemState != null">
				item_state = #{itemState,jdbcType=INTEGER},
			</if>
			<if test="cleared != null">
				cleared = #{cleared,jdbcType=INTEGER},
			</if>
			<if test="note != null">
				note = #{note,jdbcType=VARCHAR},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="domain.logisticsManage.PensionGoodsDetail">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Tue Oct 29 
			15:30:49 GMT+08:00 2013. -->
		update pension_goods_detail
		set repair_id =
		#{repairId,jdbcType=INTEGER},
		item_id = #{itemId,jdbcType=INTEGER},
		item_name = #{itemName,jdbcType=VARCHAR},
		item_qty =
		#{itemQty,jdbcType=REAL},
		item_state = #{itemState,jdbcType=INTEGER},
		cleared = #{cleared,jdbcType=INTEGER},
		note = #{note,jdbcType=VARCHAR}
		where id = #{id,jdbcType=INTEGER}
	</update>
	<select id="selectConsumptionRecords" parameterType="java.util.Map"
		resultType="domain.logisticsManage.PensionGoodsDetail">
		select pgd.item_id as itemId,
		pgd.item_name as itemName,
		sum(pgd.item_qty) as itemQty
		from pension_goods_detail pgd
		join
		pension_repair pr
		on pgd.repair_id = pr.id
		where 1 = 1
		<if test="startDate != null &amp;&amp; startDate != ''">
			and pr.handle_time &gt;= #{startDate,jdbcType=TIMESTAMP}
		</if>
		<if test="endDate != null &amp;&amp; endDate != ''">
			and pr.handle_time &lt; #{endDate,jdbcType=TIMESTAMP}
		</if>
		<if test="itemId != null &amp;&amp; itemId != ''">
			and pgd.item_id = #{itemId,jdbcType=INTEGER}
		</if>
		group by pgd.item_id, pgd.item_name
	</select>

	<select id="selectRemainRecords" parameterType="java.util.Map"
		resultType="domain.logisticsManage.PensionGoodsDetail">
		select tempT.itemId as itemId,
		tempT.itemName as itemName,
		sum(tempT.itemQty) as itemQty

		from (select ps.item_id as itemId,
		ps.item_name as itemName,
		ps.storage_qty as itemQty
		from pension_storage
		ps
		where ps.type_id = 2
		<if test="itemId != null &amp;&amp; itemId != ''">
			and ps.item_id = #{itemId,jdbcType=INTEGER}
		</if>

		union all

		select psod.item_id as itemId,
		psod.item_name as itemName,
		sum(psod.out_qty) as itemQty
		from pension_storageout_detail psod
		join
		pension_storageout_record psor
		on psod.record_id = psor.id
		where
		psod.type_id = 2
		and date_format(psor.storageout_time,'%Y%m%d') &lt;=
		date_format(now(),'%Y%m%d')
		<if test="endDate != null &amp;&amp; endDate != ''">
			and psor.storageout_time &gt;=
			#{endDate,jdbcType=TIMESTAMP}
		</if>
		<if test="itemId != null &amp;&amp; itemId != ''">
			and psod.item_id = #{itemId,jdbcType=INTEGER}
		</if>
		group by psod.item_id, psod.item_name

		union all

		select psid.item_id as
		itemId,
		psid.item_name as itemName,
		-sum(psid.in_qty) as itemQty
		from
		pension_storagein_detail psid
		join pension_storagein_record psir
		on
		psid.record_id = psir.id
		where psid.type_id = 2
		and
		date_format(psir.storagein_time,'%Y%m%d') &lt;=
		date_format(now(),'%Y%m%d')
		<if test="endDate != null &amp;&amp; endDate != ''">
			and psir.storagein_time &gt;=
			#{endDate,jdbcType=TIMESTAMP}
		</if>
		<if test="itemId != null &amp;&amp; itemId != ''">
			and psid.item_id = #{itemId,jdbcType=INTEGER}
		</if>
		group by psid.item_id, psid.item_name

		) tempT

		where 1 = 1
		group by
		tempT.itemId, tempT.itemName

	</select>


	<select id="selectStorageoutRecords" parameterType="java.util.Map"
		resultType="service.stockManage.StorageOutDetailDomain">
		select pd.id,
		pd.item_id as itemId,
		pd.item_name as itemName,
		sum(pd.out_qty) as outQty,
		pd.expire_date as expireDate,
		pi.item_name as
		typeName,
		pd.unit
		from pension_storageout_detail pd,
		pension_storageout_record
		pr,
		pension_dic_itemtype pi
		where
		pd.record_id=pr.id
		and
		pd.type_id=pi.id
		and pr.cleared=2
		and pd.cleared=2
		<if test="startDate != null &amp;&amp; startDate != ''">
			and pr.storageout_time &gt;=
			#{startDate,jdbcType=TIMESTAMP}
		</if>
		<if test="endDate != null &amp;&amp; endDate != ''">
			and pr.storageout_time &lt; #{endDate,jdbcType=TIMESTAMP}
		</if>
		<if test="itemId != null &amp;&amp; itemId != ''">
			and pd.item_id = #{itemId,jdbcType=INTEGER}
		</if>
		<if test="typeId != null &amp;&amp; typeId != ''">
			and pd.type_id = #{typeId,jdbcType=INTEGER}
		</if>
		group by
		pd.item_id,
		pd.item_name,
		pi.item_name,
		pd.unit
	</select>



	<select id="selectStorageRecords" parameterType="java.util.Map"
		resultType="domain.stockManage.PensionStorage">
		select ps.id,
		ps.item_id as itemId,
		ps.item_name as itemName,
		ps.storage_qty as storageQty,
		ps.expire_date as expireDate,
		ps.purchase_price as purchasePrice,
		ps.unit,
		pi.item_name as
		typeName
		from pension_storage ps,pension_dic_itemtype pi
		where ps.type_id=pi.id
		<if test="itemId != null &amp;&amp; itemId != ''">
			and ps.item_id = #{itemId,jdbcType=INTEGER}
		</if>
		group by
		ps.item_id,
		ps.item_name,
		ps.unit
	</select>
</mapper>