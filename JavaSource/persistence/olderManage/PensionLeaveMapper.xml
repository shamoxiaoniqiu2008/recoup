<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="persistence.olderManage.PensionLeaveMapper">
	<resultMap id="BaseResultMap" type="domain.olderManage.PensionLeave">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Tue Feb 25 
			15:17:47 CST 2014. -->
		<id column="id" jdbcType="INTEGER" property="id" />
		<result column="older_id" jdbcType="INTEGER" property="olderId" />
		<result column="escortName" jdbcType="VARCHAR" property="escortname" />
		<result column="escortPhone" jdbcType="VARCHAR" property="escortphone" />
		<result column="sended" jdbcType="INTEGER" property="sended" />
		<result column="leaveReason" jdbcType="VARCHAR" property="leavereason" />
		<result column="expectLeaveTime" jdbcType="TIMESTAMP" property="expectleavetime" />
		<result column="expectBackTime" jdbcType="TIMESTAMP" property="expectbacktime" />
		<result column="realLeaveTime" jdbcType="TIMESTAMP" property="realleavetime" />
		<result column="realBackTime" jdbcType="TIMESTAMP" property="realbacktime" />
		<result column="stopFood" jdbcType="INTEGER" property="stopfood" />
		<result column="prepareFood" jdbcType="INTEGER" property="preparefood" />
		<result column="isLeaved" jdbcType="INTEGER" property="isleaved" />
		<result column="isBacked" jdbcType="INTEGER" property="isbacked" />
		<result column="backOnTime" jdbcType="INTEGER" property="backontime" />
		<result column="notes" jdbcType="VARCHAR" property="notes" />
		<result column="cleared" jdbcType="INTEGER" property="cleared" />
		<result column="final_result" jdbcType="INTEGER" property="finalResult" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Tue Feb 25 
			15:17:47 CST 2014. -->
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
                </when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
                </when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
                  </foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Tue Feb 25 
			15:17:47 CST 2014. -->
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
                </when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
                </when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
                  </foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Tue Feb 25 
			15:17:47 CST 2014. -->
		id, older_id, escortName, escortPhone, sended, leaveReason,
		expectLeaveTime, expectBackTime,
		realLeaveTime, realBackTime, stopFood,
		prepareFood, isLeaved, isBacked, backOnTime,
		notes, cleared,
		final_result
	</sql>
	<select id="selectByExample" parameterType="domain.olderManage.PensionLeaveExample"
		resultMap="BaseResultMap">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Tue Feb 25 
			15:17:47 CST 2014. -->
		select
		<if test="distinct">
			distinct
    </if>
		<include refid="Base_Column_List" />
		from pension_leave
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
    </if>
	</select>
	<select id="selectByPrimaryKey" parameterType="java.lang.Long"
		resultMap="BaseResultMap">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Tue Feb 25 
			15:17:47 CST 2014. -->
		select
		<include refid="Base_Column_List" />
		from pension_leave
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Tue Feb 25 
			15:17:47 CST 2014. -->
		delete from pension_leave
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample" parameterType="domain.olderManage.PensionLeaveExample">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Tue Feb 25 
			15:17:47 CST 2014. -->
		delete from pension_leave
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="domain.olderManage.PensionLeave">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Tue Feb 25 
			15:17:47 CST 2014. -->
		insert into pension_leave (id, older_id, escortName,
		escortPhone,
		sended, leaveReason,
		expectLeaveTime, expectBackTime, realLeaveTime,
		realBackTime, stopFood, prepareFood,
		isLeaved, isBacked, backOnTime,
		notes, cleared, final_result
		)
		values (#{id,jdbcType=INTEGER},
		#{olderId,jdbcType=INTEGER},
		#{escortname,jdbcType=VARCHAR},
		#{escortphone,jdbcType=VARCHAR}, #{sended,jdbcType=INTEGER},
		#{leavereason,jdbcType=VARCHAR},
		#{expectleavetime,jdbcType=TIMESTAMP},
		#{expectbacktime,jdbcType=TIMESTAMP},
		#{realleavetime,jdbcType=TIMESTAMP},
		#{realbacktime,jdbcType=TIMESTAMP}, #{stopfood,jdbcType=INTEGER},
		#{preparefood,jdbcType=INTEGER},
		#{isleaved,jdbcType=INTEGER},
		#{isbacked,jdbcType=INTEGER}, #{backontime,jdbcType=INTEGER},
		#{notes,jdbcType=VARCHAR}, #{cleared,jdbcType=INTEGER},
		#{finalResult,jdbcType=INTEGER}
		)
	</insert>
	<insert id="insertSelective" keyProperty="id"
		parameterType="domain.olderManage.PensionLeave" useGeneratedKeys="true">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Tue Feb 25 
			15:17:47 CST 2014. -->
		insert into pension_leave
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
      </if>
			<if test="olderId != null">
				older_id,
      </if>
			<if test="escortname != null">
				escortName,
      </if>
			<if test="escortphone != null">
				escortPhone,
      </if>
			<if test="sended != null">
				sended,
      </if>
			<if test="leavereason != null">
				leaveReason,
      </if>
			<if test="expectleavetime != null">
				expectLeaveTime,
      </if>
			<if test="expectbacktime != null">
				expectBackTime,
      </if>
			<if test="realleavetime != null">
				realLeaveTime,
      </if>
			<if test="realbacktime != null">
				realBackTime,
      </if>
			<if test="stopfood != null">
				stopFood,
      </if>
			<if test="preparefood != null">
				prepareFood,
      </if>
			<if test="isleaved != null">
				isLeaved,
      </if>
			<if test="isbacked != null">
				isBacked,
      </if>
			<if test="backontime != null">
				backOnTime,
      </if>
			<if test="notes != null">
				notes,
      </if>
			<if test="cleared != null">
				cleared,
      </if>
			<if test="finalResult != null">
				final_result,
      </if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
      </if>
			<if test="olderId != null">
				#{olderId,jdbcType=INTEGER},
      </if>
			<if test="escortname != null">
				#{escortname,jdbcType=VARCHAR},
      </if>
			<if test="escortphone != null">
				#{escortphone,jdbcType=VARCHAR},
      </if>
			<if test="sended != null">
				#{sended,jdbcType=INTEGER},
      </if>
			<if test="leavereason != null">
				#{leavereason,jdbcType=VARCHAR},
      </if>
			<if test="expectleavetime != null">
				#{expectleavetime,jdbcType=TIMESTAMP},
      </if>
			<if test="expectbacktime != null">
				#{expectbacktime,jdbcType=TIMESTAMP},
      </if>
			<if test="realleavetime != null">
				#{realleavetime,jdbcType=TIMESTAMP},
      </if>
			<if test="realbacktime != null">
				#{realbacktime,jdbcType=TIMESTAMP},
      </if>
			<if test="stopfood != null">
				#{stopfood,jdbcType=INTEGER},
      </if>
			<if test="preparefood != null">
				#{preparefood,jdbcType=INTEGER},
      </if>
			<if test="isleaved != null">
				#{isleaved,jdbcType=INTEGER},
      </if>
			<if test="isbacked != null">
				#{isbacked,jdbcType=INTEGER},
      </if>
			<if test="backontime != null">
				#{backontime,jdbcType=INTEGER},
      </if>
			<if test="notes != null">
				#{notes,jdbcType=VARCHAR},
      </if>
			<if test="cleared != null">
				#{cleared,jdbcType=INTEGER},
      </if>
			<if test="finalResult != null">
				#{finalResult,jdbcType=INTEGER},
      </if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="domain.olderManage.PensionLeaveExample"
		resultType="java.lang.Integer">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Tue Feb 25 
			15:17:47 CST 2014. -->
		select count(*) from pension_leave
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Tue Feb 25 
			15:17:47 CST 2014. -->
		update pension_leave
		<set>
			<if test="record.id != null">
				id = #{record.id,jdbcType=INTEGER},
      </if>
			<if test="record.olderId != null">
				older_id = #{record.olderId,jdbcType=INTEGER},
      </if>
			<if test="record.escortname != null">
				escortName = #{record.escortname,jdbcType=VARCHAR},
      </if>
			<if test="record.escortphone != null">
				escortPhone = #{record.escortphone,jdbcType=VARCHAR},
			</if>
			<if test="record.sended != null">
				sended = #{record.sended,jdbcType=INTEGER},
      </if>
			<if test="record.leavereason != null">
				leaveReason = #{record.leavereason,jdbcType=VARCHAR},
			</if>
			<if test="record.expectleavetime != null">
				expectLeaveTime =
				#{record.expectleavetime,jdbcType=TIMESTAMP},
      </if>
			<if test="record.expectbacktime != null">
				expectBackTime =
				#{record.expectbacktime,jdbcType=TIMESTAMP},
      </if>
			<if test="record.realleavetime != null">
				realLeaveTime =
				#{record.realleavetime,jdbcType=TIMESTAMP},
      </if>
			<if test="record.realbacktime != null">
				realBackTime = #{record.realbacktime,jdbcType=TIMESTAMP},
			</if>
			<if test="record.stopfood != null">
				stopFood = #{record.stopfood,jdbcType=INTEGER},
      </if>
			<if test="record.preparefood != null">
				prepareFood = #{record.preparefood,jdbcType=INTEGER},
			</if>
			<if test="record.isleaved != null">
				isLeaved = #{record.isleaved,jdbcType=INTEGER},
      </if>
			<if test="record.isbacked != null">
				isBacked = #{record.isbacked,jdbcType=INTEGER},
      </if>
			<if test="record.backontime != null">
				backOnTime = #{record.backontime,jdbcType=INTEGER},
      </if>
			<if test="record.notes != null">
				notes = #{record.notes,jdbcType=VARCHAR},
      </if>
			<if test="record.cleared != null">
				cleared = #{record.cleared,jdbcType=INTEGER},
      </if>
			<if test="record.finalResult != null">
				final_result = #{record.finalResult,jdbcType=INTEGER},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Tue Feb 25 
			15:17:47 CST 2014. -->
		update pension_leave
		set id = #{record.id,jdbcType=INTEGER},
		older_id =
		#{record.olderId,jdbcType=INTEGER},
		escortName =
		#{record.escortname,jdbcType=VARCHAR},
		escortPhone =
		#{record.escortphone,jdbcType=VARCHAR},
		sended =
		#{record.sended,jdbcType=INTEGER},
		leaveReason =
		#{record.leavereason,jdbcType=VARCHAR},
		expectLeaveTime =
		#{record.expectleavetime,jdbcType=TIMESTAMP},
		expectBackTime =
		#{record.expectbacktime,jdbcType=TIMESTAMP},
		realLeaveTime =
		#{record.realleavetime,jdbcType=TIMESTAMP},
		realBackTime =
		#{record.realbacktime,jdbcType=TIMESTAMP},
		stopFood =
		#{record.stopfood,jdbcType=INTEGER},
		prepareFood =
		#{record.preparefood,jdbcType=INTEGER},
		isLeaved =
		#{record.isleaved,jdbcType=INTEGER},
		isBacked =
		#{record.isbacked,jdbcType=INTEGER},
		backOnTime =
		#{record.backontime,jdbcType=INTEGER},
		notes =
		#{record.notes,jdbcType=VARCHAR},
		cleared =
		#{record.cleared,jdbcType=INTEGER},
		final_result =
		#{record.finalResult,jdbcType=INTEGER}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="domain.olderManage.PensionLeave">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Tue Feb 25 
			15:17:47 CST 2014. -->
		update pension_leave
		<set>
			<if test="olderId != null">
				older_id = #{olderId,jdbcType=INTEGER},
      </if>
			<if test="escortname != null">
				escortName = #{escortname,jdbcType=VARCHAR},
      </if>
			<if test="escortphone != null">
				escortPhone = #{escortphone,jdbcType=VARCHAR},
      </if>
			<if test="sended != null">
				sended = #{sended,jdbcType=INTEGER},
      </if>
			<if test="leavereason != null">
				leaveReason = #{leavereason,jdbcType=VARCHAR},
      </if>
			<if test="expectleavetime != null">
				expectLeaveTime = #{expectleavetime,jdbcType=TIMESTAMP},
			</if>
			<if test="expectbacktime != null">
				expectBackTime = #{expectbacktime,jdbcType=TIMESTAMP},
			</if>
			<if test="realleavetime != null">
				realLeaveTime = #{realleavetime,jdbcType=TIMESTAMP},
      </if>
			<if test="realbacktime != null">
				realBackTime = #{realbacktime,jdbcType=TIMESTAMP},
      </if>
			<if test="stopfood != null">
				stopFood = #{stopfood,jdbcType=INTEGER},
      </if>
			<if test="preparefood != null">
				prepareFood = #{preparefood,jdbcType=INTEGER},
      </if>
			<if test="isleaved != null">
				isLeaved = #{isleaved,jdbcType=INTEGER},
      </if>
			<if test="isbacked != null">
				isBacked = #{isbacked,jdbcType=INTEGER},
      </if>
			<if test="backontime != null">
				backOnTime = #{backontime,jdbcType=INTEGER},
      </if>
			<if test="notes != null">
				notes = #{notes,jdbcType=VARCHAR},
      </if>
			<if test="cleared != null">
				cleared = #{cleared,jdbcType=INTEGER},
      </if>
			<if test="finalResult != null">
				final_result = #{finalResult,jdbcType=INTEGER},
      </if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="domain.olderManage.PensionLeave">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Tue Feb 25 
			15:17:47 CST 2014. -->
		update pension_leave
		set older_id = #{olderId,jdbcType=INTEGER},
		escortName = #{escortname,jdbcType=VARCHAR},
		escortPhone =
		#{escortphone,jdbcType=VARCHAR},
		sended = #{sended,jdbcType=INTEGER},
		leaveReason = #{leavereason,jdbcType=VARCHAR},
		expectLeaveTime =
		#{expectleavetime,jdbcType=TIMESTAMP},
		expectBackTime =
		#{expectbacktime,jdbcType=TIMESTAMP},
		realLeaveTime =
		#{realleavetime,jdbcType=TIMESTAMP},
		realBackTime =
		#{realbacktime,jdbcType=TIMESTAMP},
		stopFood =
		#{stopfood,jdbcType=INTEGER},
		prepareFood =
		#{preparefood,jdbcType=INTEGER},
		isLeaved =
		#{isleaved,jdbcType=INTEGER},
		isBacked = #{isbacked,jdbcType=INTEGER},
		backOnTime = #{backontime,jdbcType=INTEGER},
		notes =
		#{notes,jdbcType=VARCHAR},
		cleared = #{cleared,jdbcType=INTEGER},
		final_result = #{finalResult,jdbcType=INTEGER}
		where id =
		#{id,jdbcType=INTEGER}
	</update>
	<select id="selectVacationApplicationRecords" parameterType="java.util.Map"
		resultType="service.olderManage.PensionLeaveExtend">
		select pb.id as bedId,
		pb.name as bedName,
		pr.id as roomId,
		pr.name as
		roomName,
		pf.id as floorId,
		pf.name as floorName,
		pbuilding.id as
		buildId,
		pbuilding.name as buildName,
		pl.expectLeaveTime as
		expectleavetime,
		pl.expectBackTime as expectbacktime,
		pl.leaveReason as
		leavereason,
		pl.escortName as escortname,
		pl.escortPhone as escortphone,
		pl.older_id as olderId,
		po.name as olderName,
		pl.id as id,
		pl.cleared as
		cleared,
		pl.sended as sended,
		pl.final_result as finalResult
		from
		pension_leave pl
		join pension_older po
		on pl.older_id = po.id
		join
		pension_livingRecord plr
		on pl.older_id = plr.older_id
		join pension_bed
		pb
		on plr.bed_id = pb.id
		join pension_room pr
		on pb.room_id = pr.id
		join
		pension_floor pf
		on pr.floor_id = pf.id
		join pension_building pbuilding
		on pf.build_id = pbuilding.id
		where pl.cleared = 2
		<if test="startDate != null &amp;&amp; startDate != ''">
			and pl.expectLeaveTime &gt;=
			#{startDate,jdbcType=TIMESTAMP}
	 </if>
		<if test="endDate != null &amp;&amp; endDate != ''">
			and pl.expectLeaveTime &lt; #{endDate,jdbcType=TIMESTAMP}
		</if>
		<if test="olderId != null &amp;&amp; olderId != ''">
			and pl.older_id = #{olderId,jdbcType=INTEGER}
	 </if>
		<if test="submitFlag != 0">
			and pl.sended = #{submitFlag,jdbcType=INTEGER}
	 </if>
		order by sended desc, expectleavetime desc
	</select>
	<select id="selectMyVacationApplicationRecords" parameterType="java.util.Map"
		resultType="service.olderManage.PensionLeaveExtend">
		select pb.id as bedId,
		pb.name as bedName,
		pr.id as roomId,
		pr.name as
		roomName,
		pf.id as floorId,
		pf.name as floorName,
		pbuilding.id as
		buildId,
		pbuilding.name as buildName,
		pl.expectLeaveTime as
		expectleavetime,
		pl.expectBackTime as expectbacktime,
		pl.leaveReason as
		leavereason,
		pl.escortName as escortname,
		pl.escortPhone as escortphone,
		pl.older_id as olderId,
		po.name as olderName,
		pl.id as id,
		pl.cleared as
		cleared,
		pl.final_result as finalResult
		from pension_leave pl
		join pension_older po
		on
		pl.older_id = po.id
		join pension_livingRecord plr
		on pl.older_id =
		plr.older_id
		join pension_bed pb
		on plr.bed_id = pb.id
		join pension_room
		pr
		on pb.room_id = pr.id
		join pension_floor pf
		on pr.floor_id = pf.id
		join pension_building pbuilding
		on pf.build_id = pbuilding.id
		join
		pension_leaveapprove pla
		on pla.leave_id = pl.id
		join pension_employee
		pe
		on pla.dept_id = pe.dept_id
		where pl.cleared = 2
		and pe.id =
		#{currentEmployeeId,jdbcType=INTEGER}
		<if test="startDate != null &amp;&amp; startDate != ''">
			and pl.expectLeaveTime &gt;=
			#{startDate,jdbcType=TIMESTAMP}
	 </if>
		<if test="endDate != null &amp;&amp; endDate != ''">
			and pl.expectLeaveTime &lt; #{endDate,jdbcType=TIMESTAMP}
		</if>
		<if test="olderId != null &amp;&amp; olderId != ''">
			and pl.older_id = #{olderId,jdbcType=INTEGER}
	 </if>
		<if test="leaveId != null &amp;&amp; leaveId != ''">
			and pl.id= #{leaveId,jdbcType=INTEGER}
	 </if>
		<if test="ensureFlag == 1">
			and pla.approveResult is not null
 	  </if>
		<if test="ensureFlag == 2">
			and pla.approveResult is null
 	  </if>
		order by approveresult desc, expectleavetime desc
	</select>
	<select id="fillField" parameterType="Long"
		resultType="service.olderManage.PensionLeaveExtend">
		select pb.id as bedId,
		pb.name as bedName,
		pr.id as roomId,
		pr.name as
		roomName,
		pf.id as floorId,
		pf.name as floorName,
		pbuilding.id as
		buildId,
		pbuilding.name as buildName,
		po.name as olderName
		from
		pension_older po
		join pension_livingRecord plr
		on po.id = plr.older_id
		join pension_bed pb
		on plr.bed_id = pb.id
		join pension_room pr
		on
		pb.room_id = pr.id
		join pension_floor pf
		on pr.floor_id = pf.id
		join
		pension_building pbuilding
		on pf.build_id = pbuilding.id
		where 1 = 1
		<if test="olderId != null &amp;&amp; olderId != ''">
			and po.id = #{olderId,jdbcType=INTEGER}
	 </if>

	</select>
</mapper>