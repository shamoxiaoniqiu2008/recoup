<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="persistence.olderManage.PensionLivingrecordMapper">
	<resultMap id="BaseResultMap" type="domain.olderManage.PensionLivingrecord">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Sat Dec 14 
			15:28:44 CST 2013. -->
		<id column="id" jdbcType="INTEGER" property="id" />
		<result column="older_id" jdbcType="INTEGER" property="olderId" />
		<result column="apply_id" jdbcType="INTEGER" property="applyId" />
		<result column="contractNum" jdbcType="VARCHAR" property="contractnum" />
		<result column="medType" jdbcType="VARCHAR" property="medtype" />
		<result column="nurseLevel_id" jdbcType="INTEGER" property="nurseLevelId" />
		<result column="bedType_id" jdbcType="INTEGER" property="bedTypeId" />
		<result column="nurse_id" jdbcType="INTEGER" property="nurseId" />
		<result column="insurance" jdbcType="VARCHAR" property="insurance" />
		<result column="handler_id" jdbcType="INTEGER" property="handlerId" />
		<result column="bed_id" jdbcType="INTEGER" property="bedId" />
		<result column="visitTime" jdbcType="TIMESTAMP" property="visittime" />
		<result column="notes" jdbcType="VARCHAR" property="notes" />
		<result column="cleared" jdbcType="INTEGER" property="cleared" />
		<result column="month_fees" jdbcType="REAL" property="monthFees" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Sat Dec 14 
			15:28:44 CST 2013. -->
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Sat Dec 14 
			15:28:44 CST 2013. -->
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Sat Dec 14 
			15:28:44 CST 2013. -->
		id, older_id, apply_id, contractNum, medType, nurseLevel_id,
		bedType_id, nurse_id,
		insurance, handler_id, bed_id, visitTime, notes,
		cleared, month_fees
	</sql>
	<select id="selectByExample" parameterType="domain.olderManage.PensionLivingrecordExample"
		resultMap="BaseResultMap">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Sat Dec 14 
			15:28:44 CST 2013. -->
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from pension_livingrecord
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" parameterType="java.lang.Long"
		resultMap="BaseResultMap">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Sat Dec 14 
			15:28:44 CST 2013. -->
		select
		<include refid="Base_Column_List" />
		from pension_livingrecord
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Sat Dec 14 
			15:28:44 CST 2013. -->
		delete from pension_livingrecord
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample" parameterType="domain.olderManage.PensionLivingrecordExample">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Sat Dec 14 
			15:28:44 CST 2013. -->
		delete from pension_livingrecord
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="domain.olderManage.PensionLivingrecord">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Sat Dec 14 
			15:28:44 CST 2013. -->
		insert into pension_livingrecord (id, older_id, apply_id,
		contractNum,
		medType, nurseLevel_id,
		bedType_id, nurse_id, insurance,
		handler_id,
		bed_id, visitTime,
		notes, cleared, month_fees
		)
		values
		(#{id,jdbcType=INTEGER}, #{olderId,jdbcType=INTEGER},
		#{applyId,jdbcType=INTEGER},
		#{contractnum,jdbcType=VARCHAR},
		#{medtype,jdbcType=VARCHAR}, #{nurseLevelId,jdbcType=INTEGER},
		#{bedTypeId,jdbcType=INTEGER}, #{nurseId,jdbcType=INTEGER},
		#{insurance,jdbcType=VARCHAR},
		#{handlerId,jdbcType=INTEGER},
		#{bedId,jdbcType=INTEGER}, #{visittime,jdbcType=TIMESTAMP},
		#{notes,jdbcType=VARCHAR}, #{cleared,jdbcType=INTEGER},
		#{monthFees,jdbcType=REAL}
		)
	</insert>
	<insert id="insertSelective" keyProperty="id"
		parameterType="domain.olderManage.PensionLivingrecord"
		useGeneratedKeys="true">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Sat Dec 14 
			15:28:44 CST 2013. -->
		insert into pension_livingrecord
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="olderId != null">
				older_id,
			</if>
			<if test="applyId != null">
				apply_id,
			</if>
			<if test="contractnum != null">
				contractNum,
			</if>
			<if test="medtype != null">
				medType,
			</if>
			<if test="nurseLevelId != null">
				nurseLevel_id,
			</if>
			<if test="bedTypeId != null">
				bedType_id,
			</if>
			<if test="nurseId != null">
				nurse_id,
			</if>
			<if test="insurance != null">
				insurance,
			</if>
			<if test="handlerId != null">
				handler_id,
			</if>
			<if test="bedId != null">
				bed_id,
			</if>
			<if test="visittime != null">
				visitTime,
			</if>
			<if test="notes != null">
				notes,
			</if>
			<if test="cleared != null">
				cleared,
			</if>
			<if test="monthFees != null">
				month_fees,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="olderId != null">
				#{olderId,jdbcType=INTEGER},
			</if>
			<if test="applyId != null">
				#{applyId,jdbcType=INTEGER},
			</if>
			<if test="contractnum != null">
				#{contractnum,jdbcType=VARCHAR},
			</if>
			<if test="medtype != null">
				#{medtype,jdbcType=VARCHAR},
			</if>
			<if test="nurseLevelId != null">
				#{nurseLevelId,jdbcType=INTEGER},
			</if>
			<if test="bedTypeId != null">
				#{bedTypeId,jdbcType=INTEGER},
			</if>
			<if test="nurseId != null">
				#{nurseId,jdbcType=INTEGER},
			</if>
			<if test="insurance != null">
				#{insurance,jdbcType=VARCHAR},
			</if>
			<if test="handlerId != null">
				#{handlerId,jdbcType=INTEGER},
			</if>
			<if test="bedId != null">
				#{bedId,jdbcType=INTEGER},
			</if>
			<if test="visittime != null">
				#{visittime,jdbcType=TIMESTAMP},
			</if>
			<if test="notes != null">
				#{notes,jdbcType=VARCHAR},
			</if>
			<if test="cleared != null">
				#{cleared,jdbcType=INTEGER},
			</if>
			<if test="monthFees != null">
				#{monthFees,jdbcType=REAL},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="domain.olderManage.PensionLivingrecordExample"
		resultType="java.lang.Integer">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Sat Dec 14 
			15:28:44 CST 2013. -->
		select count(*) from pension_livingrecord
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Sat Dec 14 
			15:28:44 CST 2013. -->
		update pension_livingrecord
		<set>
			<if test="record.id != null">
				id = #{record.id,jdbcType=INTEGER},
			</if>
			<if test="record.olderId != null">
				older_id = #{record.olderId,jdbcType=INTEGER},
			</if>
			<if test="record.applyId != null">
				apply_id = #{record.applyId,jdbcType=INTEGER},
			</if>
			<if test="record.contractnum != null">
				contractNum = #{record.contractnum,jdbcType=VARCHAR},
			</if>
			<if test="record.medtype != null">
				medType = #{record.medtype,jdbcType=VARCHAR},
			</if>
			<if test="record.nurseLevelId != null">
				nurseLevel_id = #{record.nurseLevelId,jdbcType=INTEGER},
			</if>
			<if test="record.bedTypeId != null">
				bedType_id = #{record.bedTypeId,jdbcType=INTEGER},
			</if>
			<if test="record.nurseId != null">
				nurse_id = #{record.nurseId,jdbcType=INTEGER},
			</if>
			<if test="record.insurance != null">
				insurance = #{record.insurance,jdbcType=VARCHAR},
			</if>
			<if test="record.handlerId != null">
				handler_id = #{record.handlerId,jdbcType=INTEGER},
			</if>
			<if test="record.bedId != null">
				bed_id = #{record.bedId,jdbcType=INTEGER},
			</if>
			<if test="record.visittime != null">
				visitTime = #{record.visittime,jdbcType=TIMESTAMP},
			</if>
			<if test="record.notes != null">
				notes = #{record.notes,jdbcType=VARCHAR},
			</if>
			<if test="record.cleared != null">
				cleared = #{record.cleared,jdbcType=INTEGER},
			</if>
			<if test="record.monthFees != null">
				month_fees = #{record.monthFees,jdbcType=REAL},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Sat Dec 14 
			15:28:44 CST 2013. -->
		update pension_livingrecord
		set id = #{record.id,jdbcType=INTEGER},
		older_id = #{record.olderId,jdbcType=INTEGER},
		apply_id =
		#{record.applyId,jdbcType=INTEGER},
		contractNum =
		#{record.contractnum,jdbcType=VARCHAR},
		medType =
		#{record.medtype,jdbcType=VARCHAR},
		nurseLevel_id =
		#{record.nurseLevelId,jdbcType=INTEGER},
		bedType_id =
		#{record.bedTypeId,jdbcType=INTEGER},
		nurse_id =
		#{record.nurseId,jdbcType=INTEGER},
		insurance =
		#{record.insurance,jdbcType=VARCHAR},
		handler_id =
		#{record.handlerId,jdbcType=INTEGER},
		bed_id =
		#{record.bedId,jdbcType=INTEGER},
		visitTime =
		#{record.visittime,jdbcType=TIMESTAMP},
		notes =
		#{record.notes,jdbcType=VARCHAR},
		cleared =
		#{record.cleared,jdbcType=INTEGER},
		month_fees =
		#{record.monthFees,jdbcType=REAL}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="domain.olderManage.PensionLivingrecord">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Sat Dec 14 
			15:28:44 CST 2013. -->
		update pension_livingrecord
		<set>
			<if test="olderId != null">
				older_id = #{olderId,jdbcType=INTEGER},
			</if>
			<if test="applyId != null">
				apply_id = #{applyId,jdbcType=INTEGER},
			</if>
			<if test="contractnum != null">
				contractNum = #{contractnum,jdbcType=VARCHAR},
			</if>
			<if test="medtype != null">
				medType = #{medtype,jdbcType=VARCHAR},
			</if>
			<if test="nurseLevelId != null">
				nurseLevel_id = #{nurseLevelId,jdbcType=INTEGER},
			</if>
			<if test="bedTypeId != null">
				bedType_id = #{bedTypeId,jdbcType=INTEGER},
			</if>
			<if test="nurseId != null">
				nurse_id = #{nurseId,jdbcType=INTEGER},
			</if>
			<if test="insurance != null">
				insurance = #{insurance,jdbcType=VARCHAR},
			</if>
			<if test="handlerId != null">
				handler_id = #{handlerId,jdbcType=INTEGER},
			</if>
			<if test="bedId != null">
				bed_id = #{bedId,jdbcType=INTEGER},
			</if>
			<if test="visittime != null">
				visitTime = #{visittime,jdbcType=TIMESTAMP},
			</if>
			<if test="notes != null">
				notes = #{notes,jdbcType=VARCHAR},
			</if>
			<if test="cleared != null">
				cleared = #{cleared,jdbcType=INTEGER},
			</if>
			<if test="monthFees != null">
				month_fees = #{monthFees,jdbcType=REAL},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="domain.olderManage.PensionLivingrecord">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Sat Dec 14 
			15:28:44 CST 2013. -->
		update pension_livingrecord
		set older_id = #{olderId,jdbcType=INTEGER},
		apply_id = #{applyId,jdbcType=INTEGER},
		contractNum =
		#{contractnum,jdbcType=VARCHAR},
		medType = #{medtype,jdbcType=VARCHAR},
		nurseLevel_id = #{nurseLevelId,jdbcType=INTEGER},
		bedType_id =
		#{bedTypeId,jdbcType=INTEGER},
		nurse_id = #{nurseId,jdbcType=INTEGER},
		insurance = #{insurance,jdbcType=VARCHAR},
		handler_id =
		#{handlerId,jdbcType=INTEGER},
		bed_id = #{bedId,jdbcType=INTEGER},
		visitTime = #{visittime,jdbcType=TIMESTAMP},
		notes =
		#{notes,jdbcType=VARCHAR},
		cleared = #{cleared,jdbcType=INTEGER},
		month_fees = #{monthFees,jdbcType=REAL}
		where id =
		#{id,jdbcType=INTEGER}
	</update>

	<!-- 根据条件查询老人的入住记录 -->
	<select id="selectLivingRecords" parameterType="map"
		resultType="service.olderManage.LivingRecordDomain">
		select pr.id,
		pr.older_id as olderId,
		pr.apply_id as applyId,
		pr.bed_id
		as bedId,
		pr.nurseLevel_id as nurseLevelId,
		pr.nurse_id as nurseId,
		pr.bedType_id as bedTypeId,
		pr.contractNum as contractnum,
		pr.medType as
		medtype,
		pr.nurse_id as nurseId,
		pr.insurance,
		pr.handler_id as
		handlerId,
		pr.visitTime as visittime,
		pr.notes,
		po.`name` as olderName,
		po.sex,po.statuses,po.types,
		pdn.type as nationName,
		pdp.type as
		politicName,
		ps.`level` as nurseLevel,
		pb.`level` as bedType,
		pu.name as
		nurseName,
		bed.`name` as bedName,
		room.`name` as roomName,
		floor.`name`
		as floorName,
		build.`name` as buildName,
		pl.pension_categary as pensionCategary
		from
		pension_livingapply pl,
		pension_livingrecord pr,
		pension_older po,
		pension_dic_nurse ps,
		pension_dic_bedtype pb,
		pension_employee pu,
		pension_bed bed,
		pension_room room,
		pension_floor
		floor,
		pension_building build,
		pension_dic_nation pdn,
		pension_dic_politics pdp
		where
		pl.older_id=pr.older_id and
		ps.id=pr.nurseLevel_id
		and
		pr.older_id=po.id
		and
		pr.bedType_id=pb.id
		and
		pu.id=pr.nurse_id
		and
		bed.id=pr.bed_id
		and
		room.id=bed.room_id
		and
		room.floor_id=floor.id
		and
		build.id=floor.build_id
		and pr.cleared=2
		and
		pdn.id=po.nation_id
		and
		pdp.id=po.politics_id
		and pl.pension_categary=#{categary,jdbcType=INTEGER}
		<if test="olderId!=null">
			and po.id=#{olderId,jdbcType=INTEGER}
		</if>
		<if test="startDate != null">
			and unix_timestamp(pr.visittime)
			&gt;=unix_timestamp(#{startDate})
		</if>
		<if test="endDate != null">
			and unix_timestamp(date_add(#{endDate}, interval 1 day))
			&gt;=unix_timestamp(pr.visittime)
		</if>
		ORDER BY po.statuses ASC,pr.visittime DESC
	</select>
	<!-- 根据条件查询老人的入住记录 -->
	<select id="selectLivingRecordsByOlderId" parameterType="map"
		resultType="service.olderManage.LivingRecordDomain">
		select
		pr.older_id as olderId,
		po.`name` as olderName,
		pr.visitTime,
		if(po.sex=1,'男','女') as sexStr,
		pr.bed_id as bedId,
		pr.bedType_id as
		bedTypeId,
		ps.`level` as
		nurseLevel,
		pb.`level` as
		bedType,
		bed.`name` as
		bedName,
		room.`name` as
		roomName,
		floor.`name`
		floorName,
		build.`name` as
		buildName FROM
		pension_livingrecord pr,
		pension_older po,
		pension_dic_nurse ps,
		pension_dic_bedtype pb,
		pension_bed bed,
		pension_room room,
		pension_floor floor,
		pension_building build
		where
		ps.id=pr.nurseLevel_id
		and pr.older_id=po.id
		and
		pr.bedType_id=pb.id
		and
		bed.id=pr.bed_id
		and
		room.id=bed.room_id
		and
		room.floor_id=floor.id
		and
		build.id=floor.build_id
		and pr.cleared=2
		and
		po.id=#{olderId}


	</select>
	<!-- 根据条件查询待质检的老人信息 -->
	<select id="selectCheckOlderByOlderId" parameterType="map"
		resultType="service.olderManage.LivingRecordDomain">
		select DISTINCT
		pr.older_id as olderId,
		po.`name` as
		olderName,
		pr.visitTime,
		if(po.sex=1,'男','女') as sexStr,
		pr.bed_id as
		bedId,
		pr.bedType_id as
		bedTypeId,
		ps.`level` as
		nurseLevel,
		pb.`level` as
		bedType,
		bed.`name` as
		bedName,
		room.`name` as
		roomName,
		floor.`name`
		floorName,
		build.`name` as
		buildName FROM
		pension_livingrecord pr,
		pension_older po,
		pension_dic_nurse ps,
		pension_dic_bedtype pb,
		pension_bed bed,
		pension_room room,
		pension_floor floor,
		pension_building build,
		living_notice_record lnr,
		pension_livingnotify
		notice
		where
		ps.id=pr.nurseLevel_id
		and pr.older_id=po.id
		and
		pr.bedType_id=pb.id
		and
		bed.id=pr.bed_id
		and
		room.id=bed.room_id
		and
		room.floor_id=floor.id
		and
		build.id=floor.build_id
		and pr.cleared=2
		and
		lnr.older_id=po.id and notice.record_id=lnr.id and
		notice.handleResult
		is NOT NULL
		and po.id=#{olderId}
	</select>

	<select id="selectFamily" parameterType="map"
		resultType="service.olderManage.PensionFamilyDomain">
		select p.*,
		pdr.relationShip as relationShipStr,
		if(p.isDefault=1,true,false) as defaultFamily from
		pension_family
		p,pension_dic_relationship pdr
		where
		p.relationShip=pdr.id
		and
		p.older_id=#{olderId}
	</select>
	<select id="countByDistinctNurseId" parameterType="map"
		resultType="java.lang.Integer">
		select count(distinct pl.nurse_id)
		from pension_livingrecord
		pl
		left join pension_older po
		on pl.older_id = po.id
		where pl.cleared = 2
		and po.cleared = 2
		and po.statuses in (3,4)

	</select>
	<!-- 查询起止时间内离院的老人数 Mary 2013-12-02 -->
	<select id="selectNewInNum" parameterType="java.util.Map"
		resultType="java.lang.Integer">
		select count(*)
		from pension_livingrecord pl
		where pl.cleared = 2
		<if test="startDate != null &amp;&amp; startDate != ''">
			and unix_timestamp(pl.visitTime) &gt;=
			unix_timestamp(#{startDate})
		</if>
		<if test="endDate != null &amp;&amp; endDate != ''">
			and unix_timestamp(pl.visitTime) &lt;=
			unix_timestamp(#{endDate})

		</if>

	</select>
	<!-- 查找起止时间内 的老人情况 -->

	<select id="selectOlderLiquidityReports" parameterType="java.util.Map"

		resultMap="OlderLiquidityReportResultMap">

		select po.name,

		pb.buildName,

		pb.name as bed_name,

		pb.typeName,

		pn.level,pe.name as emp_name,

		pl.visitTime,

		pd.real_leaveTime,

		pd.leaveReason,

		#{flag,jdbcType=INTEGER} as flag

		from
		pension_livingrecord pl left join pension_older po on po.id =
		pl.older_id and po.cleared = 2 and pl.cleared = 2

		left join
		pension_departregister pd on po.id = pd.older_id and pd.cleared
		= 2

		left join pension_bed pb on pl.bed_id = pb.id

		left join
		pension_dic_nurse pn on pl.nurseLevel_id = pn.id

		left join
		pension_employee pe on pe.id = pl.nurse_id

		where 1=1

		<!-- 起止时间内在院老人数 -->

		<if test="flag == 1 ">

			and (unix_timestamp(pd.real_leaveTime) &gt;

			unix_timestamp(#{endDate}) or pd.real_leaveTime is null)

			and
			unix_timestamp(pl.visitTime) &lt;

			unix_timestamp(#{startDate})

		</if>

		<!-- 起止时间内新入院老人数 -->

		<if test="flag == 2 ">

			and unix_timestamp(pl.visitTime) &lt;=

			unix_timestamp(#{endDate})

			and unix_timestamp(pl.visitTime) &gt;=

			unix_timestamp(#{startDate})

		</if>

		<!-- 起止时间内新出院老人数 -->

		<if test="flag == 3 ">

			and unix_timestamp(pd.real_leaveTime) &gt;=

			unix_timestamp(#{startDate})

			and unix_timestamp(pd.real_leaveTime)
			&lt;=

			unix_timestamp(#{endDate})

		</if>

		group by po.name

		order by pl.visitTime

	</select>
	<resultMap id="OlderLiquidityReportResultMap" type="domain.reportManage.OlderLiquidityReport">

		<result column="name" jdbcType="VARCHAR" property="olderName" />

		<result column="buildName" jdbcType="VARCHAR" property="buildingName" />

		<result column="bed_name" jdbcType="VARCHAR" property="bedName" />

		<result column="typeName" jdbcType="VARCHAR" property="bedTypeName" />

		<result column="level" jdbcType="VARCHAR" property="nurseLevel" />

		<result column="emp_name" jdbcType="VARCHAR" property="nurseName" />

		<result column="leaveReason" jdbcType="VARCHAR" property="leaveReason" />

		<result column="visitTime" jdbcType="TIMESTAMP" property="visitDate" />

		<result column="real_leaveTime" jdbcType="TIMESTAMP" property="leaveDate" />

		<result column="flag" jdbcType="INTEGER" property="flag" />

	</resultMap>
	
	
	<select id="selectNurseList" parameterType="java.util.Map"

		resultType="service.system.NurseEchartsDeman">
		
		SELECT po.id as olderId,
			po.name as olderName,
			pbed.buildName as bulidingName,
			pbed.floorName as floorName,
			pbed.roomName as roomName,
			po.imageURL as photoUrl
		FROM pension_livingrecord pl
		LEFT JOIN pension_older po ON pl.older_id = po.id AND pl.cleared = 2 AND po.cleared = 2
		LEFT JOIN pension_bed pbed ON pl.bed_id = pbed.id AND pbed.cleared = 2
		<if test="userId != null ">
			WHERE pl.nurse_id = #{userId}
		</if>
		AND po.statuses IN (3,4)
	</select>
</mapper>