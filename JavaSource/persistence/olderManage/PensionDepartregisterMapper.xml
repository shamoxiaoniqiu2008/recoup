<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="persistence.olderManage.PensionDepartregisterMapper">
  <resultMap id="BaseResultMap" type="domain.olderManage.PensionDepartregister">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Dec 04 17:39:07 CST 2013.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="older_id" jdbcType="INTEGER" property="olderId" />
    <result column="leaveTime" jdbcType="TIMESTAMP" property="leavetime" />
    <result column="real_leaveTime" jdbcType="TIMESTAMP" property="realLeavetime" />
    <result column="leaveReason" jdbcType="VARCHAR" property="leavereason" />
    <result column="isAgree" jdbcType="INTEGER" property="isagree" />
    <result column="notes" jdbcType="VARCHAR" property="notes" />
    <result column="cleared" jdbcType="INTEGER" property="cleared" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Dec 04 17:39:07 CST 2013.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Dec 04 17:39:07 CST 2013.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Dec 04 17:39:07 CST 2013.
    -->
    id, older_id, leaveTime, real_leaveTime, leaveReason, isAgree, notes, cleared
  </sql>
  <select id="selectByExample" parameterType="domain.olderManage.PensionDepartregisterExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Dec 04 17:39:07 CST 2013.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from pension_departregister
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Dec 04 17:39:07 CST 2013.
    -->
    select 
    <include refid="Base_Column_List" />
    from pension_departregister
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Dec 04 17:39:07 CST 2013.
    -->
    delete from pension_departregister
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="domain.olderManage.PensionDepartregisterExample">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Dec 04 17:39:07 CST 2013.
    -->
    delete from pension_departregister
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="domain.olderManage.PensionDepartregister">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Dec 04 17:39:07 CST 2013.
    -->
    insert into pension_departregister (id, older_id, leaveTime, 
      real_leaveTime, leaveReason, isAgree, 
      notes, cleared)
    values (#{id,jdbcType=INTEGER}, #{olderId,jdbcType=INTEGER}, #{leavetime,jdbcType=TIMESTAMP}, 
      #{realLeavetime,jdbcType=TIMESTAMP}, #{leavereason,jdbcType=VARCHAR}, #{isagree,jdbcType=INTEGER}, 
      #{notes,jdbcType=VARCHAR}, #{cleared,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" keyProperty="id" parameterType="domain.olderManage.PensionDepartregister" useGeneratedKeys="true">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Dec 04 17:39:07 CST 2013.
    -->
    insert into pension_departregister
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="olderId != null">
        older_id,
      </if>
      <if test="leavetime != null">
        leaveTime,
      </if>
      <if test="realLeavetime != null">
        real_leaveTime,
      </if>
      <if test="leavereason != null">
        leaveReason,
      </if>
      <if test="isagree != null">
        isAgree,
      </if>
      <if test="notes != null">
        notes,
      </if>
      <if test="cleared != null">
        cleared,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="olderId != null">
        #{olderId,jdbcType=INTEGER},
      </if>
      <if test="leavetime != null">
        #{leavetime,jdbcType=TIMESTAMP},
      </if>
      <if test="realLeavetime != null">
        #{realLeavetime,jdbcType=TIMESTAMP},
      </if>
      <if test="leavereason != null">
        #{leavereason,jdbcType=VARCHAR},
      </if>
      <if test="isagree != null">
        #{isagree,jdbcType=INTEGER},
      </if>
      <if test="notes != null">
        #{notes,jdbcType=VARCHAR},
      </if>
      <if test="cleared != null">
        #{cleared,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="domain.olderManage.PensionDepartregisterExample" resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Dec 04 17:39:07 CST 2013.
    -->
    select count(*) from pension_departregister
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Dec 04 17:39:07 CST 2013.
    -->
    update pension_departregister
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.olderId != null">
        older_id = #{record.olderId,jdbcType=INTEGER},
      </if>
      <if test="record.leavetime != null">
        leaveTime = #{record.leavetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.realLeavetime != null">
        real_leaveTime = #{record.realLeavetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.leavereason != null">
        leaveReason = #{record.leavereason,jdbcType=VARCHAR},
      </if>
      <if test="record.isagree != null">
        isAgree = #{record.isagree,jdbcType=INTEGER},
      </if>
      <if test="record.notes != null">
        notes = #{record.notes,jdbcType=VARCHAR},
      </if>
      <if test="record.cleared != null">
        cleared = #{record.cleared,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Dec 04 17:39:07 CST 2013.
    -->
    update pension_departregister
    set id = #{record.id,jdbcType=INTEGER},
      older_id = #{record.olderId,jdbcType=INTEGER},
      leaveTime = #{record.leavetime,jdbcType=TIMESTAMP},
      real_leaveTime = #{record.realLeavetime,jdbcType=TIMESTAMP},
      leaveReason = #{record.leavereason,jdbcType=VARCHAR},
      isAgree = #{record.isagree,jdbcType=INTEGER},
      notes = #{record.notes,jdbcType=VARCHAR},
      cleared = #{record.cleared,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="domain.olderManage.PensionDepartregister">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Dec 04 17:39:07 CST 2013.
    -->
    update pension_departregister
    <set>
      <if test="olderId != null">
        older_id = #{olderId,jdbcType=INTEGER},
      </if>
      <if test="leavetime != null">
        leaveTime = #{leavetime,jdbcType=TIMESTAMP},
      </if>
      <if test="realLeavetime != null">
        real_leaveTime = #{realLeavetime,jdbcType=TIMESTAMP},
      </if>
      <if test="leavereason != null">
        leaveReason = #{leavereason,jdbcType=VARCHAR},
      </if>
      <if test="isagree != null">
        isAgree = #{isagree,jdbcType=INTEGER},
      </if>
      <if test="notes != null">
        notes = #{notes,jdbcType=VARCHAR},
      </if>
      <if test="cleared != null">
        cleared = #{cleared,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="domain.olderManage.PensionDepartregister">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Dec 04 17:39:07 CST 2013.
    -->
    update pension_departregister
    set older_id = #{olderId,jdbcType=INTEGER},
      leaveTime = #{leavetime,jdbcType=TIMESTAMP},
      real_leaveTime = #{realLeavetime,jdbcType=TIMESTAMP},
      leaveReason = #{leavereason,jdbcType=VARCHAR},
      isAgree = #{isagree,jdbcType=INTEGER},
      notes = #{notes,jdbcType=VARCHAR},
      cleared = #{cleared,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <resultMap id="BaseResultMapExtend" type="domain.olderManage.PensionDepartregister">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="older_id" jdbcType="INTEGER" property="olderId" />
    <result column="leaveTime" jdbcType="TIMESTAMP" property="leavetime" />
    <result column="leaveReason" jdbcType="VARCHAR" property="leavereason" />
     <result column="real_leaveTime" jdbcType="TIMESTAMP" property="realLeavetime" />
    <result column="isAgree" jdbcType="INTEGER" property="isagree" />
    <result column="notes" jdbcType="VARCHAR" property="notes" />
    <result column="cleared" jdbcType="INTEGER" property="cleared" />
    
    <!-- 添加的字段 Mary 2013-9-4 -->
	<result column="name" jdbcType="VARCHAR" property="name" />
	<result column="contractNum" jdbcType="VARCHAR" property="contractNum" />
	<result column="buildName" jdbcType="VARCHAR" property="building_name" />
	<result column="floorName" jdbcType="VARCHAR" property="floor_name" />
	<result column="roomName" jdbcType="VARCHAR" property="room_name" />
	<result column="bedName" jdbcType="VARCHAR" property="bed_name" />
	<result column="visitTime" jdbcType="TIMESTAMP" property="visitTime" />
	<result column="money" jdbcType="INTEGER" property="money" />
	<result column="isPay" jdbcType="INTEGER" property="ispay" />
	<result column="bed_id" jdbcType="INTEGER" property="bed_id" />
	<result column="isGenerateNotify" jdbcType="INTEGER" property="isgeneratenotify" />
	
	<result column="approveResultStr" jdbcType="VARCHAR" property="approveResultStr" />
	<result column="isCloseStr" jdbcType="VARCHAR" property="isCloseStr" />
    
    
  </resultMap>
  
    <!-- 查询 已离院老人信息  mary liu 2013-9-15 -->

  <select id="selectDepartedInfo" parameterType="java.util.Map" resultMap="BaseResultMapExtend">
  select register.*,
o.`name` as name,
b.buildName as buildName,
b.floorName as floorName,
b.roomName as roomName,
b.name as bedName,
l.contractNum as contractNum,
l.visitTime as visitTime,
record.money as money,
record.isPay as isPay,
record.isGenerateNotify as isGenerateNotify,
IF(register.isAgree &gt; 5,'已结算','待离院') as approveResultStr,
IF(record.isPay &gt; 1,'否','是') as isCloseStr    
from pension_older o,
pension_livingrecord l,
pension_bed b,
pension_departrecord record,
pension_departregister register
where l.older_id = o.id
and b.id = l.bed_id
and record.older_id = o.id
and register.older_id = o.id
and register.id=#{departId,jdbcType=DECIMAL}
and register.cleared = 2
	
  </select>
  
  <!-- 查询老人信息  mary liu 2013-9-2 -->

  <select id="selectDepartInfo" parameterType="java.util.Map" resultMap="BaseResultMapExtend">
  select register.*,
o.`name` as name,
b.buildName as buildName,
b.floorName as floorName,
b.roomName as roomName,
b.name as bedName,
l.contractNum as contractNum,
l.visitTime as visitTime,
record.money as money,
record.isPay as isPay,
record.isGenerateNotify as isGenerateNotify,
IF(o.statuses > 5,'已离院','待结算') as approveResultStr,
IF(record.isPay &gt; 1,'否','是') as isCloseStr
from pension_older o,
pension_livingrecord l,
pension_bed b,
pension_departrecord record,
pension_departregister register
where l.older_id = o.id
and b.id = l.bed_id
and record.older_id = o.id
and register.older_id = o.id
and o.statuses  in (5,6)
	<if test="olderId != null">
		and o.id=#{olderId,jdbcType=DECIMAL}
	</if>
and register.cleared = 2
	
  </select>
  <!-- 查询老人信息  (olderID,startTime,endTIme)bill 2013-9-7 -->

  <select id="selectDepartInfoByTime" parameterType="java.util.Map" resultMap="BaseResultMapExtend">
	select dep.id, dep.older_id,l.contractNum,l.bed_id, po.name as name,IF(po.sex&gt;1,'女','男') as sex,b.buildName as building_name,
	b.floorName as floor_name,b.roomName as room_name,b.name as bed_name,l.visitTime,
	dep.leaveTime, dep.leaveReason, dep.isAgree
 	from pension_departregister dep 
	left join pension_livingrecord l on dep.older_id = l.older_id
 	left join pension_bed b on l.bed_id = b.id
 	left join pension_older po on dep.older_id = po.id
 	where dep.cleared = 2 and po.statuses in(3,4)
	and dep.isAgree in(2,#{statues,jdbcType=INTEGER},3,5)
	<if test="olderId != null">
		and po.id=#{olderId,jdbcType=DECIMAL}
	</if>
	<if test="departId != null">
		and dep.id=#{departId,jdbcType=DECIMAL}
	</if>
	<if test="startTime != null &amp;&amp; startTime != ''">
		  and leaveTime &gt;= #{startTime,jdbcType=TIMESTAMP}
	 </if>
	 <if test="endTime != null &amp;&amp; endTime != ''">
		  and leaveTime &lt;= #{endTime,jdbcType=TIMESTAMP}
	</if>
	order by dep.leaveTime
	
  </select>
  <!-- 查询待离院老人信息  (olderID,startTime,endTIme,)bill 2013-9-11 -->

  <select id="searchByComfirm" parameterType="java.util.Map" resultMap="BaseResultMapExtend">
	select dep.id, dep.older_id,l.contractNum ,l.bed_id ,po.name as name, IF(po.sex&gt;1,'女','男') as sex,b.buildName as building_name,
	b.floorName as floor_name,b.roomName as room_name,b.name as bed_name,l.visitTime,
	dep.leaveTime, dep.leaveReason, dep.isAgree
 	from pension_departregister dep 
	left join pension_livingrecord l on dep.older_id = l.older_id
 	left join pension_bed b on l.bed_id = b.id
 	left join pension_older po on dep.older_id = po.id
 	where dep.cleared = 2 and po.statuses in(3,4)
 	and dep.isAgree = #{statues,jdbcType=INTEGER}
	<if test="olderId != null">
		and po.id=#{olderId,jdbcType=DECIMAL}
	</if>
	<if test="departId != null">
		and dep.id=#{departId,jdbcType=DECIMAL}
	</if>
	<if test="startTime != null &amp;&amp; startTime != ''">
		  and leaveTime &gt;= #{startTime,jdbcType=TIMESTAMP}
	 </if>
	 <if test="endTime != null &amp;&amp; endTime != ''">
		  and leaveTime &lt;= #{endTime,jdbcType=TIMESTAMP}
	</if>
	order by dep.leaveTime
  </select>
  
   <!-- 查询起止时间内离院的老人数 Mary 2013-12-02 -->

  <select id="selectNewOutNum" parameterType="java.util.Map" resultType="java.lang.Integer">
	select count(*)
	from pension_departregister pd
 	where pd.isAgree = 6
	and pd.cleared = 2
	<if test="startDate != null &amp;&amp; startDate != ''">
		  and unix_timestamp(pd.real_leaveTime) &gt;= unix_timestamp(#{startDate}) 
	 </if>
	 <if test="endDate != null &amp;&amp; endDate != ''">
		  and unix_timestamp(pd.real_leaveTime) &lt;= unix_timestamp(#{endDate})
	</if>
  </select>
</mapper>