<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="persistence.olderManage.PensionLeaveapproveMapper">
	<resultMap id="BaseResultMap" type="domain.olderManage.PensionLeaveapprove">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Fri Aug 30 
			11:28:06 CST 2013. -->
		<id column="id" jdbcType="INTEGER" property="id" />
		<result column="leave_id" jdbcType="INTEGER" property="leaveId" />
		<result column="dept_id" jdbcType="INTEGER" property="deptId" />
		<result column="approver_id" jdbcType="INTEGER" property="approverId" />
		<result column="approveResult" jdbcType="INTEGER" property="approveresult" />
		<result column="approveTime" jdbcType="TIMESTAMP" property="approvetime" />
		<result column="notes" jdbcType="VARCHAR" property="notes" />
		<result column="cleared" jdbcType="INTEGER" property="cleared" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Fri Aug 30 
			11:28:06 CST 2013. -->
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
                </when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
                </when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
                  </foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Fri Aug 30 
			11:28:06 CST 2013. -->
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
                </when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
                </when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
                  </foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Fri Aug 30 
			11:28:06 CST 2013. -->
		id, leave_id, dept_id, approver_id, approveResult, approveTime, notes,
		cleared
	</sql>
	<select id="selectByExample" parameterType="domain.olderManage.PensionLeaveapproveExample"
		resultMap="BaseResultMap">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Fri Aug 30 
			11:28:06 CST 2013. -->
		select
		<if test="distinct">
			distinct
    </if>
		<include refid="Base_Column_List" />
		from pension_leaveapprove
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
    </if>
	</select>
	<select id="selectByPrimaryKey" parameterType="java.lang.Long"
		resultMap="BaseResultMap">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Fri Aug 30 
			11:28:06 CST 2013. -->
		select
		<include refid="Base_Column_List" />
		from pension_leaveapprove
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Fri Aug 30 
			11:28:06 CST 2013. -->
		delete from pension_leaveapprove
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample" parameterType="domain.olderManage.PensionLeaveapproveExample">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Fri Aug 30 
			11:28:06 CST 2013. -->
		delete from pension_leaveapprove
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="domain.olderManage.PensionLeaveapprove">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Fri Aug 30 
			11:28:06 CST 2013. -->
		insert into pension_leaveapprove (id, leave_id, dept_id,
		approver_id,
		approveResult, approveTime,
		notes, cleared)
		values
		(#{id,jdbcType=INTEGER}, #{leaveId,jdbcType=INTEGER},
		#{deptId,jdbcType=INTEGER},
		#{approverId,jdbcType=INTEGER},
		#{approveresult,jdbcType=INTEGER}, #{approvetime,jdbcType=TIMESTAMP},
		#{notes,jdbcType=VARCHAR}, #{cleared,jdbcType=INTEGER})
	</insert>
	<insert id="insertSelective" parameterType="domain.olderManage.PensionLeaveapprove">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Fri Aug 30 
			11:28:06 CST 2013. -->
		insert into pension_leaveapprove
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
      </if>
			<if test="leaveId != null">
				leave_id,
      </if>
			<if test="deptId != null">
				dept_id,
      </if>
			<if test="approverId != null">
				approver_id,
      </if>
			<if test="approveresult != null">
				approveResult,
      </if>
			<if test="approvetime != null">
				approveTime,
      </if>
			<if test="notes != null">
				notes,
      </if>
			<if test="cleared != null">
				cleared,
      </if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
      </if>
			<if test="leaveId != null">
				#{leaveId,jdbcType=INTEGER},
      </if>
			<if test="deptId != null">
				#{deptId,jdbcType=INTEGER},
      </if>
			<if test="approverId != null">
				#{approverId,jdbcType=INTEGER},
      </if>
			<if test="approveresult != null">
				#{approveresult,jdbcType=INTEGER},
      </if>
			<if test="approvetime != null">
				#{approvetime,jdbcType=TIMESTAMP},
      </if>
			<if test="notes != null">
				#{notes,jdbcType=VARCHAR},
      </if>
			<if test="cleared != null">
				#{cleared,jdbcType=INTEGER},
      </if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="domain.olderManage.PensionLeaveapproveExample"
		resultType="java.lang.Integer">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Fri Aug 30 
			11:28:06 CST 2013. -->
		select count(*) from pension_leaveapprove
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Fri Aug 30 
			11:28:06 CST 2013. -->
		update pension_leaveapprove
		<set>
			<if test="record.id != null">
				id = #{record.id,jdbcType=INTEGER},
      </if>
			<if test="record.leaveId != null">
				leave_id = #{record.leaveId,jdbcType=INTEGER},
      </if>
			<if test="record.deptId != null">
				dept_id = #{record.deptId,jdbcType=INTEGER},
      </if>
			<if test="record.approverId != null">
				approver_id = #{record.approverId,jdbcType=INTEGER},
      </if>
			<if test="record.approveresult != null">
				approveResult = #{record.approveresult,jdbcType=INTEGER},
			</if>
			<if test="record.approvetime != null">
				approveTime = #{record.approvetime,jdbcType=TIMESTAMP},
			</if>
			<if test="record.notes != null">
				notes = #{record.notes,jdbcType=VARCHAR},
      </if>
			<if test="record.cleared != null">
				cleared = #{record.cleared,jdbcType=INTEGER},
      </if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Fri Aug 30 
			11:28:06 CST 2013. -->
		update pension_leaveapprove
		set id = #{record.id,jdbcType=INTEGER},
		leave_id = #{record.leaveId,jdbcType=INTEGER},
		dept_id =
		#{record.deptId,jdbcType=INTEGER},
		approver_id =
		#{record.approverId,jdbcType=INTEGER},
		approveResult =
		#{record.approveresult,jdbcType=INTEGER},
		approveTime =
		#{record.approvetime,jdbcType=TIMESTAMP},
		notes =
		#{record.notes,jdbcType=VARCHAR},
		cleared =
		#{record.cleared,jdbcType=INTEGER}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="domain.olderManage.PensionLeaveapprove">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Fri Aug 30 
			11:28:06 CST 2013. -->
		update pension_leaveapprove
		<set>
			<if test="leaveId != null">
				leave_id = #{leaveId,jdbcType=INTEGER},
      </if>
			<if test="deptId != null">
				dept_id = #{deptId,jdbcType=INTEGER},
      </if>
			<if test="approverId != null">
				approver_id = #{approverId,jdbcType=INTEGER},
      </if>
			<if test="approveresult != null">
				approveResult = #{approveresult,jdbcType=INTEGER},
      </if>
			<if test="approvetime != null">
				approveTime = #{approvetime,jdbcType=TIMESTAMP},
      </if>
			<if test="notes != null">
				notes = #{notes,jdbcType=VARCHAR},
      </if>
			<if test="cleared != null">
				cleared = #{cleared,jdbcType=INTEGER},
      </if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="domain.olderManage.PensionLeaveapprove">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Fri Aug 30 
			11:28:06 CST 2013. -->
		update pension_leaveapprove
		set leave_id = #{leaveId,jdbcType=INTEGER},
		dept_id = #{deptId,jdbcType=INTEGER},
		approver_id =
		#{approverId,jdbcType=INTEGER},
		approveResult =
		#{approveresult,jdbcType=INTEGER},
		approveTime =
		#{approvetime,jdbcType=TIMESTAMP},
		notes = #{notes,jdbcType=VARCHAR},
		cleared = #{cleared,jdbcType=INTEGER}
		where id = #{id,jdbcType=INTEGER}
	</update>

	<select id="selectDeptRecords" parameterType="java.util.Map"
		resultType="service.olderManage.PensionLeaveApproveExtend">
		select pla.dept_id as deptId,
		pd.name as deptName,
		pla.approveResult as
		approveresult,
		pla.leave_id as leaveId,
		pla.approveTime as approvetime,
		pla.id as id
		from pension_leaveapprove
		pla
		join pension_dept pd
		on
		pla.dept_id = pd.id
		where pla.leave_id =
		#{leaveId}
		<if test="deptId!= null">
			and pla.dept_id=#{deptId,jdbcType=INTEGER}
  	 </if>
		<if test="empId!= null">
			and pla.approver_id = #{empId,jdbcType=INTEGER}
  	 </if>

	</select>
	<select id="selectVacationApproveRecords" parameterType="java.util.Map"
		resultType="service.olderManage.PensionLeaveExtend">
		select pb.id as bedId,
		pb.name as bedName,
		pr.id as roomId,
		pr.name as
		roomName,
		pf.id as floorId,
		pf.name as floorName,
		pbuilding.id as
		buildId,
		pbuilding.name as buildName,
		pl.expectLeaveTime as
		expectleavetime,
		pl.expectBackTime as expectbacktime,
		pl.realLeaveTime
		as realleavetime,
		pl.realBackTime as realbacktime,
		pl.leaveReason as
		leavereason,
		pl.escortName as escortname,
		pl.escortPhone as escortphone,
		pl.older_id as olderId,
		pl.isLeaved as isleaved,
		pl.isBacked as
		isbacked,
		po.name as olderName,
		pl.id as id,
		pl.cleared as cleared,
		pl.backOnTime as backontime,
		pl.final_result as finalResult
		from pension_leave pl
		join pension_older po
		on
		pl.older_id = po.id
		join pension_livingRecord plr
		on pl.older_id =
		plr.older_id
		join pension_bed pb
		on plr.bed_id = pb.id
		join pension_room
		pr
		on pb.room_id = pr.id
		join pension_floor pf
		on pr.floor_id = pf.id
		join pension_building pbuilding
		on pf.build_id = pbuilding.id
		where
		pl.cleared = 2
		<if test="startDate != null &amp;&amp; startDate != ''">
			and pl.expectLeaveTime &gt;=
			#{startDate,jdbcType=TIMESTAMP}
	 </if>
		<if test="endDate != null &amp;&amp; endDate != ''">
			and pl.expectLeaveTime &lt;= #{endDate,jdbcType=TIMESTAMP}
		</if>
		<if test="olderId != null &amp;&amp; olderId != ''">
			and pl.older_id = #{olderId,jdbcType=INTEGER}
	 </if>
		<if test="leaveId != null &amp;&amp; leaveId != ''">
			and pl.id = #{leaveId,jdbcType=INTEGER}
	 </if>
		order by expectleavetime desc,expectbacktime desc


	</select>

	<select id="selectDeptOptions" parameterType="java.lang.Long"
		resultType="service.olderManage.PensionLeaveApproveExtend">
		select pa.id,
		pa.approveResult as approveresult,
		pa.approveTime as approvetime,
		pe.name as approverName,
		pd.name as
		deptName,
		pa.notes
		from pension_leaveapprove pa left join
		pension_employee pe on
		pa.approver_id=pe.id,
		pension_dept pd
		where
		pd.id=pa.dept_id
		and
		pa.leave_id=#{leaveId,jdbcType=INTEGER}
  </select>


</mapper>