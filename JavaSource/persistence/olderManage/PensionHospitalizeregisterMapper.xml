<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="persistence.olderManage.PensionHospitalizeregisterMapper">
  <resultMap id="BaseResultMap" type="domain.olderManage.PensionHospitalizeregister">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Sep 08 15:11:07 CST 2013.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="older_id" jdbcType="INTEGER" property="olderId" />
    <result column="hospitalizeTime" jdbcType="TIMESTAMP" property="hospitalizetime" />
    <result column="hospitalizeIssue" jdbcType="VARCHAR" property="hospitalizeissue" />
    <result column="hospitalizeType_id" jdbcType="INTEGER" property="hospitalizetypeId" />
    <result column="advance" jdbcType="REAL" property="advance" />
    <result column="backMoney" jdbcType="REAL" property="backmoney" />
    <result column="afterPayment" jdbcType="REAL" property="afterpayment" />
    <result column="things" jdbcType="VARCHAR" property="things" />
    <result column="leaveTime" jdbcType="TIMESTAMP" property="leavetime" />
    <result column="backTime" jdbcType="TIMESTAMP" property="backtime" />
    <result column="nurse_id" jdbcType="INTEGER" property="nurseId" />
    <result column="isLeave" jdbcType="INTEGER" property="isleave" />
    <result column="isBack" jdbcType="INTEGER" property="isback" />
    <result column="group_id" jdbcType="INTEGER" property="groupId" />
    <result column="notes" jdbcType="VARCHAR" property="notes" />
    <result column="cleared" jdbcType="INTEGER" property="cleared" />
    <result column="sended" jdbcType="INTEGER" property="sended" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Sep 08 15:11:07 CST 2013.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Sep 08 15:11:07 CST 2013.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Sep 08 15:11:07 CST 2013.
    -->
    id, older_id, hospitalizeTime, hospitalizeIssue, hospitalizeType_id, advance, backMoney, 
    afterPayment, things, leaveTime, backTime, nurse_id, isLeave, isBack, group_id, notes, 
    cleared, sended
  </sql>
  <select id="selectByExample" parameterType="domain.olderManage.PensionHospitalizeregisterExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Sep 08 15:11:07 CST 2013.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from pension_hospitalizeregister
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Sep 08 15:11:07 CST 2013.
    -->
    select 
    <include refid="Base_Column_List" />
    from pension_hospitalizeregister
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Sep 08 15:11:07 CST 2013.
    -->
    delete from pension_hospitalizeregister
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="domain.olderManage.PensionHospitalizeregisterExample">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Sep 08 15:11:07 CST 2013.
    -->
    delete from pension_hospitalizeregister
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="domain.olderManage.PensionHospitalizeregister">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Sep 08 15:11:07 CST 2013.
    -->
    insert into pension_hospitalizeregister (id, older_id, hospitalizeTime, 
      hospitalizeIssue, hospitalizeType_id, advance, 
      backMoney, afterPayment, things, 
      leaveTime, backTime, nurse_id, 
      isLeave, isBack, group_id, 
      notes, cleared, sended
      )
    values (#{id,jdbcType=INTEGER}, #{olderId,jdbcType=INTEGER}, #{hospitalizetime,jdbcType=TIMESTAMP}, 
      #{hospitalizeissue,jdbcType=VARCHAR}, #{hospitalizetypeId,jdbcType=INTEGER}, #{advance,jdbcType=REAL}, 
      #{backmoney,jdbcType=REAL}, #{afterpayment,jdbcType=REAL}, #{things,jdbcType=VARCHAR}, 
      #{leavetime,jdbcType=TIMESTAMP}, #{backtime,jdbcType=TIMESTAMP}, #{nurseId,jdbcType=INTEGER}, 
      #{isleave,jdbcType=INTEGER}, #{isback,jdbcType=INTEGER}, #{groupId,jdbcType=INTEGER}, 
      #{notes,jdbcType=VARCHAR}, #{cleared,jdbcType=INTEGER}, #{sended,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="domain.olderManage.PensionHospitalizeregister">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Sep 08 15:11:07 CST 2013.
    -->
    insert into pension_hospitalizeregister
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="olderId != null">
        older_id,
      </if>
      <if test="hospitalizetime != null">
        hospitalizeTime,
      </if>
      <if test="hospitalizeissue != null">
        hospitalizeIssue,
      </if>
      <if test="hospitalizetypeId != null">
        hospitalizeType_id,
      </if>
      <if test="advance != null">
        advance,
      </if>
      <if test="backmoney != null">
        backMoney,
      </if>
      <if test="afterpayment != null">
        afterPayment,
      </if>
      <if test="things != null">
        things,
      </if>
      <if test="leavetime != null">
        leaveTime,
      </if>
      <if test="backtime != null">
        backTime,
      </if>
      <if test="nurseId != null">
        nurse_id,
      </if>
      <if test="isleave != null">
        isLeave,
      </if>
      <if test="isback != null">
        isBack,
      </if>
      <if test="groupId != null">
        group_id,
      </if>
      <if test="notes != null">
        notes,
      </if>
      <if test="cleared != null">
        cleared,
      </if>
      <if test="sended != null">
        sended,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="olderId != null">
        #{olderId,jdbcType=INTEGER},
      </if>
      <if test="hospitalizetime != null">
        #{hospitalizetime,jdbcType=TIMESTAMP},
      </if>
      <if test="hospitalizeissue != null">
        #{hospitalizeissue,jdbcType=VARCHAR},
      </if>
      <if test="hospitalizetypeId != null">
        #{hospitalizetypeId,jdbcType=INTEGER},
      </if>
      <if test="advance != null">
        #{advance,jdbcType=REAL},
      </if>
      <if test="backmoney != null">
        #{backmoney,jdbcType=REAL},
      </if>
      <if test="afterpayment != null">
        #{afterpayment,jdbcType=REAL},
      </if>
      <if test="things != null">
        #{things,jdbcType=VARCHAR},
      </if>
      <if test="leavetime != null">
        #{leavetime,jdbcType=TIMESTAMP},
      </if>
      <if test="backtime != null">
        #{backtime,jdbcType=TIMESTAMP},
      </if>
      <if test="nurseId != null">
        #{nurseId,jdbcType=INTEGER},
      </if>
      <if test="isleave != null">
        #{isleave,jdbcType=INTEGER},
      </if>
      <if test="isback != null">
        #{isback,jdbcType=INTEGER},
      </if>
      <if test="groupId != null">
        #{groupId,jdbcType=INTEGER},
      </if>
      <if test="notes != null">
        #{notes,jdbcType=VARCHAR},
      </if>
      <if test="cleared != null">
        #{cleared,jdbcType=INTEGER},
      </if>
      <if test="sended != null">
        #{sended,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="domain.olderManage.PensionHospitalizeregisterExample" resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Sep 08 15:11:07 CST 2013.
    -->
    select count(*) from pension_hospitalizeregister
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Sep 08 15:11:07 CST 2013.
    -->
    update pension_hospitalizeregister
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.olderId != null">
        older_id = #{record.olderId,jdbcType=INTEGER},
      </if>
      <if test="record.hospitalizetime != null">
        hospitalizeTime = #{record.hospitalizetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.hospitalizeissue != null">
        hospitalizeIssue = #{record.hospitalizeissue,jdbcType=VARCHAR},
      </if>
      <if test="record.hospitalizetypeId != null">
        hospitalizeType_id = #{record.hospitalizetypeId,jdbcType=INTEGER},
      </if>
      <if test="record.advance != null">
        advance = #{record.advance,jdbcType=REAL},
      </if>
      <if test="record.backmoney != null">
        backMoney = #{record.backmoney,jdbcType=REAL},
      </if>
      <if test="record.afterpayment != null">
        afterPayment = #{record.afterpayment,jdbcType=REAL},
      </if>
      <if test="record.things != null">
        things = #{record.things,jdbcType=VARCHAR},
      </if>
      <if test="record.leavetime != null">
        leaveTime = #{record.leavetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.backtime != null">
        backTime = #{record.backtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.nurseId != null">
        nurse_id = #{record.nurseId,jdbcType=INTEGER},
      </if>
      <if test="record.isleave != null">
        isLeave = #{record.isleave,jdbcType=INTEGER},
      </if>
      <if test="record.isback != null">
        isBack = #{record.isback,jdbcType=INTEGER},
      </if>
      <if test="record.groupId != null">
        group_id = #{record.groupId,jdbcType=INTEGER},
      </if>
      <if test="record.notes != null">
        notes = #{record.notes,jdbcType=VARCHAR},
      </if>
      <if test="record.cleared != null">
        cleared = #{record.cleared,jdbcType=INTEGER},
      </if>
      <if test="record.sended != null">
        sended = #{record.sended,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Sep 08 15:11:07 CST 2013.
    -->
    update pension_hospitalizeregister
    set id = #{record.id,jdbcType=INTEGER},
      older_id = #{record.olderId,jdbcType=INTEGER},
      hospitalizeTime = #{record.hospitalizetime,jdbcType=TIMESTAMP},
      hospitalizeIssue = #{record.hospitalizeissue,jdbcType=VARCHAR},
      hospitalizeType_id = #{record.hospitalizetypeId,jdbcType=INTEGER},
      advance = #{record.advance,jdbcType=REAL},
      backMoney = #{record.backmoney,jdbcType=REAL},
      afterPayment = #{record.afterpayment,jdbcType=REAL},
      things = #{record.things,jdbcType=VARCHAR},
      leaveTime = #{record.leavetime,jdbcType=TIMESTAMP},
      backTime = #{record.backtime,jdbcType=TIMESTAMP},
      nurse_id = #{record.nurseId,jdbcType=INTEGER},
      isLeave = #{record.isleave,jdbcType=INTEGER},
      isBack = #{record.isback,jdbcType=INTEGER},
      group_id = #{record.groupId,jdbcType=INTEGER},
      notes = #{record.notes,jdbcType=VARCHAR},
      cleared = #{record.cleared,jdbcType=INTEGER},
      sended = #{record.sended,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="domain.olderManage.PensionHospitalizeregister">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Sep 08 15:11:07 CST 2013.
    -->
    update pension_hospitalizeregister
    <set>
      <if test="olderId != null">
        older_id = #{olderId,jdbcType=INTEGER},
      </if>
      <if test="hospitalizetime != null">
        hospitalizeTime = #{hospitalizetime,jdbcType=TIMESTAMP},
      </if>
      <if test="hospitalizeissue != null">
        hospitalizeIssue = #{hospitalizeissue,jdbcType=VARCHAR},
      </if>
      <if test="hospitalizetypeId != null">
        hospitalizeType_id = #{hospitalizetypeId,jdbcType=INTEGER},
      </if>
      <if test="advance != null">
        advance = #{advance,jdbcType=REAL},
      </if>
      <if test="backmoney != null">
        backMoney = #{backmoney,jdbcType=REAL},
      </if>
      <if test="afterpayment != null">
        afterPayment = #{afterpayment,jdbcType=REAL},
      </if>
      <if test="things != null">
        things = #{things,jdbcType=VARCHAR},
      </if>
      <if test="leavetime != null">
        leaveTime = #{leavetime,jdbcType=TIMESTAMP},
      </if>
      <if test="backtime != null">
        backTime = #{backtime,jdbcType=TIMESTAMP},
      </if>
      <if test="nurseId != null">
        nurse_id = #{nurseId,jdbcType=INTEGER},
      </if>
      <if test="isleave != null">
        isLeave = #{isleave,jdbcType=INTEGER},
      </if>
      <if test="isback != null">
        isBack = #{isback,jdbcType=INTEGER},
      </if>
      <if test="groupId != null">
        group_id = #{groupId,jdbcType=INTEGER},
      </if>
      <if test="notes != null">
        notes = #{notes,jdbcType=VARCHAR},
      </if>
      <if test="cleared != null">
        cleared = #{cleared,jdbcType=INTEGER},
      </if>
      <if test="sended != null">
        sended = #{sended,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="domain.olderManage.PensionHospitalizeregister">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Sep 08 15:11:07 CST 2013.
    -->
    update pension_hospitalizeregister
    set older_id = #{olderId,jdbcType=INTEGER},
      hospitalizeTime = #{hospitalizetime,jdbcType=TIMESTAMP},
      hospitalizeIssue = #{hospitalizeissue,jdbcType=VARCHAR},
      hospitalizeType_id = #{hospitalizetypeId,jdbcType=INTEGER},
      advance = #{advance,jdbcType=REAL},
      backMoney = #{backmoney,jdbcType=REAL},
      afterPayment = #{afterpayment,jdbcType=REAL},
      things = #{things,jdbcType=VARCHAR},
      leaveTime = #{leavetime,jdbcType=TIMESTAMP},
      backTime = #{backtime,jdbcType=TIMESTAMP},
      nurse_id = #{nurseId,jdbcType=INTEGER},
      isLeave = #{isleave,jdbcType=INTEGER},
      isBack = #{isback,jdbcType=INTEGER},
      group_id = #{groupId,jdbcType=INTEGER},
      notes = #{notes,jdbcType=VARCHAR},
      cleared = #{cleared,jdbcType=INTEGER},
      sended = #{sended,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectMedicalRegisterRecords" parameterType="java.util.Map" resultType="service.olderManage.PensionHospitalizeregisterExtend">
  	select pb.id              as bedId,
		   pb.name			     as bedName,
	       pr.id              as roomId,
	       pr.name			     as roomName,
		   pf.id     	        as floorId,
	       pf.name			     as floorName,
		   pbuilding.id       as buildId,
		   pbuilding.name	  as buildName,	       
	       po.name			     as olderName,
	       ph.older_id		  as olderId,
	       ph.hospitalizeType_id as hospitalizetypeId,
	       pdh.type				  as type,
	       ph.hospitalizeTime    as hospitalizetime,
	       ph.hospitalizeIssue	  as hospitalizeissue,
	       ph.advance				 as advance,
	       ph.id					as id,
	       ph.cleared				as cleared,
	       ph.group_id			as groupId,
	       pe.name					as managerName,
	       phg.manager_id		as managerId,
	       phg.leaveTime			as leaveTime,
	       ph.backTime			as backtime,
	       ph.things			as things,
	       ph.backMoney		as backmoney,
	       ph.sended			as sended,
	       ph.isBack			as isback
	       
	  from pension_hospitalizeregister ph
	  join pension_older po
	    on ph.older_id = po.id
	  join pension_livingRecord plr
	    on ph.older_id = plr.older_id
	  join pension_bed pb
	    on plr.bed_id = pb.id
	  join pension_room pr
	    on pb.room_id = pr.id
	  join pension_floor pf
	    on pr.floor_id = pf.id
	  join pension_building pbuilding
	    on pf.build_id = pbuilding.id
	  join pension_dic_hospitalize pdh
	    on ph.hospitalizeType_id = pdh.id
	left join pension_hospitalizeGroup phg
	    on ph.group_id = phg.id
	left join pension_employee pe
	    on phg.manager_id = pe.id
	 where ph.cleared = 2
     <if test="startDate != null &amp;&amp; startDate != ''">
		  and ph.hospitalizeTime &gt;= #{startDate,jdbcType=TIMESTAMP}
	 </if>
	 <if test="endDate != null &amp;&amp; endDate != ''">
		  and ph.hospitalizeTime &lt; #{endDate,jdbcType=TIMESTAMP}
	 </if>
	 <if test="olderId != null &amp;&amp; olderId != ''">
	 	  and ph.older_id = #{olderId,jdbcType=INTEGER}
	 </if>
	 <if test="groupId != null &amp;&amp; groupId != ''">
	 	  and ph.group_id = #{groupId,jdbcType=INTEGER}
	 </if>
	 <if test="registerId != null &amp;&amp; registerId != ''">
	 	  and ph.id = #{registerId,jdbcType=INTEGER}
	 </if>
	 <if test="sended != null &amp;&amp; sended != ''">
	 	  and ph.sended = #{sended,jdbcType=INTEGER}
	 </if>
	 
	  <if test="grouped != null &amp;&amp; grouped == 1">
	 	  and ph.group_id is not null
	 </if>
	 <if test="grouped != null &amp;&amp; grouped == 2">
	 	  and ph.group_id is null
	 </if>
	 
	 order by  id
	 
  </select>
  <select id="selectMedicalItemDetails" parameterType="java.util.Map" resultType="service.olderManage.PensionHospitalizeregisterExtend">
  	select pb.name			     as bedName,
	       pr.name			     as roomName,
	       pf.name			     as floorName,
		   pbuilding.name	  as buildName,	       
	       po.name			     as olderName,
	       pdh.type				  as type,
	       ph.hospitalizeIssue	  as hospitalizeissue,
	       ph.id					as id,
	       ph.group_id			as groupId
	       
	  from pension_hospitalizeregister ph
	  join pension_older po
	    on ph.older_id = po.id
	  join pension_livingRecord plr
	    on ph.older_id = plr.older_id
	  join pension_bed pb
	    on plr.bed_id = pb.id
	  join pension_room pr
	    on pb.room_id = pr.id
	  join pension_floor pf
	    on pr.floor_id = pf.id
	  join pension_building pbuilding
	    on pf.build_id = pbuilding.id
	  join pension_dic_hospitalize pdh
	    on ph.hospitalizeType_id = pdh.id
	left join pension_hospitalizeGroup phg
	    on ph.group_id = phg.id
	 where ph.cleared = 2
	 <if test="groupId != null &amp;&amp; groupId != ''">
	 	  and ph.group_id = #{groupId,jdbcType=INTEGER}
	 </if>
	 <if test="hospitalizetypeId != null &amp;&amp; hospitalizetypeId != ''">
	 	  and ph.hospitalizeType_id = #{hospitalizetypeId,jdbcType=INTEGER}
	 </if>	
 
  </select>
  
</mapper>