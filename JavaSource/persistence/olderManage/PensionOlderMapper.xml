<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="persistence.olderManage.PensionOlderMapper">
	<resultMap id="BaseResultMap" type="domain.olderManage.PensionOlder">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Fri Dec 06 
			09:05:50 CST 2013. -->
		<id column="id" jdbcType="INTEGER" property="id" />
		<result column="name" jdbcType="VARCHAR" property="name" />
		<result column="inputCode" jdbcType="VARCHAR" property="inputcode" />
		<result column="sex" jdbcType="INTEGER" property="sex" />
		<result column="IDCardNum" jdbcType="VARCHAR" property="idcardnum" />
		<result column="birthday" jdbcType="TIMESTAMP" property="birthday" />
		<result column="age" jdbcType="INTEGER" property="age" />
		<result column="phone" jdbcType="VARCHAR" property="phone" />
		<result column="household" jdbcType="VARCHAR" property="household" />
		<result column="faith" jdbcType="VARCHAR" property="faith" />
		<result column="nation_id" jdbcType="INTEGER" property="nationId" />
		<result column="politics_id" jdbcType="INTEGER" property="politicsId" />
		<result column="jobs" jdbcType="VARCHAR" property="jobs" />
		<result column="types" jdbcType="INTEGER" property="types" />
		<result column="sensitives" jdbcType="VARCHAR" property="sensitives" />
		<result column="hospital" jdbcType="VARCHAR" property="hospital" />
		<result column="illness" jdbcType="VARCHAR" property="illness" />
		<result column="doctor" jdbcType="VARCHAR" property="doctor" />
		<result column="medHistory" jdbcType="VARCHAR" property="medhistory" />
		<result column="pluse" jdbcType="INTEGER" property="pluse" />
		<result column="systolicPres" jdbcType="VARCHAR" property="systolicpres" />
		<result column="hospitalPhone" jdbcType="VARCHAR" property="hospitalphone" />
		<result column="diet" jdbcType="VARCHAR" property="diet" />
		<result column="characters" jdbcType="VARCHAR" property="characters" />
		<result column="hobey" jdbcType="VARCHAR" property="hobey" />
		<result column="specailReq" jdbcType="VARCHAR" property="specailreq" />
		<result column="diastolicPre" jdbcType="VARCHAR" property="diastolicpre" />
		<result column="abnormal" jdbcType="VARCHAR" property="abnormal" />
		<result column="statuses" jdbcType="INTEGER" property="statuses" />
		<result column="notes" jdbcType="VARCHAR" property="notes" />
		<result column="cleared" jdbcType="INTEGER" property="cleared" />
		<result column="imageURL" jdbcType="VARCHAR" property="imageurl" />
		<result column="degree_id" jdbcType="INTEGER" property="degreeId" />
		<result column="marriage_id" jdbcType="INTEGER" property="marriageId" />
		<result column="bloodtype_id" jdbcType="INTEGER" property="bloodtypeId" />
		<result column="rh_flag" jdbcType="INTEGER" property="rhFlag" />
		<result column="genetic_history_flag" jdbcType="INTEGER"
			property="geneticHistoryFlag" />
		<result column="genetic_disease" jdbcType="VARCHAR" property="geneticDisease" />
	</resultMap>
	<resultMap extends="BaseResultMap" id="ResultMapWithBLOBs"
		type="domain.olderManage.PensionOlder">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Fri Dec 06 
			09:05:50 CST 2013. -->
		<result column="imageData" jdbcType="LONGVARBINARY" property="imagedata" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Fri Dec 06 
			09:05:50 CST 2013. -->
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Fri Dec 06 
			09:05:50 CST 2013. -->
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Fri Dec 06 
			09:05:50 CST 2013. -->
		id, name, inputCode, sex, IDCardNum, birthday, age, phone, household,
		faith, nation_id,
		politics_id, jobs, types, sensitives, hospital,
		illness, doctor, medHistory,
		pluse,
		systolicPres, hospitalPhone, diet,
		characters, hobey, specailReq, diastolicPre,
		abnormal,
		statuses, notes,
		cleared, imageURL, degree_id, marriage_id, bloodtype_id,
		rh_flag,
		genetic_history_flag, genetic_disease
	</sql>
	<sql id="Blob_Column_List">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Fri Dec 06 
			09:05:50 CST 2013. -->
		imageData
	</sql>
	<select id="selectByExampleWithBLOBs" parameterType="domain.olderManage.PensionOlderExample"
		resultMap="ResultMapWithBLOBs">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Fri Dec 06 
			09:05:50 CST 2013. -->
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		,
		<include refid="Blob_Column_List" />
		from pension_older
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByExample" parameterType="domain.olderManage.PensionOlderExample"
		resultMap="BaseResultMap">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Fri Dec 06 
			09:05:50 CST 2013. -->
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from pension_older
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" parameterType="java.lang.Long"
		resultMap="ResultMapWithBLOBs">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Fri Dec 06 
			09:05:50 CST 2013. -->
		select
		<include refid="Base_Column_List" />
		,
		<include refid="Blob_Column_List" />
		from pension_older
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Fri Dec 06 
			09:05:50 CST 2013. -->
		delete from pension_older
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample" parameterType="domain.olderManage.PensionOlderExample">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Fri Dec 06 
			09:05:50 CST 2013. -->
		delete from pension_older
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="domain.olderManage.PensionOlder">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Fri Dec 06 
			09:05:50 CST 2013. -->
		insert into pension_older (id, name, inputCode,
		sex, IDCardNum,
		birthday,
		age, phone, household,
		faith, nation_id, politics_id,
		jobs,
		types, sensitives,
		hospital, illness, doctor,
		medHistory, pluse,
		systolicPres,
		hospitalPhone, diet, characters,
		hobey, specailReq,
		diastolicPre,
		abnormal, statuses, notes,
		cleared, imageURL, degree_id,
		marriage_id, bloodtype_id, rh_flag,
		genetic_history_flag,
		genetic_disease, imageData
		)
		values (#{id,jdbcType=INTEGER},
		#{name,jdbcType=VARCHAR},
		#{inputcode,jdbcType=VARCHAR},
		#{sex,jdbcType=INTEGER}, #{idcardnum,jdbcType=VARCHAR},
		#{birthday,jdbcType=TIMESTAMP},
		#{age,jdbcType=INTEGER},
		#{phone,jdbcType=VARCHAR},
		#{household,jdbcType=VARCHAR},
		#{faith,jdbcType=VARCHAR}, #{nationId,jdbcType=INTEGER},
		#{politicsId,jdbcType=INTEGER},
		#{jobs,jdbcType=VARCHAR},
		#{types,jdbcType=INTEGER},
		#{sensitives,jdbcType=VARCHAR},
		#{hospital,jdbcType=VARCHAR}, #{illness,jdbcType=VARCHAR},
		#{doctor,jdbcType=VARCHAR},
		#{medhistory,jdbcType=VARCHAR},
		#{pluse,jdbcType=INTEGER},
		#{systolicpres,jdbcType=VARCHAR},
		#{hospitalphone,jdbcType=VARCHAR}, #{diet,jdbcType=VARCHAR},
		#{characters,jdbcType=VARCHAR},
		#{hobey,jdbcType=VARCHAR},
		#{specailreq,jdbcType=VARCHAR},
		#{diastolicpre,jdbcType=VARCHAR},
		#{abnormal,jdbcType=VARCHAR}, #{statuses,jdbcType=INTEGER},
		#{notes,jdbcType=VARCHAR},
		#{cleared,jdbcType=INTEGER},
		#{imageurl,jdbcType=VARCHAR},
		#{degreeId,jdbcType=INTEGER},
		#{marriageId,jdbcType=INTEGER}, #{bloodtypeId,jdbcType=INTEGER},
		#{rhFlag,jdbcType=INTEGER},
		#{geneticHistoryFlag,jdbcType=INTEGER},
		#{geneticDisease,jdbcType=VARCHAR},
		#{imagedata,jdbcType=LONGVARBINARY}
		)
	</insert>
	<insert id="insertSelective" keyProperty="id"
		parameterType="domain.olderManage.PensionOlder" useGeneratedKeys="true">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Fri Dec 06 
			09:05:50 CST 2013. -->
		insert into pension_older
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="name != null">
				name,
			</if>
			<if test="inputcode != null">
				inputCode,
			</if>
			<if test="sex != null">
				sex,
			</if>
			<if test="idcardnum != null">
				IDCardNum,
			</if>
			<if test="birthday != null">
				birthday,
			</if>
			<if test="age != null">
				age,
			</if>
			<if test="phone != null">
				phone,
			</if>
			<if test="household != null">
				household,
			</if>
			<if test="faith != null">
				faith,
			</if>
			<if test="nationId != null">
				nation_id,
			</if>
			<if test="politicsId != null">
				politics_id,
			</if>
			<if test="jobs != null">
				jobs,
			</if>
			<if test="types != null">
				types,
			</if>
			<if test="sensitives != null">
				sensitives,
			</if>
			<if test="hospital != null">
				hospital,
			</if>
			<if test="illness != null">
				illness,
			</if>
			<if test="doctor != null">
				doctor,
			</if>
			<if test="medhistory != null">
				medHistory,
			</if>
			<if test="pluse != null">
				pluse,
			</if>
			<if test="systolicpres != null">
				systolicPres,
			</if>
			<if test="hospitalphone != null">
				hospitalPhone,
			</if>
			<if test="diet != null">
				diet,
			</if>
			<if test="characters != null">
				characters,
			</if>
			<if test="hobey != null">
				hobey,
			</if>
			<if test="specailreq != null">
				specailReq,
			</if>
			<if test="diastolicpre != null">
				diastolicPre,
			</if>
			<if test="abnormal != null">
				abnormal,
			</if>
			<if test="statuses != null">
				statuses,
			</if>
			<if test="notes != null">
				notes,
			</if>
			<if test="cleared != null">
				cleared,
			</if>
			<if test="imageurl != null">
				imageURL,
			</if>
			<if test="degreeId != null">
				degree_id,
			</if>
			<if test="marriageId != null">
				marriage_id,
			</if>
			<if test="bloodtypeId != null">
				bloodtype_id,
			</if>
			<if test="rhFlag != null">
				rh_flag,
			</if>
			<if test="geneticHistoryFlag != null">
				genetic_history_flag,
			</if>
			<if test="geneticDisease != null">
				genetic_disease,
			</if>
			<if test="imagedata != null">
				imageData,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="name != null">
				#{name,jdbcType=VARCHAR},
			</if>
			<if test="inputcode != null">
				#{inputcode,jdbcType=VARCHAR},
			</if>
			<if test="sex != null">
				#{sex,jdbcType=INTEGER},
			</if>
			<if test="idcardnum != null">
				#{idcardnum,jdbcType=VARCHAR},
			</if>
			<if test="birthday != null">
				#{birthday,jdbcType=TIMESTAMP},
			</if>
			<if test="age != null">
				#{age,jdbcType=INTEGER},
			</if>
			<if test="phone != null">
				#{phone,jdbcType=VARCHAR},
			</if>
			<if test="household != null">
				#{household,jdbcType=VARCHAR},
			</if>
			<if test="faith != null">
				#{faith,jdbcType=VARCHAR},
			</if>
			<if test="nationId != null">
				#{nationId,jdbcType=INTEGER},
			</if>
			<if test="politicsId != null">
				#{politicsId,jdbcType=INTEGER},
			</if>
			<if test="jobs != null">
				#{jobs,jdbcType=VARCHAR},
			</if>
			<if test="types != null">
				#{types,jdbcType=INTEGER},
			</if>
			<if test="sensitives != null">
				#{sensitives,jdbcType=VARCHAR},
			</if>
			<if test="hospital != null">
				#{hospital,jdbcType=VARCHAR},
			</if>
			<if test="illness != null">
				#{illness,jdbcType=VARCHAR},
			</if>
			<if test="doctor != null">
				#{doctor,jdbcType=VARCHAR},
			</if>
			<if test="medhistory != null">
				#{medhistory,jdbcType=VARCHAR},
			</if>
			<if test="pluse != null">
				#{pluse,jdbcType=INTEGER},
			</if>
			<if test="systolicpres != null">
				#{systolicpres,jdbcType=VARCHAR},
			</if>
			<if test="hospitalphone != null">
				#{hospitalphone,jdbcType=VARCHAR},
			</if>
			<if test="diet != null">
				#{diet,jdbcType=VARCHAR},
			</if>
			<if test="characters != null">
				#{characters,jdbcType=VARCHAR},
			</if>
			<if test="hobey != null">
				#{hobey,jdbcType=VARCHAR},
			</if>
			<if test="specailreq != null">
				#{specailreq,jdbcType=VARCHAR},
			</if>
			<if test="diastolicpre != null">
				#{diastolicpre,jdbcType=VARCHAR},
			</if>
			<if test="abnormal != null">
				#{abnormal,jdbcType=VARCHAR},
			</if>
			<if test="statuses != null">
				#{statuses,jdbcType=INTEGER},
			</if>
			<if test="notes != null">
				#{notes,jdbcType=VARCHAR},
			</if>
			<if test="cleared != null">
				#{cleared,jdbcType=INTEGER},
			</if>
			<if test="imageurl != null">
				#{imageurl,jdbcType=VARCHAR},
			</if>
			<if test="degreeId != null">
				#{degreeId,jdbcType=INTEGER},
			</if>
			<if test="marriageId != null">
				#{marriageId,jdbcType=INTEGER},
			</if>
			<if test="bloodtypeId != null">
				#{bloodtypeId,jdbcType=INTEGER},
			</if>
			<if test="rhFlag != null">
				#{rhFlag,jdbcType=INTEGER},
			</if>
			<if test="geneticHistoryFlag != null">
				#{geneticHistoryFlag,jdbcType=INTEGER},
			</if>
			<if test="geneticDisease != null">
				#{geneticDisease,jdbcType=VARCHAR},
			</if>
			<if test="imagedata != null">
				#{imagedata,jdbcType=LONGVARBINARY},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="domain.olderManage.PensionOlderExample"
		resultType="java.lang.Integer">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Fri Dec 06 
			09:05:50 CST 2013. -->
		select count(*) from pension_older
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Fri Dec 06 
			09:05:50 CST 2013. -->
		update pension_older
		<set>
			<if test="record.id != null">
				id = #{record.id,jdbcType=INTEGER},
			</if>
			<if test="record.name != null">
				name = #{record.name,jdbcType=VARCHAR},
			</if>
			<if test="record.inputcode != null">
				inputCode = #{record.inputcode,jdbcType=VARCHAR},
			</if>
			<if test="record.sex != null">
				sex = #{record.sex,jdbcType=INTEGER},
			</if>
			<if test="record.idcardnum != null">
				IDCardNum = #{record.idcardnum,jdbcType=VARCHAR},
			</if>
			<if test="record.birthday != null">
				birthday = #{record.birthday,jdbcType=TIMESTAMP},
			</if>
			<if test="record.age != null">
				age = #{record.age,jdbcType=INTEGER},
			</if>
			<if test="record.phone != null">
				phone = #{record.phone,jdbcType=VARCHAR},
			</if>
			<if test="record.household != null">
				household = #{record.household,jdbcType=VARCHAR},
			</if>
			<if test="record.faith != null">
				faith = #{record.faith,jdbcType=VARCHAR},
			</if>
			<if test="record.nationId != null">
				nation_id = #{record.nationId,jdbcType=INTEGER},
			</if>
			<if test="record.politicsId != null">
				politics_id = #{record.politicsId,jdbcType=INTEGER},
			</if>
			<if test="record.jobs != null">
				jobs = #{record.jobs,jdbcType=VARCHAR},
			</if>
			<if test="record.types != null">
				types = #{record.types,jdbcType=INTEGER},
			</if>
			<if test="record.sensitives != null">
				sensitives = #{record.sensitives,jdbcType=VARCHAR},
			</if>
			<if test="record.hospital != null">
				hospital = #{record.hospital,jdbcType=VARCHAR},
			</if>
			<if test="record.illness != null">
				illness = #{record.illness,jdbcType=VARCHAR},
			</if>
			<if test="record.doctor != null">
				doctor = #{record.doctor,jdbcType=VARCHAR},
			</if>
			<if test="record.medhistory != null">
				medHistory = #{record.medhistory,jdbcType=VARCHAR},
			</if>
			<if test="record.pluse != null">
				pluse = #{record.pluse,jdbcType=INTEGER},
			</if>
			<if test="record.systolicpres != null">
				systolicPres = #{record.systolicpres,jdbcType=VARCHAR},
			</if>
			<if test="record.hospitalphone != null">
				hospitalPhone = #{record.hospitalphone,jdbcType=VARCHAR},
			</if>
			<if test="record.diet != null">
				diet = #{record.diet,jdbcType=VARCHAR},
			</if>
			<if test="record.characters != null">
				characters = #{record.characters,jdbcType=VARCHAR},
			</if>
			<if test="record.hobey != null">
				hobey = #{record.hobey,jdbcType=VARCHAR},
			</if>
			<if test="record.specailreq != null">
				specailReq = #{record.specailreq,jdbcType=VARCHAR},
			</if>
			<if test="record.diastolicpre != null">
				diastolicPre = #{record.diastolicpre,jdbcType=VARCHAR},
			</if>
			<if test="record.abnormal != null">
				abnormal = #{record.abnormal,jdbcType=VARCHAR},
			</if>
			<if test="record.statuses != null">
				statuses = #{record.statuses,jdbcType=INTEGER},
			</if>
			<if test="record.notes != null">
				notes = #{record.notes,jdbcType=VARCHAR},
			</if>
			<if test="record.cleared != null">
				cleared = #{record.cleared,jdbcType=INTEGER},
			</if>
			<if test="record.imageurl != null">
				imageURL = #{record.imageurl,jdbcType=VARCHAR},
			</if>
			<if test="record.degreeId != null">
				degree_id = #{record.degreeId,jdbcType=INTEGER},
			</if>
			<if test="record.marriageId != null">
				marriage_id = #{record.marriageId,jdbcType=INTEGER},
			</if>
			<if test="record.bloodtypeId != null">
				bloodtype_id = #{record.bloodtypeId,jdbcType=INTEGER},
			</if>
			<if test="record.rhFlag != null">
				rh_flag = #{record.rhFlag,jdbcType=INTEGER},
			</if>
			<if test="record.geneticHistoryFlag != null">
				genetic_history_flag =
				#{record.geneticHistoryFlag,jdbcType=INTEGER},
			</if>
			<if test="record.geneticDisease != null">
				genetic_disease =
				#{record.geneticDisease,jdbcType=VARCHAR},
			</if>
			<if test="record.imagedata != null">
				imageData = #{record.imagedata,jdbcType=LONGVARBINARY},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExampleWithBLOBs" parameterType="map">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Fri Dec 06 
			09:05:50 CST 2013. -->
		update pension_older
		set id = #{record.id,jdbcType=INTEGER},
		name =
		#{record.name,jdbcType=VARCHAR},
		inputCode =
		#{record.inputcode,jdbcType=VARCHAR},
		sex =
		#{record.sex,jdbcType=INTEGER},
		IDCardNum =
		#{record.idcardnum,jdbcType=VARCHAR},
		birthday =
		#{record.birthday,jdbcType=TIMESTAMP},
		age =
		#{record.age,jdbcType=INTEGER},
		phone =
		#{record.phone,jdbcType=VARCHAR},
		household =
		#{record.household,jdbcType=VARCHAR},
		faith =
		#{record.faith,jdbcType=VARCHAR},
		nation_id =
		#{record.nationId,jdbcType=INTEGER},
		politics_id =
		#{record.politicsId,jdbcType=INTEGER},
		jobs =
		#{record.jobs,jdbcType=VARCHAR},
		types =
		#{record.types,jdbcType=INTEGER},
		sensitives =
		#{record.sensitives,jdbcType=VARCHAR},
		hospital =
		#{record.hospital,jdbcType=VARCHAR},
		illness =
		#{record.illness,jdbcType=VARCHAR},
		doctor =
		#{record.doctor,jdbcType=VARCHAR},
		medHistory =
		#{record.medhistory,jdbcType=VARCHAR},
		pluse =
		#{record.pluse,jdbcType=INTEGER},
		systolicPres =
		#{record.systolicpres,jdbcType=VARCHAR},
		hospitalPhone =
		#{record.hospitalphone,jdbcType=VARCHAR},
		diet =
		#{record.diet,jdbcType=VARCHAR},
		characters =
		#{record.characters,jdbcType=VARCHAR},
		hobey =
		#{record.hobey,jdbcType=VARCHAR},
		specailReq =
		#{record.specailreq,jdbcType=VARCHAR},
		diastolicPre =
		#{record.diastolicpre,jdbcType=VARCHAR},
		abnormal =
		#{record.abnormal,jdbcType=VARCHAR},
		statuses =
		#{record.statuses,jdbcType=INTEGER},
		notes =
		#{record.notes,jdbcType=VARCHAR},
		cleared =
		#{record.cleared,jdbcType=INTEGER},
		imageURL =
		#{record.imageurl,jdbcType=VARCHAR},
		degree_id =
		#{record.degreeId,jdbcType=INTEGER},
		marriage_id =
		#{record.marriageId,jdbcType=INTEGER},
		bloodtype_id =
		#{record.bloodtypeId,jdbcType=INTEGER},
		rh_flag =
		#{record.rhFlag,jdbcType=INTEGER},
		genetic_history_flag =
		#{record.geneticHistoryFlag,jdbcType=INTEGER},
		genetic_disease =
		#{record.geneticDisease,jdbcType=VARCHAR},
		imageData =
		#{record.imagedata,jdbcType=LONGVARBINARY}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Fri Dec 06 
			09:05:50 CST 2013. -->
		update pension_older
		set id = #{record.id,jdbcType=INTEGER},
		name =
		#{record.name,jdbcType=VARCHAR},
		inputCode =
		#{record.inputcode,jdbcType=VARCHAR},
		sex =
		#{record.sex,jdbcType=INTEGER},
		IDCardNum =
		#{record.idcardnum,jdbcType=VARCHAR},
		birthday =
		#{record.birthday,jdbcType=TIMESTAMP},
		age =
		#{record.age,jdbcType=INTEGER},
		phone =
		#{record.phone,jdbcType=VARCHAR},
		household =
		#{record.household,jdbcType=VARCHAR},
		faith =
		#{record.faith,jdbcType=VARCHAR},
		nation_id =
		#{record.nationId,jdbcType=INTEGER},
		politics_id =
		#{record.politicsId,jdbcType=INTEGER},
		jobs =
		#{record.jobs,jdbcType=VARCHAR},
		types =
		#{record.types,jdbcType=INTEGER},
		sensitives =
		#{record.sensitives,jdbcType=VARCHAR},
		hospital =
		#{record.hospital,jdbcType=VARCHAR},
		illness =
		#{record.illness,jdbcType=VARCHAR},
		doctor =
		#{record.doctor,jdbcType=VARCHAR},
		medHistory =
		#{record.medhistory,jdbcType=VARCHAR},
		pluse =
		#{record.pluse,jdbcType=INTEGER},
		systolicPres =
		#{record.systolicpres,jdbcType=VARCHAR},
		hospitalPhone =
		#{record.hospitalphone,jdbcType=VARCHAR},
		diet =
		#{record.diet,jdbcType=VARCHAR},
		characters =
		#{record.characters,jdbcType=VARCHAR},
		hobey =
		#{record.hobey,jdbcType=VARCHAR},
		specailReq =
		#{record.specailreq,jdbcType=VARCHAR},
		diastolicPre =
		#{record.diastolicpre,jdbcType=VARCHAR},
		abnormal =
		#{record.abnormal,jdbcType=VARCHAR},
		statuses =
		#{record.statuses,jdbcType=INTEGER},
		notes =
		#{record.notes,jdbcType=VARCHAR},
		cleared =
		#{record.cleared,jdbcType=INTEGER},
		imageURL =
		#{record.imageurl,jdbcType=VARCHAR},
		degree_id =
		#{record.degreeId,jdbcType=INTEGER},
		marriage_id =
		#{record.marriageId,jdbcType=INTEGER},
		bloodtype_id =
		#{record.bloodtypeId,jdbcType=INTEGER},
		rh_flag =
		#{record.rhFlag,jdbcType=INTEGER},
		genetic_history_flag =
		#{record.geneticHistoryFlag,jdbcType=INTEGER},
		genetic_disease =
		#{record.geneticDisease,jdbcType=VARCHAR}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="domain.olderManage.PensionOlder">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Fri Dec 06 
			09:05:50 CST 2013. -->
		update pension_older
		<set>
			<if test="name != null">
				name = #{name,jdbcType=VARCHAR},
			</if>
			<if test="inputcode != null">
				inputCode = #{inputcode,jdbcType=VARCHAR},
			</if>
			<if test="sex != null">
				sex = #{sex,jdbcType=INTEGER},
			</if>
			<if test="idcardnum != null">
				IDCardNum = #{idcardnum,jdbcType=VARCHAR},
			</if>
			<if test="birthday != null">
				birthday = #{birthday,jdbcType=TIMESTAMP},
			</if>
			<if test="age != null">
				age = #{age,jdbcType=INTEGER},
			</if>
			<if test="phone != null">
				phone = #{phone,jdbcType=VARCHAR},
			</if>
			<if test="household != null">
				household = #{household,jdbcType=VARCHAR},
			</if>
			<if test="faith != null">
				faith = #{faith,jdbcType=VARCHAR},
			</if>
			<if test="nationId != null">
				nation_id = #{nationId,jdbcType=INTEGER},
			</if>
			<if test="politicsId != null">
				politics_id = #{politicsId,jdbcType=INTEGER},
			</if>
			<if test="jobs != null">
				jobs = #{jobs,jdbcType=VARCHAR},
			</if>
			<if test="types != null">
				types = #{types,jdbcType=INTEGER},
			</if>
			<if test="sensitives != null">
				sensitives = #{sensitives,jdbcType=VARCHAR},
			</if>
			<if test="hospital != null">
				hospital = #{hospital,jdbcType=VARCHAR},
			</if>
			<if test="illness != null">
				illness = #{illness,jdbcType=VARCHAR},
			</if>
			<if test="doctor != null">
				doctor = #{doctor,jdbcType=VARCHAR},
			</if>
			<if test="medhistory != null">
				medHistory = #{medhistory,jdbcType=VARCHAR},
			</if>
			<if test="pluse != null">
				pluse = #{pluse,jdbcType=INTEGER},
			</if>
			<if test="systolicpres != null">
				systolicPres = #{systolicpres,jdbcType=VARCHAR},
			</if>
			<if test="hospitalphone != null">
				hospitalPhone = #{hospitalphone,jdbcType=VARCHAR},
			</if>
			<if test="diet != null">
				diet = #{diet,jdbcType=VARCHAR},
			</if>
			<if test="characters != null">
				characters = #{characters,jdbcType=VARCHAR},
			</if>
			<if test="hobey != null">
				hobey = #{hobey,jdbcType=VARCHAR},
			</if>
			<if test="specailreq != null">
				specailReq = #{specailreq,jdbcType=VARCHAR},
			</if>
			<if test="diastolicpre != null">
				diastolicPre = #{diastolicpre,jdbcType=VARCHAR},
			</if>
			<if test="abnormal != null">
				abnormal = #{abnormal,jdbcType=VARCHAR},
			</if>
			<if test="statuses != null">
				statuses = #{statuses,jdbcType=INTEGER},
			</if>
			<if test="notes != null">
				notes = #{notes,jdbcType=VARCHAR},
			</if>
			<if test="cleared != null">
				cleared = #{cleared,jdbcType=INTEGER},
			</if>
			<if test="imageurl != null">
				imageURL = #{imageurl,jdbcType=VARCHAR},
			</if>
			<if test="degreeId != null">
				degree_id = #{degreeId,jdbcType=INTEGER},
			</if>
			<if test="marriageId != null">
				marriage_id = #{marriageId,jdbcType=INTEGER},
			</if>
			<if test="bloodtypeId != null">
				bloodtype_id = #{bloodtypeId,jdbcType=INTEGER},
			</if>
			<if test="rhFlag != null">
				rh_flag = #{rhFlag,jdbcType=INTEGER},
			</if>
			<if test="geneticHistoryFlag != null">
				genetic_history_flag =
				#{geneticHistoryFlag,jdbcType=INTEGER},
			</if>
			<if test="geneticDisease != null">
				genetic_disease = #{geneticDisease,jdbcType=VARCHAR},
			</if>
			<if test="imagedata != null">
				imageData = #{imagedata,jdbcType=LONGVARBINARY},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKeyWithBLOBs" parameterType="domain.olderManage.PensionOlder">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Fri Dec 06 
			09:05:50 CST 2013. -->
		update pension_older
		set name = #{name,jdbcType=VARCHAR},
		inputCode =
		#{inputcode,jdbcType=VARCHAR},
		sex = #{sex,jdbcType=INTEGER},
		IDCardNum
		= #{idcardnum,jdbcType=VARCHAR},
		birthday =
		#{birthday,jdbcType=TIMESTAMP},
		age = #{age,jdbcType=INTEGER},
		phone =
		#{phone,jdbcType=VARCHAR},
		household = #{household,jdbcType=VARCHAR},
		faith = #{faith,jdbcType=VARCHAR},
		nation_id =
		#{nationId,jdbcType=INTEGER},
		politics_id =
		#{politicsId,jdbcType=INTEGER},
		jobs = #{jobs,jdbcType=VARCHAR},
		types =
		#{types,jdbcType=INTEGER},
		sensitives = #{sensitives,jdbcType=VARCHAR},
		hospital = #{hospital,jdbcType=VARCHAR},
		illness =
		#{illness,jdbcType=VARCHAR},
		doctor = #{doctor,jdbcType=VARCHAR},
		medHistory = #{medhistory,jdbcType=VARCHAR},
		pluse =
		#{pluse,jdbcType=INTEGER},
		systolicPres =
		#{systolicpres,jdbcType=VARCHAR},
		hospitalPhone =
		#{hospitalphone,jdbcType=VARCHAR},
		diet = #{diet,jdbcType=VARCHAR},
		characters = #{characters,jdbcType=VARCHAR},
		hobey =
		#{hobey,jdbcType=VARCHAR},
		specailReq = #{specailreq,jdbcType=VARCHAR},
		diastolicPre = #{diastolicpre,jdbcType=VARCHAR},
		abnormal =
		#{abnormal,jdbcType=VARCHAR},
		statuses = #{statuses,jdbcType=INTEGER},
		notes = #{notes,jdbcType=VARCHAR},
		cleared =
		#{cleared,jdbcType=INTEGER},
		imageURL = #{imageurl,jdbcType=VARCHAR},
		degree_id = #{degreeId,jdbcType=INTEGER},
		marriage_id =
		#{marriageId,jdbcType=INTEGER},
		bloodtype_id =
		#{bloodtypeId,jdbcType=INTEGER},
		rh_flag = #{rhFlag,jdbcType=INTEGER},
		genetic_history_flag = #{geneticHistoryFlag,jdbcType=INTEGER},
		genetic_disease = #{geneticDisease,jdbcType=VARCHAR},
		imageData =
		#{imagedata,jdbcType=LONGVARBINARY}
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="domain.olderManage.PensionOlder">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Fri Dec 06 
			09:05:50 CST 2013. -->
		update pension_older
		set name = #{name,jdbcType=VARCHAR},
		inputCode =
		#{inputcode,jdbcType=VARCHAR},
		sex = #{sex,jdbcType=INTEGER},
		IDCardNum
		= #{idcardnum,jdbcType=VARCHAR},
		birthday =
		#{birthday,jdbcType=TIMESTAMP},
		age = #{age,jdbcType=INTEGER},
		phone =
		#{phone,jdbcType=VARCHAR},
		household = #{household,jdbcType=VARCHAR},
		faith = #{faith,jdbcType=VARCHAR},
		nation_id =
		#{nationId,jdbcType=INTEGER},
		politics_id =
		#{politicsId,jdbcType=INTEGER},
		jobs = #{jobs,jdbcType=VARCHAR},
		types =
		#{types,jdbcType=INTEGER},
		sensitives = #{sensitives,jdbcType=VARCHAR},
		hospital = #{hospital,jdbcType=VARCHAR},
		illness =
		#{illness,jdbcType=VARCHAR},
		doctor = #{doctor,jdbcType=VARCHAR},
		medHistory = #{medhistory,jdbcType=VARCHAR},
		pluse =
		#{pluse,jdbcType=INTEGER},
		systolicPres =
		#{systolicpres,jdbcType=VARCHAR},
		hospitalPhone =
		#{hospitalphone,jdbcType=VARCHAR},
		diet = #{diet,jdbcType=VARCHAR},
		characters = #{characters,jdbcType=VARCHAR},
		hobey =
		#{hobey,jdbcType=VARCHAR},
		specailReq = #{specailreq,jdbcType=VARCHAR},
		diastolicPre = #{diastolicpre,jdbcType=VARCHAR},
		abnormal =
		#{abnormal,jdbcType=VARCHAR},
		statuses = #{statuses,jdbcType=INTEGER},
		notes = #{notes,jdbcType=VARCHAR},
		cleared =
		#{cleared,jdbcType=INTEGER},
		imageURL = #{imageurl,jdbcType=VARCHAR},
		degree_id = #{degreeId,jdbcType=INTEGER},
		marriage_id =
		#{marriageId,jdbcType=INTEGER},
		bloodtype_id =
		#{bloodtypeId,jdbcType=INTEGER},
		rh_flag = #{rhFlag,jdbcType=INTEGER},
		genetic_history_flag = #{geneticHistoryFlag,jdbcType=INTEGER},
		genetic_disease = #{geneticDisease,jdbcType=VARCHAR}
		where id =
		#{id,jdbcType=INTEGER}
	</update>
	<!-- 入住申请查询所有申请记录 -->
	<select id="getAllApplications" parameterType="map"
		resultType="service.receptionManage.PensionOlderDomain">
		select pl.`name` AS applyName,
		pl.id as applyId,
		pl.applyTime,
		pl.cleared,
		pl.notes,
		pl.phoneNum,
		pl.relationShip,
		pl.sex as applySex,
		pl.pension_categary as pensionCategary,
		po.*,
		po.politics_Id as politicsId,
		po.nation_Id as nationId,
		pl.send_flag as sendFlag,
		pa.evaluateResult as evaluateresult
		from
		pension_older po,pension_livingapply pl,
		pension_applyevaluate pa
		where
		po.id=pl.older_id
		and pa.apply_id=pl.id
		and po.cleared=2
		and pl.cleared=2
		and po.statuses in(1,2)
		<if test="deptId!=null">
			and pa.dept_id=#{deptId,jdbcType=INTEGER}
		</if>
		<if test="emptId!=null">
			and pa.evaluator_id=#{emptId,jdbcType=INTEGER}
		</if>
		<if test="olderId!=null">
			and po.id=#{olderId,jdbcType=INTEGER}
		</if>
		order by pl.applyTime DESC
	</select>
	<!-- 入住申请，根据条件，查询入住申请记录 -->
	<select id="selectApplications" parameterType="map"
		resultType="service.receptionManage.PensionOlderDomain">
		select pl.`name` AS applyName,
		pl.id as applyId,
		pl.applyTime,
		pl.cleared,
		pl.notes,
		pl.phoneNum,
		pl.relationShip,
		pl.sex as applySex,
		pl.pension_categary as pensionCategary,
		po.*,
		po.politics_Id as politicsId,
		po.nation_Id as nationId,
		pl.send_flag as sendFlag,
		pa.evaluateResult as evaluateresult
		from
		pension_older
		po,pension_livingapply pl,
		pension_applyevaluate pa
		where
		po.id=pl.older_id
		and pa.apply_id=pl.id
		and pl.`name` LIKE
		'%${applier}%'
		and po.cleared=2
		and pl.cleared=2
		and po.statuses in(1,2)
		<if test="personState != null">
			and po.statuses=#{personState}
		</if>
		<if test="types != null">
			and po.types=#{types}
		</if>
		<if test="olderId!=null">
			and po.id=#{olderId,jdbcType=INTEGER}
		</if>
		<if test="startDate != null">
			and unix_timestamp(pl.applyTime)
			&gt;=unix_timestamp(#{startDate})
		</if>
		<if test="endDate != null">
			and unix_timestamp(date_add(#{endDate}, interval 1 day))
			&gt;=unix_timestamp(pl.applyTime)
		</if>
		<if test="emptId!=null">
			and pa.evaluator_id=#{emptId,jdbcType=INTEGER}
		</if>
		<if test="deptId!=null">
			and pa.dept_id=#{deptId,jdbcType=INTEGER}
		</if>
		order by pl.applyTime DESC
	</select>
	<!-- 申请评估，根据条件查询入住申请评估记录 -->
	<select id="selectEvaApplications" parameterType="map"
		resultType="service.receptionManage.PensionOlderDomain">
		select pl.`name` AS applyName,
		pl.id as applyId,
		pl.applyTime,
		pl.cleared,
		pl.notes,
		pl.phoneNum,
		pl.sex as applySex,
		pl.relationShip,
		pa.evaluateResult as evaluateresult,
		pa.notes as evaluateNotes,
		pa.dept_id as deptId,
		pa.id as evaluateId,
		po.*,
		pa.*,
		po.politics_Id as
		politicsId,
		po.nation_Id as nationId,
		po.sex as oldSex,
		pb.evaluateResult as finalResult,
		pdn.type as nationName,
		pdp.type as
		politicName

		from pension_older po,
		pension_livingapply pl,
		pension_applyevaluate pa,
		pension_applyevaluate
		pb,
		pension_dic_nation
		pdn,
		pension_dic_politics
		pdp
		where
		po.id=pl.older_id
		and pl.id=pa.apply_id
		and pb.apply_id=pl.id
		and
		pdp.id=po.politics_id
		and po.nation_id=pdn.id
		<if test="personState != null">
			and po.statuses=#{personState}
		</if>
		<if test="pensionOlderId != null">
			and po.id=#{pensionOlderId,jdbcType=INTEGER}
		</if>
		<if test="leadEmptId != null">
			and pb.evaluator_id=#{leadEmptId}
		</if>
		<if test="leadDeptId != null">
			and pb.dept_id=#{leadDeptId}
		</if>
		<if test="pensionOlderId != null">
			and po.id=#{pensionOlderId,jdbcType=INTEGER}
		</if>
		and po.cleared=2 and pl.cleared=2 and po.statuses in(1,2) and
		pa.dept_id=#{deptId,jdbcType=INTEGER}
		<if test="startDate != null">
			and unix_timestamp(pl.applyTime)
			&gt;=unix_timestamp(#{startDate})
		</if>
		<if test="endDate != null">
			and unix_timestamp(date_add(#{endDate}, interval 1 day))
			&gt;=unix_timestamp(pl.applyTime)
		</if>
		order by pl.applyTime DESC
	</select>


	<select id="selectPensionInfomation" parameterType="java.lang.Integer"
		resultType="service.receptionManage.PensionOlderDomain">
		select po.*,pl.applyTime,pl.`name` as
		applyName,pl.phoneNum as
		phoneNum,pl.relationShip as relationShip,pl.sex as applySex,
		bed.`name` as bedName,floor.`name` as floorName,build.`name` as
		buildName,
		room.`name` as roomName,pdb.`level` as bedType,pr.insurance
		as insurance,pr.medType as medType,
		pr.visitTime,pe.`name` as
		nurseName,pr.contractNum,
		pdn.`level` as nurseType,
		pr.contractNum,
		po.nation_id as nationId,
		po.politics_id as politicsId
		from
		pension_older po,pension_livingapply
		pl,pension_livingrecord pr,
		pension_dic_bedtype pdb,
		pension_bed bed,
		pension_room room,
		pension_floor floor,
		pension_building build,
		pension_employee pe,
		pension_dic_nurse pdn
		where po.id=pl.older_id and po.id=pr.older_id
		and
		pdb.id=pr.bedType_id
		and bed.id=pr.bed_id
		and bed.room_id=room.id
		and
		room.floor_id=floor.id
		and build.id=floor.build_id
		and pe.id=pr.nurse_id
		and pdn.id=pr.nurseLevel_id
		<if test="olderId!=null">
			and po.id=#{olderId,jdbcType=INTEGER}
		</if>
	</select>
	<select id="selectOlderRecords" parameterType="java.util.Map"
		resultType="service.receptionManage.PensionOlderDomain">
		select pb.id as bedId,
		pb.name as bedName,
		pb.roomName,
		pb.floorName,
		pb.buildName,
		po.id,
		po.name,
		plr.visitTime,
		pv.key_id as keyId
		from pension_older po,
		pension_livingRecord plr,
		pension_bed
		pb,
		pension_visitrecord pv
		where
		po.id = plr.older_id
		and pb.id=plr.bed_id
		and plr.cleared = 2
		and
		pv.key_id=plr.id
		<if test="visitCatalog != null &amp;&amp; visitCatalog != ''">
			and pv.visitType= #{visitCatalog}
		</if>
		<if test="visitFlag != null &amp;&amp; visitFlag != ''">
			and pv.handle_flag= #{visitFlag}
		</if>
		<if test="startDate != null">
			and unix_timestamp(plr.visitTime)
			&gt;=unix_timestamp(#{startDate})
		</if>
		<if test="endDate != null">
			and unix_timestamp(#{endDate})
			&gt;=unix_timestamp(plr.visitTime)
		</if>

		union

		select pb.id as bedId,
		pb.name as bedName,
		pb.roomName,
		pb.floorName,
		pb.buildName,
		po.id,
		po.name,
		pl.realBackTime as visitTime,
		pv.key_id as keyId
		from
		pension_older po,
		pension_livingRecord plr,
		pension_leave pl,
		pension_bed pb,
		pension_visitrecord pv
		where po.id
		=plr.older_id
		and
		pb.id=plr.bed_id
		and plr.cleared = 2
		and pv.key_id=pl.id
		and
		pl.older_id=po.id
		<if test="visitCatalog != null &amp;&amp; visitCatalog != ''">
			and pv.visitType= #{visitCatalog}
		</if>
		<if test="visitFlag != null &amp;&amp; visitFlag != ''">
			and pv.handle_flag= #{visitFlag}
		</if>
		<if test="startDate != null">
			and unix_timestamp(pl.realBackTime)
			&gt;=unix_timestamp(#{startDate})
		</if>
		<if test="endDate != null">
			and unix_timestamp(#{endDate})
			&gt;=unix_timestamp(pl.realBackTime)
		</if>

		union

		select pb.id as bedId,
		pb.name as bedName,
		pb.roomName,
		pb.floorName,
		pb.buildName,
		po.id,
		po.name,
		ph.backTime as visitTime,
		pv.key_id as keyId
		from
		pension_older po,
		pension_livingRecord plr,
		pension_hospitalizeregister
		ph,
		pension_bed pb,
		pension_visitrecord pv
		where po.id = plr.older_id
		and
		pb.id=plr.bed_id
		and plr.cleared = 2
		and
		pv.key_id=ph.id
		and
		ph.older_id=po.id
		<if test="visitCatalog != null &amp;&amp; visitCatalog != ''">
			and pv.visitType= #{visitCatalog}
		</if>
		<if test="visitFlag != null &amp;&amp; visitFlag != ''">
			and pv.handle_flag= #{visitFlag}
		</if>
		<if test="startDate != null">
			and unix_timestamp(ph.backTime)
			&gt;=unix_timestamp(#{startDate})
		</if>
		<if test="endDate != null">
			and unix_timestamp(#{endDate})
			&gt;=unix_timestamp(ph.backTime)
		</if>
		order by visitTime desc
	</select>


	<select id="selectOlderRecordsById" parameterType="java.util.Map"
		resultType="service.receptionManage.PensionOlderDomain">
		select pb.id as bedId,
		pb.name as bedName,
		pb.roomName,
		pb.floorName,
		pb.buildName,
		po.id,
		po.name,
		plr.visitTime
		from pension_older po,
		pension_livingRecord plr,
		pension_bed pb,
		pension_visitrecord pv
		where
		po.id = plr.older_id
		and pb.id=plr.bed_id
		and plr.cleared = 2
		and
		pv.key_id=plr.id
		and pv.handle_flag=2
		and pv.visitType=1
		<if test="olderId != null &amp;&amp; olderId != ''">
			and plr.older_id = #{olderId,jdbcType=INTEGER}
		</if>
		<if test="deptId != null &amp;&amp; deptId != ''">
			and pv.dept_id = #{deptId,jdbcType=INTEGER}
		</if>
		<if test="userId != null &amp;&amp; userId != ''">
			and pv.visitor_id = #{userId,jdbcType=INTEGER}
		</if>

		union

		select pb.id as bedId,
		pb.name as bedName,
		pb.roomName,
		pb.floorName,
		pb.buildName,
		po.id,
		po.name,
		plr.visitTime
		from
		pension_older po,
		pension_livingRecord plr,
		pension_leave pl,
		pension_bed pb,
		pension_visitrecord pv
		where po.id =plr.older_id
		and
		pb.id=plr.bed_id
		and plr.cleared = 2
		and pv.key_id=pl.id
		and
		pv.handle_flag=2
		and pv.visitType=2
		and pl.older_id=po.id
		<if test="olderId != null &amp;&amp; olderId != ''">
			and plr.older_id = #{olderId,jdbcType=INTEGER}
		</if>
		<if test="deptId != null &amp;&amp; deptId != ''">
			and pv.dept_id = #{deptId,jdbcType=INTEGER}
		</if>


		union

		select pb.id as bedId,
		pb.name as bedName,
		pb.roomName,
		pb.floorName,
		pb.buildName,
		po.id,
		po.name,
		plr.visitTime
		from
		pension_older po,
		pension_livingRecord plr,
		pension_hospitalizeregister
		ph,
		pension_bed pb,
		pension_visitrecord pv
		where po.id = plr.older_id
		and
		pb.id=plr.bed_id
		and plr.cleared = 2
		and pv.key_id=ph.id
		and
		pv.handle_flag=2
		and pv.visitType=3
		and ph.older_id=po.id
		<if test="olderId != null &amp;&amp; olderId != ''">
			and plr.older_id = #{olderId,jdbcType=INTEGER}
		</if>
		<if test="deptId != null &amp;&amp; deptId != ''">
			and pv.dept_id = #{deptId,jdbcType=INTEGER}
		</if>
		order by visitTime desc
	</select>

	<resultMap id="BaseResultMapExtand" type="domain.olderManage.PensionOlder">
		<id column="id" jdbcType="INTEGER" property="id" />
		<result column="name" jdbcType="VARCHAR" property="name" />
		<result column="inputCode" jdbcType="VARCHAR" property="inputcode" />
		<result column="sex" jdbcType="INTEGER" property="sex" />
		<result column="IDCardNum" jdbcType="VARCHAR" property="idcardnum" />
		<result column="birthday" jdbcType="TIMESTAMP" property="birthday" />
		<result column="phone" jdbcType="VARCHAR" property="phone" />
		<result column="household" jdbcType="VARCHAR" property="household" />
		<result column="faith" jdbcType="VARCHAR" property="faith" />
		<result column="nation_id" jdbcType="INTEGER" property="nationId" />
		<result column="politics_id" jdbcType="INTEGER" property="politicsId" />
		<result column="jobs" jdbcType="VARCHAR" property="jobs" />
		<result column="types" jdbcType="INTEGER" property="types" />
		<result column="sensitives" jdbcType="VARCHAR" property="sensitives" />
		<result column="hospital" jdbcType="VARCHAR" property="hospital" />
		<result column="illness" jdbcType="VARCHAR" property="illness" />
		<result column="doctor" jdbcType="VARCHAR" property="doctor" />
		<result column="medHistory" jdbcType="VARCHAR" property="medhistory" />
		<result column="pluse" jdbcType="INTEGER" property="pluse" />
		<result column="systolicPres" jdbcType="VARCHAR" property="systolicpres" />
		<result column="hospitalPhone" jdbcType="VARCHAR" property="hospitalphone" />
		<result column="diet" jdbcType="VARCHAR" property="diet" />
		<result column="characters" jdbcType="VARCHAR" property="characters" />
		<result column="hobey" jdbcType="VARCHAR" property="hobey" />
		<result column="specailReq" jdbcType="VARCHAR" property="specailreq" />
		<result column="diastolicPre" jdbcType="VARCHAR" property="diastolicpre" />
		<result column="abnormal" jdbcType="VARCHAR" property="abnormal" />
		<result column="statuses" jdbcType="INTEGER" property="statuses" />
		<result column="notes" jdbcType="VARCHAR" property="notes" />
		<result column="cleared" jdbcType="INTEGER" property="cleared" />

		<!-- add by mary 2013-9-25 -->
		<result column="buildingName" jdbcType="VARCHAR" property="buildName" />
		<result column="floorName" jdbcType="VARCHAR" property="floorName" />
		<result column="roomName" jdbcType="VARCHAR" property="roomName" />
		<result column="bedName" jdbcType="VARCHAR" property="bedName" />
		<result column="visitTime" jdbcType="TIMESTAMP" property="visitDate" />
		<result column="bedType" jdbcType="VARCHAR" property="bedLevel" />
		<result column="nurse" jdbcType="VARCHAR" property="nurseLevel" />
		<result column="status" jdbcType="INTEGER" property="status" />
		<result column="status_name" jdbcType="VARCHAR" property="statusName" />

	</resultMap>


	<!-- 查询押金缴纳主记录 add by Mary 2013-9-23 -->

	<select id="selectPaymentOlders" parameterType="java.util.Map"
		resultMap="BaseResultMapExtand">

		select older.*,
		bed.buildName as buildingName,
		bed.floorName as
		floorName,
		bed.roomName as roomName,
		bed.`name` as bedName,
		record.visitTime as visitTime,
		bedType.`level` as bedType,
		nurse.`level` as nurse,
		older.statuses as status,
		case older.statuses
		WHEN 3 then '在院' when 4 then '请假' WHEN 5 then '待结算'
		else '已离院' end as
		status_name
		from pension_older older
		LEFT JOIN pension_livingrecord
		record
		ON older.id = record.older_id
		LEFT JOIN pension_bed bed
		ON bed.id
		= record.bed_id
		LEFT JOIN pension_dic_bedtype bedType
		ON bedType.id =
		record.bedType_id
		LEFT JOIN pension_dic_nurse nurse
		ON nurse.id =
		record.nurseLevel_id
		where older.statuses in (3,4,5,6)
		<if test="olderId != null">

			and older.id=#{olderId,jdbcType=DECIMAL}
		</if>
		<if test="status != null">

			and older.statuses=#{status,jdbcType=DECIMAL}
		</if>
		and older.cleared = 2
	</select>
	<select id="selectOldersByBed" parameterType="java.util.Map"
		resultMap="BaseResultMap">
		select o.id, o.name, o.sex, o.birthday, o.phone,o.statuses from
		pension_livingrecord l
		left join pension_older o on l.older_id = o.id
		left join pension_bed b on l.bed_id = b.id

		where o.statuses in (3,4)
		<if test="buildName != null">
			and b.buildName=#{buildName,jdbcType=VARCHAR}
		</if>
		<if test="floorName != null">
			and b.floorName=#{floorName,jdbcType=VARCHAR}
		</if>
		<if test="roomName != null">
			and b.roomName=#{roomName,jdbcType=VARCHAR}
		</if>
		<if test="bedName != null">
			and b.name=#{bedName,jdbcType=VARCHAR}
		</if>
		;
	</select>

	<select id="selectOlderTotalFee" parameterType="java.util.Map"

		resultType="service.system.FeeEchartsDeman">
		select itemName as itemName,
		totalFees as totalFee
		from
		(
		select pnpd.item_name as itemName,pnpd.totalFees as totalFees from
		pension_older po
		join pension_normalpayment pnp on po.id = pnp.older_id
		and pnp.cleared = 2 and pnp.isPay = 1
		join pension_normalpaymentdetail
		pnpd on pnpd.payment_id = pnp.id and pnp.cleared = 2
		<if test="olderId != null ">
			where po.id = #{olderId}
		</if>
		) a union (
		select ptpd.item_name as itemName,ptpd.totalFees as
		totalFees from
		pension_older po
		join pension_temppayment ptp on po.id = ptp.older_id and
		ptp.cleared = 2 and ptp.isPay = 1
		join pension_temppaymentdetail ptpd
		on ptp.id = ptpd.payment_id and ptpd.cleared = 2
		<if test="olderId != null ">
			where po.id = #{olderId}
		</if>
		)

	</select>
	
		<select id="selectOlderByRoomId" parameterType="java.lang.Long"
		resultType="service.receptionManage.PensionOlderDomain">
		SELECT po.id,po.name,po.age
		from pension_older po,
		pension_livingrecord pl,
		pension_bed pb,
		pension_room pr
		where
		pl.older_id=po.id
		and po.cleared=2
		and pl.cleared=2
		and pb.cleared=2
		and
		pr.cleared=2
		and pb.id=pl.bed_id
		and pr.id=pb.room_id
		and
		pr.id=#{roomId,jdbcType=INTEGER}
	</select>

	<select id="selectOlderList" parameterType="java.lang.Long"
		resultType="service.receptionManage.PensionOlderDomain">
		SELECT po.id,po.name,po.age,
		case po.statuses
		WHEN 3 then
		'在院' when 4 then '请假' WHEN 5 then '待结算'
		else '已离院' end as
		olderState,
		if(po.sex=1,'男','女')as oldSex,
		pb.name as bedName,
		pl.visitTime,
		pe.name
		as nurseName,
		pn.level as
		nurseType
		from pension_older
		po,pension_livingrecord pl,
		pension_bed pb,
		pension_employee pe,
		pension_dic_nurse pn
		where
		pl.older_id=po.id and
		po.cleared=2
		and
		pl.cleared=2 and pb.cleared=2
		and
		pb.id=pl.bed_id
		and
		pe.cleared=2
		and
		pe.id=pl.nurse_id
		and
		pn.id=pl.nurseLevel_id
		and
		pl.bed_id=#{bedId,jdbcType=INTEGER}
	</select>
</mapper>