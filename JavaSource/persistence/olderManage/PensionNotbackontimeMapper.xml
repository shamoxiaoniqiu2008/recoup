<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="persistence.olderManage.PensionNotbackontimeMapper">
  <resultMap id="BaseResultMap" type="domain.olderManage.PensionNotbackontime">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Aug 30 11:28:06 CST 2013.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="older_id" jdbcType="INTEGER" property="olderId" />
    <result column="leave_id" jdbcType="INTEGER" property="leaveId" />
    <result column="reason" jdbcType="VARCHAR" property="reason" />
    <result column="oldBackTime" jdbcType="TIMESTAMP" property="oldbacktime" />
    <result column="newBackTime" jdbcType="TIMESTAMP" property="newbacktime" />
    <result column="notes" jdbcType="VARCHAR" property="notes" />
    <result column="cleared" jdbcType="INTEGER" property="cleared" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Aug 30 11:28:06 CST 2013.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Aug 30 11:28:06 CST 2013.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Aug 30 11:28:06 CST 2013.
    -->
    id, older_id, leave_id, reason, oldBackTime, newBackTime, notes, cleared
  </sql>
  <select id="selectByExample" parameterType="domain.olderManage.PensionNotbackontimeExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Aug 30 11:28:06 CST 2013.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from pension_notbackontime
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Aug 30 11:28:06 CST 2013.
    -->
    select 
    <include refid="Base_Column_List" />
    from pension_notbackontime
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Aug 30 11:28:06 CST 2013.
    -->
    delete from pension_notbackontime
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="domain.olderManage.PensionNotbackontimeExample">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Aug 30 11:28:06 CST 2013.
    -->
    delete from pension_notbackontime
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="domain.olderManage.PensionNotbackontime">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Aug 30 11:28:06 CST 2013.
    -->
    insert into pension_notbackontime (id, older_id, leave_id, 
      reason, oldBackTime, newBackTime, 
      notes, cleared)
    values (#{id,jdbcType=INTEGER}, #{olderId,jdbcType=INTEGER}, #{leaveId,jdbcType=INTEGER}, 
      #{reason,jdbcType=VARCHAR}, #{oldbacktime,jdbcType=TIMESTAMP}, #{newbacktime,jdbcType=TIMESTAMP}, 
      #{notes,jdbcType=VARCHAR}, #{cleared,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="domain.olderManage.PensionNotbackontime">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Aug 30 11:28:06 CST 2013.
    -->
    insert into pension_notbackontime
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="olderId != null">
        older_id,
      </if>
      <if test="leaveId != null">
        leave_id,
      </if>
      <if test="reason != null">
        reason,
      </if>
      <if test="oldbacktime != null">
        oldBackTime,
      </if>
      <if test="newbacktime != null">
        newBackTime,
      </if>
      <if test="notes != null">
        notes,
      </if>
      <if test="cleared != null">
        cleared,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="olderId != null">
        #{olderId,jdbcType=INTEGER},
      </if>
      <if test="leaveId != null">
        #{leaveId,jdbcType=INTEGER},
      </if>
      <if test="reason != null">
        #{reason,jdbcType=VARCHAR},
      </if>
      <if test="oldbacktime != null">
        #{oldbacktime,jdbcType=TIMESTAMP},
      </if>
      <if test="newbacktime != null">
        #{newbacktime,jdbcType=TIMESTAMP},
      </if>
      <if test="notes != null">
        #{notes,jdbcType=VARCHAR},
      </if>
      <if test="cleared != null">
        #{cleared,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="domain.olderManage.PensionNotbackontimeExample" resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Aug 30 11:28:06 CST 2013.
    -->
    select count(*) from pension_notbackontime
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Aug 30 11:28:06 CST 2013.
    -->
    update pension_notbackontime
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.olderId != null">
        older_id = #{record.olderId,jdbcType=INTEGER},
      </if>
      <if test="record.leaveId != null">
        leave_id = #{record.leaveId,jdbcType=INTEGER},
      </if>
      <if test="record.reason != null">
        reason = #{record.reason,jdbcType=VARCHAR},
      </if>
      <if test="record.oldbacktime != null">
        oldBackTime = #{record.oldbacktime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.newbacktime != null">
        newBackTime = #{record.newbacktime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.notes != null">
        notes = #{record.notes,jdbcType=VARCHAR},
      </if>
      <if test="record.cleared != null">
        cleared = #{record.cleared,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Aug 30 11:28:06 CST 2013.
    -->
    update pension_notbackontime
    set id = #{record.id,jdbcType=INTEGER},
      older_id = #{record.olderId,jdbcType=INTEGER},
      leave_id = #{record.leaveId,jdbcType=INTEGER},
      reason = #{record.reason,jdbcType=VARCHAR},
      oldBackTime = #{record.oldbacktime,jdbcType=TIMESTAMP},
      newBackTime = #{record.newbacktime,jdbcType=TIMESTAMP},
      notes = #{record.notes,jdbcType=VARCHAR},
      cleared = #{record.cleared,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="domain.olderManage.PensionNotbackontime">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Aug 30 11:28:06 CST 2013.
    -->
    update pension_notbackontime
    <set>
      <if test="olderId != null">
        older_id = #{olderId,jdbcType=INTEGER},
      </if>
      <if test="leaveId != null">
        leave_id = #{leaveId,jdbcType=INTEGER},
      </if>
      <if test="reason != null">
        reason = #{reason,jdbcType=VARCHAR},
      </if>
      <if test="oldbacktime != null">
        oldBackTime = #{oldbacktime,jdbcType=TIMESTAMP},
      </if>
      <if test="newbacktime != null">
        newBackTime = #{newbacktime,jdbcType=TIMESTAMP},
      </if>
      <if test="notes != null">
        notes = #{notes,jdbcType=VARCHAR},
      </if>
      <if test="cleared != null">
        cleared = #{cleared,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="domain.olderManage.PensionNotbackontime">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Aug 30 11:28:06 CST 2013.
    -->
    update pension_notbackontime
    set older_id = #{olderId,jdbcType=INTEGER},
      leave_id = #{leaveId,jdbcType=INTEGER},
      reason = #{reason,jdbcType=VARCHAR},
      oldBackTime = #{oldbacktime,jdbcType=TIMESTAMP},
      newBackTime = #{newbacktime,jdbcType=TIMESTAMP},
      notes = #{notes,jdbcType=VARCHAR},
      cleared = #{cleared,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectLateOlderRecords" parameterType="java.util.Map" resultType="service.olderManage.PensionNotbackontimeExtend">
	  	select pb.id             as bedId,
	       pb.name           as bedName,
	       pr.id             as roomId,
	       pr.name           as roomName,
	       pf.id             as floorId,
	       pf.name           as floorName,
	       pbuilding.id      as buildId,
	       pbuilding.name    as buildName,
	       pl.realLeaveTime  as realleavetime,
	       pnbot.reason      as reason,
	       pnbot.oldBackTime as oldbacktime,
	       pnbot.newBackTime as newbacktime,
	       pl.escortName     as escortname,
	       pl.escortPhone    as escortphone,
	       pnbot.older_id    as olderId,
	       po.name           as olderName,
	       pl.id             as leaveId,
		   pl.isBacked	  	 as isbacked,
	       pnbot.cleared     as cleared,
	       pnbot.id          as id
	  from pension_leave pl
	  join pension_older po
	    on pl.older_id = po.id
	  join pension_livingRecord plr
	    on pl.older_id = plr.older_id
	  join pension_bed pb
	    on plr.bed_id = pb.id
	  join pension_room pr
	    on pb.room_id = pr.id
	  join pension_floor pf
	    on pr.floor_id = pf.id
	  join pension_building pbuilding
	    on pf.build_id = pbuilding.id
	  join pension_notbackontime pnbot
	    on pnbot.leave_id = pl.id
	 where pnbot.cleared = 2
	   and pl.isLeaved = 1
  	 <if test="startDate != null &amp;&amp; startDate != ''">
		  and pnbot.oldbacktime &gt;= #{startDate,jdbcType=TIMESTAMP}
	 </if>
	 <if test="endDate != null &amp;&amp; endDate != ''">
		  and pnbot.oldbacktime &lt;= #{endDate,jdbcType=TIMESTAMP}
	 </if>
	 <if test="olderId != null &amp;&amp; olderId != ''">
	 	  and pnbot.older_id = #{olderId,jdbcType=INTEGER}
	 </if>
  	  <if test="backFlag != null &amp;&amp; backFlag != ''">
	 	  and pl.isBacked = #{backFlag,jdbcType=INTEGER}
	 </if>
	 order by oldbacktime desc
  </select>
   <select id="fillField" parameterType="Long" resultType="service.olderManage.PensionNotbackontimeExtend">
  	select pb.id              as bedId,
		   pb.name			  as bedName,
	       pr.id              as roomId,
	       pr.name			  as roomName,
		   pf.id     	      as floorId,
	       pf.name			  as floorName,
		   pbuilding.id       as buildId,
		   pbuilding.name	  as buildName,
	       po.name			  as olderName,
	       pl.escortName      as escortname,
	       pl.escortPhone     as escortphone,
	       pl.realleavetime   as realleavetime,
	       pl.expectBackTime  as oldbacktime,
	       pl.id              as leaveId
	       
	  from pension_leave pl
	  join pension_older po
	    on pl.older_id = po.id
	  join pension_livingRecord plr
	    on pl.older_id = plr.older_id
	  join pension_bed pb
	    on plr.bed_id = pb.id
	  join pension_room pr
	    on pb.room_id = pr.id
	  join pension_floor pf
	    on pr.floor_id = pf.id
	  join pension_building pbuilding
	    on pf.build_id = pbuilding.id
	 where 1 = 1
	 <if test="olderId != null &amp;&amp; olderId != ''">
	 	  and po.id = #{olderId,jdbcType=INTEGER}
	 </if>
  	
  </select>
</mapper>