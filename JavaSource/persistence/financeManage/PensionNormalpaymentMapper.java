package persistence.financeManage;

import domain.financeManage.PensionNormalpayment;
import domain.financeManage.PensionNormalpaymentExample;
import domain.reportManage.PaymentReport;

import java.util.Date;
import java.util.List;

import javax.annotation.PostConstruct;

import org.apache.ibatis.annotations.Param;

import service.financeManage.NormalPayDomain;

public interface PensionNormalpaymentMapper {

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_normalpayment
	 * @mbggenerated  Thu Dec 12 16:42:38 CST 2013
	 */
	int countByExample(PensionNormalpaymentExample example);




	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_normalpayment
	 * @mbggenerated  Thu Dec 12 16:42:38 CST 2013
	 */
	int deleteByExample(PensionNormalpaymentExample example);




	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_normalpayment
	 * @mbggenerated  Thu Dec 12 16:42:38 CST 2013
	 */
	int deleteByPrimaryKey(Long id);




	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_normalpayment
	 * @mbggenerated  Thu Dec 12 16:42:38 CST 2013
	 */
	int insert(PensionNormalpayment record);




	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_normalpayment
	 * @mbggenerated  Thu Dec 12 16:42:38 CST 2013
	 */
	int insertSelective(PensionNormalpayment record);




	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_normalpayment
	 * @mbggenerated  Thu Dec 12 16:42:38 CST 2013
	 */
	List<PensionNormalpayment> selectByExample(
			PensionNormalpaymentExample example);




	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_normalpayment
	 * @mbggenerated  Thu Dec 12 16:42:38 CST 2013
	 */
	PensionNormalpayment selectByPrimaryKey(Long id);




	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_normalpayment
	 * @mbggenerated  Thu Dec 12 16:42:38 CST 2013
	 */
	int updateByExampleSelective(@Param("record") PensionNormalpayment record,
			@Param("example") PensionNormalpaymentExample example);




	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_normalpayment
	 * @mbggenerated  Thu Dec 12 16:42:38 CST 2013
	 */
	int updateByExample(@Param("record") PensionNormalpayment record,
			@Param("example") PensionNormalpaymentExample example);




	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_normalpayment
	 * @mbggenerated  Thu Dec 12 16:42:38 CST 2013
	 */
	int updateByPrimaryKeySelective(PensionNormalpayment record);




	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pension_normalpayment
	 * @mbggenerated  Thu Dec 12 16:42:38 CST 2013
	 */
	int updateByPrimaryKey(PensionNormalpayment record);




	/**
     * 按条件查询日常缴费主记录 add by Mary 2013-8-28
	 * @param paidFlag 
	 * @param endDate 
	 * @param startDate 
     */
    List<PensionNormalpayment> selectNormalPaymentInfo(@Param("olderId")Integer olderId,@Param("orderName")String orderName, @Param("paidFlag")Integer paidFlag, @Param("startDate")Date startDate, @Param("endDate")Date endDate);
    


    
	 /**
     * 按照老人Id查询老人信息 add by Mary 2013-8-28
     */
	List<PensionNormalpayment> selectInfo(Long olderId);
	/**
	 * 按照老人ID查询老人日常收费信息
	 * @param olderId
	 * @return
	 */
	List<NormalPayDomain> selectNomalRecords(@Param("olderId") Long olderId);

	/**
     * 按照老人Id查询老人缴费主记�?add by Mary 2013-9-22
     */
	List<PensionNormalpayment> selectNormalPaymentList(@Param("olderId")Long olderId);

	
	/**
     * 按照日期和员工编号 部门编号 查询缴费信息 add by Mary 2013-9-22
     */
	List<PensionNormalpayment> selectNormalBalancePayments(@Param("balanceStartDate")Date balanceStartDate,
			@Param("balanceEndDate")Date balanceEndDate, 
			@Param("empId")Long empId, 
			@Param("deptId")Long deptId,
			@Param("settleFlag")Integer settleFlag);

	/**
	 * 按截止日期查询老人已缴费明细 add by mary 2013-11-19
	 * @param deadLine
	 * @param endDate 
	 * @return
	 */
	List<PaymentReport> selectPaidReportMain(@Param("startDate")Date startDate, @Param("endDate")Date endDate);
	
	/**
	 * 按截止日期查询老人已缴费明细 add by mary 2013-11-19
	 * @param deadLine
	 * @param endDate 
	 * @return
	 */
	List<PaymentReport> selectPaidReport(@Param("startDate")Date startDate, @Param("endDate")Date endDate,@Param("empId")Long empId);
	
	/**
	 * 按老人查询起至日期内老人已缴费明细 add by mary 2013-11-19
	 * @param deadLine
	 * @param endDate 
	 * @return
	 */
	List<PaymentReport> selectUnpaidReportMain(@Param("startDate")Date startDate, @Param("endDate")Date endDate);
	
	/**
	 * 按截止日期查询老人欠费费明细 add by mary 2013-11-19
	 * @param deadLine
	 * @param endDate 
	 * @param olderId 
	 * @return
	 */
	List<PaymentReport> selectUnpaidReport(@Param("startDate")Date startDate,@Param("endDate")Date endDate, @Param("olderId")Long olderId);
}
